[
  {
    "type": "impl",
    "name": "UpgradeableImpl",
    "interface_name": "openzeppelin_upgrades::interface::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "openzeppelin_upgrades::interface::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableMixinImpl",
    "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
  },
  {
    "type": "interface",
    "name": "openzeppelin_access::ownable::interface::OwnableABI",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transferOwnership",
        "inputs": [
          {
            "name": "newOwner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounceOwnership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "VrfProviderImpl",
    "interface_name": "cartridge_vrf::vrf_provider::vrf_provider_component::IVrfProvider"
  },
  {
    "type": "enum",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::Source",
    "variants": [
      {
        "name": "Nonce",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "Salt",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "struct",
    "name": "stark_vrf::ecvrf::Point",
    "members": [
      {
        "name": "x",
        "type": "core::felt252"
      },
      {
        "name": "y",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "struct",
    "name": "stark_vrf::ecvrf::Proof",
    "members": [
      {
        "name": "gamma",
        "type": "stark_vrf::ecvrf::Point"
      },
      {
        "name": "c",
        "type": "core::felt252"
      },
      {
        "name": "s",
        "type": "core::felt252"
      },
      {
        "name": "sqrt_ratio_hint",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "struct",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::PublicKey",
    "members": [
      {
        "name": "x",
        "type": "core::felt252"
      },
      {
        "name": "y",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "interface",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::IVrfProvider",
    "items": [
      {
        "type": "function",
        "name": "request_random",
        "inputs": [
          {
            "name": "caller",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "source",
            "type": "cartridge_vrf::vrf_provider::vrf_provider_component::Source"
          }
        ],
        "outputs": [],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "submit_random",
        "inputs": [
          {
            "name": "seed",
            "type": "core::felt252"
          },
          {
            "name": "proof",
            "type": "stark_vrf::ecvrf::Proof"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "consume_random",
        "inputs": [
          {
            "name": "source",
            "type": "cartridge_vrf::vrf_provider::vrf_provider_component::Source"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "assert_consumed",
        "inputs": [
          {
            "name": "seed",
            "type": "core::felt252"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_public_key",
        "inputs": [],
        "outputs": [
          {
            "type": "cartridge_vrf::vrf_provider::vrf_provider_component::PublicKey"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_public_key",
        "inputs": [
          {
            "name": "new_pubkey",
            "type": "cartridge_vrf::vrf_provider::vrf_provider_component::PublicKey"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "pubkey",
        "type": "cartridge_vrf::vrf_provider::vrf_provider_component::PublicKey"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnershipTransferred",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "nested"
      },
      {
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::PublicKeyChanged",
    "kind": "struct",
    "members": [
      {
        "name": "pubkey",
        "type": "cartridge_vrf::vrf_provider::vrf_provider_component::PublicKey",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::SubmitRandom",
    "kind": "struct",
    "members": [
      {
        "name": "seed",
        "type": "core::felt252",
        "kind": "key"
      },
      {
        "name": "proof",
        "type": "stark_vrf::ecvrf::Proof",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "PublicKeyChanged",
        "type": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::PublicKeyChanged",
        "kind": "nested"
      },
      {
        "name": "SubmitRandom",
        "type": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::SubmitRandom",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "cartridge_vrf::vrf_provider::vrf_provider::VrfProvider::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnableEvent",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "VrfProviderEvent",
        "type": "cartridge_vrf::vrf_provider::vrf_provider_component::VrfProviderComponent::Event",
        "kind": "flat"
      }
    ]
  }
]