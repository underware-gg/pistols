{
  "world": {
    "class_hash": "0x139239a99d627697b19b9856beaef7896fc75375caf3d750dd76982a7afeb78",
    "address": "0x8ea585afa76d3a936ef5746c6176b70100df25efc34e45f8f80944bb6550",
    "seed": "pistols",
    "name": "Pistols at 10 Blocks",
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "historical",
                "type": "core::bool"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "historical",
            "type": "core::bool",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0x20317ad38ed1500a04aba7618846d7985dca291cd25d616cf60dee247e0fb6d",
      "class_hash": "0x5d1b23bd475e37b8c0d098fa6e8f5192e6ff9e08332aaa8cf22d20c5e4c75b5",
      "abi": [
        {
          "type": "impl",
          "name": "admin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "treasury_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "lords_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "AdminImpl",
          "interface_name": "pistols::systems::admin::IAdmin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::config::Config",
          "members": [
            {
              "name": "key",
              "type": "core::integer::u8"
            },
            {
              "name": "treasury_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "lords_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "is_paused",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::models::table::TableType",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Classic",
              "type": "()"
            },
            {
              "name": "Tournament",
              "type": "()"
            },
            {
              "name": "IRLTournament",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::hand::DeckType",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Classic",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::table::TableConfig",
          "members": [
            {
              "name": "table_id",
              "type": "core::felt252"
            },
            {
              "name": "description",
              "type": "core::felt252"
            },
            {
              "name": "table_type",
              "type": "pistols::models::table::TableType"
            },
            {
              "name": "deck_type",
              "type": "pistols::types::cards::hand::DeckType"
            },
            {
              "name": "fee_collector_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_min",
              "type": "core::integer::u128"
            },
            {
              "name": "is_open",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::table::TableAdmittance",
          "members": [
            {
              "name": "table_id",
              "type": "core::felt252"
            },
            {
              "name": "accounts",
              "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
            },
            {
              "name": "duelists",
              "type": "core::array::Array::<core::integer::u128>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::admin::IAdmin",
          "items": [
            {
              "type": "function",
              "name": "am_i_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "granted",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_config",
              "inputs": [
                {
                  "name": "config",
                  "type": "pistols::models::config::Config"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_paused",
              "inputs": [
                {
                  "name": "paused",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "open_table",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "is_open",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_table",
              "inputs": [
                {
                  "name": "table",
                  "type": "pistols::models::table::TableConfig"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_table_admittance",
              "inputs": [
                {
                  "name": "table_admittance",
                  "type": "pistols::models::table::TableAdmittance"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::admin::admin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "0x0"
      ],
      "tag": "pistols-admin",
      "systems": []
    },
    {
      "address": "0x3e70375dea4a88f1896943795071574161e6e89989131b31bf8fd13451caaf3",
      "class_hash": "0x4350c96fd6192217c68e821bbe12afeb32e8c7c25998c4c320b4adda869e914",
      "abi": [
        {
          "type": "impl",
          "name": "bank__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "BankImpl",
          "interface_name": "pistols::systems::bank::IBank"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::payment::Payment",
          "members": [
            {
              "name": "key",
              "type": "core::felt252"
            },
            {
              "name": "amount",
              "type": "core::integer::u256"
            },
            {
              "name": "client_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "ranking_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "owner_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "pool_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "treasury_percent",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::bank::IBank",
          "items": [
            {
              "type": "function",
              "name": "charge",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "payment",
                  "type": "pistols::models::payment::Payment"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::bank::bank::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-bank",
      "systems": []
    },
    {
      "address": "0x618d957ed4c85cafc8d00df19905f2f76b22205f5a02c103af7351ea960811",
      "class_hash": "0x14f31fad0f4f7e9b8c140aecb5ecb6892f5693e44116de36907aae286c7feb9",
      "abi": [
        {
          "type": "impl",
          "name": "duel_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            },
            {
              "name": "minter_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "renderer_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duel_token::IDuelTokenPublic"
        },
        {
          "type": "enum",
          "name": "pistols::types::premise::Premise",
          "variants": [
            {
              "name": "Null",
              "type": "()"
            },
            {
              "name": "Matter",
              "type": "()"
            },
            {
              "name": "Debt",
              "type": "()"
            },
            {
              "name": "Dispute",
              "type": "()"
            },
            {
              "name": "Honour",
              "type": "()"
            },
            {
              "name": "Hatred",
              "type": "()"
            },
            {
              "name": "Blood",
              "type": "()"
            },
            {
              "name": "Nothing",
              "type": "()"
            },
            {
              "name": "Tournament",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::challenge_state::ChallengeState",
          "variants": [
            {
              "name": "Null",
              "type": "()"
            },
            {
              "name": "Awaiting",
              "type": "()"
            },
            {
              "name": "Withdrawn",
              "type": "()"
            },
            {
              "name": "Refused",
              "type": "()"
            },
            {
              "name": "Expired",
              "type": "()"
            },
            {
              "name": "InProgress",
              "type": "()"
            },
            {
              "name": "Resolved",
              "type": "()"
            },
            {
              "name": "Draw",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duel_token::IDuelTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "create_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "challenged_id_or_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "premise",
                  "type": "pistols::types::premise::Premise"
                },
                {
                  "name": "quote",
                  "type": "core::felt252"
                },
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "expire_hours",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reply_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "accepted",
                  "type": "core::bool"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::challenge_state::ChallengeState"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "delete_duel",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "calc_fee",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id_a",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duelist_id_b",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "has_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id_a",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duelist_id_b",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_join",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenRendererImpl",
          "interface_name": "pistols::systems::components::erc721_hooks::ITokenRenderer"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::byte_array::ByteArray>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::erc721_hooks::ITokenRenderer",
          "items": [
            {
              "type": "function",
              "name": "get_token_name",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_description",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_image",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_attribute_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_metadata_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721MixinImpl",
          "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::ERC721ABI",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "caller_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duel_token::duel_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0",
        "0x0",
        "0x0",
        "0"
      ],
      "tag": "pistols-duel_token",
      "systems": []
    },
    {
      "address": "0x19f574ba46870b2ba93640c00116ca433d39d359404fe6d62c761d21ba0435c",
      "class_hash": "0x10729614a00105ac9bf97242ba4bcc7d4917c31819692395e1a6639652f3aed",
      "abi": [
        {
          "type": "impl",
          "name": "duelist_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            },
            {
              "name": "minter_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "renderer_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelistTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic"
        },
        {
          "type": "enum",
          "name": "pistols::models::duelist::ProfilePicType",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Duelist",
              "type": "()"
            },
            {
              "name": "External",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::duelist::Score",
          "members": [
            {
              "name": "honour",
              "type": "core::integer::u8"
            },
            {
              "name": "total_duels",
              "type": "core::integer::u16"
            },
            {
              "name": "total_wins",
              "type": "core::integer::u16"
            },
            {
              "name": "total_losses",
              "type": "core::integer::u16"
            },
            {
              "name": "total_draws",
              "type": "core::integer::u16"
            },
            {
              "name": "honour_history",
              "type": "core::integer::u64"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::duelist::Duelist",
          "members": [
            {
              "name": "duelist_id",
              "type": "core::integer::u128"
            },
            {
              "name": "name",
              "type": "core::felt252"
            },
            {
              "name": "profile_pic_type",
              "type": "pistols::models::duelist::ProfilePicType"
            },
            {
              "name": "profile_pic_uri",
              "type": "core::byte_array::ByteArray"
            },
            {
              "name": "timestamp",
              "type": "core::integer::u64"
            },
            {
              "name": "score",
              "type": "pistols::models::duelist::Score"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "calc_fee",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "create_duelist",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "name",
                  "type": "core::felt252"
                },
                {
                  "name": "profile_pic_type",
                  "type": "pistols::models::duelist::ProfilePicType"
                },
                {
                  "name": "profile_pic_uri",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::models::duelist::Duelist"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "name",
                  "type": "core::felt252"
                },
                {
                  "name": "profile_pic_type",
                  "type": "pistols::models::duelist::ProfilePicType"
                },
                {
                  "name": "profile_pic_uri",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::models::duelist::Duelist"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "delete_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenRendererImpl",
          "interface_name": "pistols::systems::components::erc721_hooks::ITokenRenderer"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::byte_array::ByteArray>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::erc721_hooks::ITokenRenderer",
          "items": [
            {
              "type": "function",
              "name": "get_token_name",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_description",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_image",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_attribute_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_metadata_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721MixinImpl",
          "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::ERC721ABI",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "caller_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duelist_token::duelist_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0",
        "0x0",
        "0x0",
        "100000000000000000000"
      ],
      "tag": "pistols-duelist_token",
      "systems": []
    },
    {
      "address": "0x4d47697023509a58c5f2067ebd040cf3d77b1c3aa9e954b16ab4f177d3403f9",
      "class_hash": "0x621bd5aaa834e83273fd0e0220c041ec764578e990fd8929bf83457727ba22b",
      "abi": [
        {
          "type": "impl",
          "name": "fame_coin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "FamePublicImpl",
          "interface_name": "pistols::systems::tokens::fame_coin::IFameCoinPublic"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::fame_coin::IFameCoinPublic",
          "items": [
            {
              "type": "function",
              "name": "minted_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount_paid",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "updated_duelist",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenBoundPublicImpl",
          "interface_name": "pistols::systems::components::token_bound::ITokenBoundPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_bound::ITokenBoundPublic",
          "items": [
            {
              "type": "function",
              "name": "address_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_of_address",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::fame_coin::fame_coin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenBoundEvent",
              "type": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-fame_coin",
      "systems": []
    },
    {
      "address": "0x6505d69463c8483113f200206d10f833e7fe6734fa6c71630c7bedaad9dc59b",
      "class_hash": "0x4b8f697d9a50ab9c24d959eadd3d4cf61ed41032f3c3472110621a888e0b086",
      "abi": [
        {
          "type": "impl",
          "name": "game__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ActionsImpl",
          "interface_name": "pistols::systems::game::IGame"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::array::Span::<core::integer::u8>>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::array::Span::<core::integer::u8>>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::paces::PacesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Paces1",
              "type": "()"
            },
            {
              "name": "Paces2",
              "type": "()"
            },
            {
              "name": "Paces3",
              "type": "()"
            },
            {
              "name": "Paces4",
              "type": "()"
            },
            {
              "name": "Paces5",
              "type": "()"
            },
            {
              "name": "Paces6",
              "type": "()"
            },
            {
              "name": "Paces7",
              "type": "()"
            },
            {
              "name": "Paces8",
              "type": "()"
            },
            {
              "name": "Paces9",
              "type": "()"
            },
            {
              "name": "Paces10",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::env::EnvCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "DamageUp",
              "type": "()"
            },
            {
              "name": "DamageDown",
              "type": "()"
            },
            {
              "name": "ChancesUp",
              "type": "()"
            },
            {
              "name": "ChancesDown",
              "type": "()"
            },
            {
              "name": "DoubleDamageUp",
              "type": "()"
            },
            {
              "name": "DoubleChancesUp",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsHit",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsMiss",
              "type": "()"
            },
            {
              "name": "SpecialDoubleTactics",
              "type": "()"
            },
            {
              "name": "SpecialNoTactics",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::tactics::TacticsCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Insult",
              "type": "()"
            },
            {
              "name": "CoinToss",
              "type": "()"
            },
            {
              "name": "Vengeful",
              "type": "()"
            },
            {
              "name": "ThickCoat",
              "type": "()"
            },
            {
              "name": "Reversal",
              "type": "()"
            },
            {
              "name": "Bananas",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::SpecialsDrawn",
          "members": [
            {
              "name": "tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "coin_toss",
              "type": "core::bool"
            },
            {
              "name": "reversal",
              "type": "core::bool"
            },
            {
              "name": "shots_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "tactics_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::blades::BladesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Seppuku",
              "type": "()"
            },
            {
              "name": "PocketPistol",
              "type": "()"
            },
            {
              "name": "Behead",
              "type": "()"
            },
            {
              "name": "Grapple",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::duel_progress::DuelistDrawnCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::DuelistState",
          "members": [
            {
              "name": "chances",
              "type": "core::integer::u8"
            },
            {
              "name": "damage",
              "type": "core::integer::u8"
            },
            {
              "name": "health",
              "type": "core::integer::u8"
            },
            {
              "name": "dice_fire",
              "type": "core::integer::u8"
            },
            {
              "name": "honour",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelStep",
          "members": [
            {
              "name": "pace",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_env",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "dice_env",
              "type": "core::integer::u8"
            },
            {
              "name": "specials_a",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "specials_b",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "card_a",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "card_b",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "state_a",
              "type": "pistols::models::challenge::DuelistState"
            },
            {
              "name": "state_b",
              "type": "pistols::models::challenge::DuelistState"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::types::duel_progress::DuelStep>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::types::duel_progress::DuelStep>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::cards::hand::DuelistHand",
          "members": [
            {
              "name": "card_fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "card_blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelProgress",
          "members": [
            {
              "name": "steps",
              "type": "core::array::Span::<pistols::types::duel_progress::DuelStep>"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "hand_a",
              "type": "pistols::types::cards::hand::DuelistHand"
            },
            {
              "name": "hand_b",
              "type": "pistols::types::cards::hand::DuelistHand"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::game::IGame",
          "items": [
            {
              "type": "function",
              "name": "commit_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "hashed",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "moves",
                  "type": "core::array::Span::<core::integer::u8>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_player_card_decks",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::array::Span::<core::integer::u8>>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duel_progress",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::duel_progress::DuelProgress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "test_validate_commit_message",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "signature",
                  "type": "core::array::Array::<core::felt252>"
                },
                {
                  "name": "duelId",
                  "type": "core::felt252"
                },
                {
                  "name": "duelistId",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::game::game::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-game",
      "systems": []
    },
    {
      "address": "0x6cbf3f52b2e14c38ecb05867eb611854f9c817039e20b5df9d99aed1d366d7c",
      "class_hash": "0x432ab1c490cc5509048ffe5bb63ab4994980a74592ce51066c2a61764913792",
      "abi": [
        {
          "type": "impl",
          "name": "lords_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "game_contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "faucet_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "LordsMockPublicImpl",
          "interface_name": "pistols::systems::tokens::lords_mock::ILordsMockPublic"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::lords_mock::ILordsMockPublic",
          "items": [
            {
              "type": "function",
              "name": "faucet",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::lords_mock::lords_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "10000000000000000000000"
      ],
      "tag": "pistols-lords_mock",
      "systems": []
    },
    {
      "address": "0x48428e6dd20d5703091326a5e102198ad2fa64a0deb9f12b431311d8ac43d3c",
      "class_hash": "0x41c79bf31450dae16f3f4df64eb23170adf7ff01540b4a00b3f8a9fa50883f5",
      "abi": [
        {
          "type": "impl",
          "name": "rng__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "RngImpl",
          "interface_name": "pistols::systems::rng::IRng"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::shuffler::Shuffler",
          "members": [
            {
              "name": "ids",
              "type": "core::integer::u256"
            },
            {
              "name": "size",
              "type": "core::integer::u32"
            },
            {
              "name": "pos",
              "type": "core::integer::u32"
            },
            {
              "name": "direct",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng::IRng",
          "items": [
            {
              "type": "function",
              "name": "reseed",
              "inputs": [
                {
                  "name": "seed",
                  "type": "core::felt252"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "new_shuffler",
              "inputs": [
                {
                  "name": "shuffle_size",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::shuffler::Shuffler"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::rng::rng::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-rng",
      "systems": []
    }
  ],
  "models": [
    {
      "members": [],
      "class_hash": "0x58c55a7c92132abc7ce1ad7bd70cdb1002db0cdca73a2125f93df4983185dcb",
      "tag": "Challenge"
    },
    {
      "members": [],
      "class_hash": "0x2d85f734d7f7f17f416ec8019376689c56a47da106b21eb8581e6a7350bee6c",
      "tag": "CoinConfig"
    },
    {
      "members": [],
      "class_hash": "0x357b9d9aec647dc44c1cf3f0a5813456738f191f258b4cb6ba15e7b6640d934",
      "tag": "Config"
    },
    {
      "members": [],
      "class_hash": "0x4f71b0ba93bdce3ba86be2a41237c729b19c11a784efac62d81702f6639af38",
      "tag": "Duelist"
    },
    {
      "members": [],
      "class_hash": "0x4790cdef01a501b6ca42325bfa5fd2d294ac0f251254b3807487e549973a9bc",
      "tag": "Pact"
    },
    {
      "members": [],
      "class_hash": "0x731ff95ccf2fb992b48aae088b775ae4b04c2b02ae2e3de9be7e5d94b6bea4e",
      "tag": "Payment"
    },
    {
      "members": [],
      "class_hash": "0x44e6613a50ffcc10f3e0eac0cff3673fa4616596c620576df949cb949b9dbb9",
      "tag": "Round"
    },
    {
      "members": [],
      "class_hash": "0x46ce8f074258171602811af3ba4120f69f66c2ed3868afc1354268d7afe4754",
      "tag": "Scoreboard"
    },
    {
      "members": [],
      "class_hash": "0x161491019d3bd8d9b96a195a88b0c20b5545a3d2064e2ad5a4a6f89cf19eba4",
      "tag": "TableAdmittance"
    },
    {
      "members": [],
      "class_hash": "0x1b444e9f4555652f88dbdccd3098c5db40837dbf27f9693a6227d4d1efac22c",
      "tag": "TableConfig"
    },
    {
      "members": [],
      "class_hash": "0xe42875e6a96a10a11b773c9f4285666ef4631e67c7fddda67310e4fac0cf60",
      "tag": "TokenBoundAddress"
    },
    {
      "members": [],
      "class_hash": "0x696bb55f4c4b4afd0b073714167cb2467c6cfaa93be2d113fb04d0eb1a78870",
      "tag": "TokenConfig"
    }
  ],
  "events": []
}