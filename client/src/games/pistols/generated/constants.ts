/* Autogenerated file. Do not edit manually. */
import { BigNumberish } from 'starknet';

//
// contants
//

// from: ../dojo/src/models/table.cairo
type tables_Type = {
  LORDS: string, // cairo: felt252
  COMMONERS: string, // cairo: felt252
};
export const tables: tables_Type = {
  LORDS: 'Lords',
  COMMONERS: 'Commoners',
};

// from: ../dojo/src/systems/actions.cairo
type actions_Type = {
  NOT_INITIALIZED: string, // cairo: felt252
  INVALID_CHALLENGED: string, // cairo: felt252
  INVALID_CHALLENGED_NULL: string, // cairo: felt252
  INVALID_CHALLENGED_SELF: string, // cairo: felt252
  INVALID_REPLY_SELF: string, // cairo: felt252
  INVALID_CHALLENGE: string, // cairo: felt252
  INVALID_DUELIST: string, // cairo: felt252
  NOT_YOUR_CHALLENGE: string, // cairo: felt252
  NOT_YOUR_DUELIST: string, // cairo: felt252
  CHALLENGER_NOT_ADMITTED: string, // cairo: felt252
  CHALLENGED_NOT_ADMITTED: string, // cairo: felt252
  CHALLENGE_EXISTS: string, // cairo: felt252
  CHALLENGE_NOT_AWAITING: string, // cairo: felt252
  CHALLENGE_NOT_IN_PROGRESS: string, // cairo: felt252
  TABLE_IS_CLOSED: string, // cairo: felt252
  MINIMUM_WAGER_NOT_MET: string, // cairo: felt252
  NO_WAGER: string, // cairo: felt252
  INSUFFICIENT_BALANCE: string, // cairo: felt252
  NO_ALLOWANCE: string, // cairo: felt252
  WITHDRAW_NOT_AVAILABLE: string, // cairo: felt252
  WAGER_NOT_AVAILABLE: string, // cairo: felt252
  INVALID_ROUND_NUMBER: string, // cairo: felt252
  ROUND_NOT_IN_COMMIT: string, // cairo: felt252
  ROUND_NOT_IN_REVEAL: string, // cairo: felt252
  ALREADY_COMMITTED: string, // cairo: felt252
  ALREADY_REVEALED: string, // cairo: felt252
  ACTION_HASH_MISMATCH: string, // cairo: felt252
};
export const actions: actions_Type = {
  NOT_INITIALIZED: 'PISTOLS: Not initialized',
  INVALID_CHALLENGED: 'PISTOLS: Challenged unknown',
  INVALID_CHALLENGED_NULL: 'PISTOLS: Challenged null',
  INVALID_CHALLENGED_SELF: 'PISTOLS: Challenged self',
  INVALID_REPLY_SELF: 'PISTOLS: Reply self',
  INVALID_CHALLENGE: 'PISTOLS: Invalid challenge',
  INVALID_DUELIST: 'PISTOLS: Invalid duelist',
  NOT_YOUR_CHALLENGE: 'PISTOLS: Not your challenge',
  NOT_YOUR_DUELIST: 'PISTOLS: Not your duelist',
  CHALLENGER_NOT_ADMITTED: 'PISTOLS: Challenger not allowed',
  CHALLENGED_NOT_ADMITTED: 'PISTOLS: Challenged not allowed',
  CHALLENGE_EXISTS: 'PISTOLS: Challenge exists',
  CHALLENGE_NOT_AWAITING: 'PISTOLS: Challenge not Awaiting',
  CHALLENGE_NOT_IN_PROGRESS: 'PISTOLS: Challenge not Progress',
  TABLE_IS_CLOSED: 'PISTOLS: Table is closed',
  MINIMUM_WAGER_NOT_MET: 'PISTOLS: Minimum wager not met',
  NO_WAGER: 'PISTOLS: No wager on this table',
  INSUFFICIENT_BALANCE: 'PISTOLS: Insufficient balance',
  NO_ALLOWANCE: 'PISTOLS: No transfer allowance',
  WITHDRAW_NOT_AVAILABLE: 'PISTOLS: Withdraw not available',
  WAGER_NOT_AVAILABLE: 'PISTOLS: Wager not available',
  INVALID_ROUND_NUMBER: 'PISTOLS: Invalid round number',
  ROUND_NOT_IN_COMMIT: 'PISTOLS: Round not in commit',
  ROUND_NOT_IN_REVEAL: 'PISTOLS: Round not in reveal',
  ALREADY_COMMITTED: 'PISTOLS: Already committed',
  ALREADY_REVEALED: 'PISTOLS: Already revealed',
  ACTION_HASH_MISMATCH: 'PISTOLS: Action hash mismatch',
};

// from: ../dojo/src/systems/admin.cairo
type admin_Type = {
  INVALID_OWNER: string, // cairo: felt252
  INVALID_TREASURY: string, // cairo: felt252
  INVALID_TABLE: string, // cairo: felt252
  INVALID_DESCRIPTION: string, // cairo: felt252
  NOT_OWNER: string, // cairo: felt252
};
export const admin: admin_Type = {
  INVALID_OWNER: 'ADMIN: Invalid owner_address',
  INVALID_TREASURY: 'ADMIN: Invalid treasury_address',
  INVALID_TABLE: 'ADMIN: Invalid table',
  INVALID_DESCRIPTION: 'ADMIN: Invalid description',
  NOT_OWNER: 'ADMIN: Not owner',
};

// from: ../dojo/src/systems/minter.cairo
type minter_Type = {
  INVALID_TOKEN_ADDRESS: string, // cairo: felt252
  INVALID_SUPPLY: string, // cairo: felt252
  NOT_OWNER: string, // cairo: felt252
  MINTED_OUT: string, // cairo: felt252
  MINTING_IS_CLOSED: string, // cairo: felt252
  MAXED_WALLET: string, // cairo: felt252
};
export const minter: minter_Type = {
  INVALID_TOKEN_ADDRESS: 'MINTER: invalid token address',
  INVALID_SUPPLY: 'MINTER: invalid supply',
  NOT_OWNER: 'MINTER: not owner',
  MINTED_OUT: 'MINTER: minted out',
  MINTING_IS_CLOSED: 'MINTER: minting closed',
  MAXED_WALLET: 'MINTER: wallet maxed out',
};

// from: ../dojo/src/types/action.cairo
type ACTION_Type = {
  PACES_MASK: number, // cairo: u8
  BLADES_MASK: number, // cairo: u8
  IDLE: number, // cairo: u8
  PACES_1: number, // cairo: u8
  PACES_2: number, // cairo: u8
  PACES_3: number, // cairo: u8
  PACES_4: number, // cairo: u8
  PACES_5: number, // cairo: u8
  PACES_6: number, // cairo: u8
  PACES_7: number, // cairo: u8
  PACES_8: number, // cairo: u8
  PACES_9: number, // cairo: u8
  PACES_10: number, // cairo: u8
  FAST_BLADE: number, // cairo: u8
  SLOW_BLADE: number, // cairo: u8
  BLOCK: number, // cairo: u8
  FLEE: number, // cairo: u8
  STEAL: number, // cairo: u8
  SEPPUKU: number, // cairo: u8
};
export const ACTION: ACTION_Type = {
  PACES_MASK: 0x0f,
  BLADES_MASK: 0xf0,
  IDLE: 0x00,
  PACES_1: 0x01,
  PACES_2: 0x02,
  PACES_3: 0x03,
  PACES_4: 0x04,
  PACES_5: 0x05,
  PACES_6: 0x06,
  PACES_7: 0x07,
  PACES_8: 0x08,
  PACES_9: 0x09,
  PACES_10: 0x0a,
  FAST_BLADE: 0x10,
  SLOW_BLADE: 0x20,
  BLOCK: 0x30,
  FLEE: 0x40,
  STEAL: 0x50,
  SEPPUKU: 0x60,
};

// from: ../dojo/src/types/challenge.cairo
type CHALLENGE_STATE_Type = {
  NULL: number, // cairo: u8
  AWAITING: number, // cairo: u8
  WITHDRAWN: number, // cairo: u8
  REFUSED: number, // cairo: u8
  EXPIRED: number, // cairo: u8
  IN_PROGRESS: number, // cairo: u8
  RESOLVED: number, // cairo: u8
  DRAW: number, // cairo: u8
};
export const CHALLENGE_STATE: CHALLENGE_STATE_Type = {
  NULL: 0,
  AWAITING: 1,
  WITHDRAWN: 2,
  REFUSED: 3,
  EXPIRED: 4,
  IN_PROGRESS: 5,
  RESOLVED: 6,
  DRAW: 7,
};

// from: ../dojo/src/types/constants.cairo
type constants_Type = {
  ROUND_COUNT: number, // cairo: u8
  MAX_DUELIST_ID: BigNumberish, // cairo: u128
  FULL_HEALTH: number, // cairo: u8
  DOUBLE_DAMAGE: number, // cairo: u8
  SINGLE_DAMAGE: number, // cairo: u8
  HASH_SALT_MASK: BigNumberish, // cairo: u256
  ETH_TO_WEI: BigNumberish, // cairo: u256
};
export const constants: constants_Type = {
  ROUND_COUNT: 3,
  MAX_DUELIST_ID: '0xffff',
  FULL_HEALTH: 3,
  DOUBLE_DAMAGE: 2,
  SINGLE_DAMAGE: 1,
  HASH_SALT_MASK: '0x1fffffffffffff',
  ETH_TO_WEI: '1_000_000_000_000_000_000',
};

// from: ../dojo/src/types/constants.cairo
type honour_Type = {
  VILLAIN_START: number, // cairo: u8
  TRICKSTER_START: number, // cairo: u8
  LORD_START: number, // cairo: u8
  HALFWAY: number, // cairo: u8
  MAX: number, // cairo: u8
  LEVEL_MIN: number, // cairo: u8
  LEVEL_MAX: number, // cairo: u8
};
export const honour: honour_Type = {
  VILLAIN_START: 10,
  TRICKSTER_START: 35,
  LORD_START: 75,
  HALFWAY: 50,
  MAX: 100,
  LEVEL_MIN: 10,
  LEVEL_MAX: 100,
};

// from: ../dojo/src/types/constants.cairo
type chances_Type = {
  NEVER: number, // cairo: u8
  ALWAYS: number, // cairo: u8
  PISTOLS_KILL_AT_STEP_1: number, // cairo: u8
  PISTOLS_KILL_AT_STEP_10: number, // cairo: u8
  PISTOLS_HIT_AT_STEP_1: number, // cairo: u8
  PISTOLS_HIT_AT_STEP_10: number, // cairo: u8
  PISTOLS_LETHAL_AT_STEP_1: number, // cairo: u8
  PISTOLS_LETHAL_AT_STEP_10: number, // cairo: u8
  BLADES_CRIT: number, // cairo: u8
  BLADES_HIT: number, // cairo: u8
  CRIT_BONUS_LORD: number, // cairo: u8
  CRIT_BONUS_TRICKSTER: number, // cairo: u8
  HIT_BONUS_VILLAIN: number, // cairo: u8
  HIT_BONUS_TRICKSTER: number, // cairo: u8
  EARLY_LORD_CRIT_BONUS: number, // cairo: u8
  LATE_VILLAIN_CRIT_BONUS: number, // cairo: u8
  CRIT_PENALTY_PER_DAMAGE: number, // cairo: u8
  HIT_PENALTY_PER_DAMAGE: number, // cairo: u8
  LORD_LETHAL_PENALTY: number, // cairo: u8
  TRICKSTER_CRIT_PENALTY: number, // cairo: u8
  TRICKSTER_HIT_PENALTY: number, // cairo: u8
};
export const chances: chances_Type = {
  NEVER: 0,
  ALWAYS: 100,
  PISTOLS_KILL_AT_STEP_1: 5,
  PISTOLS_KILL_AT_STEP_10: 20,
  PISTOLS_HIT_AT_STEP_1: 100,
  PISTOLS_HIT_AT_STEP_10: 20,
  PISTOLS_LETHAL_AT_STEP_1: 80,
  PISTOLS_LETHAL_AT_STEP_10: 5,
  BLADES_CRIT: 20,
  BLADES_HIT: 75,
  CRIT_BONUS_LORD: 12,
  CRIT_BONUS_TRICKSTER: 6,
  HIT_BONUS_VILLAIN: 20,
  HIT_BONUS_TRICKSTER: 10,
  EARLY_LORD_CRIT_BONUS: 10,
  LATE_VILLAIN_CRIT_BONUS: 10,
  CRIT_PENALTY_PER_DAMAGE: 0,
  HIT_PENALTY_PER_DAMAGE: 10,
  LORD_LETHAL_PENALTY: 10,
  TRICKSTER_CRIT_PENALTY: 2,
  TRICKSTER_HIT_PENALTY: 10,
};

// from: ../dojo/src/types/events.cairo
type selector_Type = {
  DuelistRegisteredEvent: BigNumberish, // cairo: felt252
  NewChallengeEvent: BigNumberish, // cairo: felt252
  ChallengeAcceptedEvent: BigNumberish, // cairo: felt252
  ChallengeResolvedEvent: BigNumberish, // cairo: felt252
  DuelistTurnEvent: BigNumberish, // cairo: felt252
};
export const selector: selector_Type = {
  DuelistRegisteredEvent: '0x148c3db21a55576bc012023dc4d3b5bd570c519de855849eac52b1c5d6c9e85',
  NewChallengeEvent: '0x14a0df74df51e02ef8dedabfd1ea9684ea2087bed6370e881b156d7e2e56975',
  ChallengeAcceptedEvent: '0x31cdbf7ac39747303190a727df1a270ae5e4f05191f6f58e452ce4eb1e98abe',
  ChallengeResolvedEvent: '0x23dfe05a8414fd8464370e120099be69327b2a52ae6655ff23733651e8281b1',
  DuelistTurnEvent: '0x19556e1418f1e7a7e6962eff75d1a46abd50bda431139f855ba85c9119754a4',
};

// from: ../dojo/src/types/round.cairo
type ROUND_STATE_Type = {
  NULL: number, // cairo: u8
  COMMIT: number, // cairo: u8
  REVEAL: number, // cairo: u8
  FINISHED: number, // cairo: u8
};
export const ROUND_STATE: ROUND_STATE_Type = {
  NULL: 0,
  COMMIT: 1,
  REVEAL: 2,
  FINISHED: 3,
};

//
// enums
//

// from: ../dojo/src/models/duelist.cairo
export enum Archetype {
  Undefined = 0,
  Villainous = 1,
  Trickster = 2,
  Honourable = 3,
};
export const ArchetypeNameToValue: Record<string, Archetype> = {
  'Undefined': Archetype.Undefined,
  'Villainous': Archetype.Villainous,
  'Trickster': Archetype.Trickster,
  'Honourable': Archetype.Honourable,
};
export const getArchetype = (name: string | number): Archetype => (ArchetypeNameToValue[name as string]);

// from: ../dojo/src/models/duelist.cairo
export enum ProfilePicType {
  Undefined = 0,
  Duelist = 1,
  External = 2,
};
export const ProfilePicTypeNameToValue: Record<string, ProfilePicType> = {
  'Undefined': ProfilePicType.Undefined,
  'Duelist': ProfilePicType.Duelist,
  'External': ProfilePicType.External,
};
export const getProfilePicType = (name: string | number): ProfilePicType => (ProfilePicTypeNameToValue[name as string]);

// from: ../dojo/src/models/table.cairo
export enum TableType {
  Undefined = 0,
  Classic = 1,
  Tournament = 2,
  IRLTournament = 3,
};
export const TableTypeNameToValue: Record<string, TableType> = {
  'Undefined': TableType.Undefined,
  'Classic': TableType.Classic,
  'Tournament': TableType.Tournament,
  'IRLTournament': TableType.IRLTournament,
};
export const getTableType = (name: string | number): TableType => (TableTypeNameToValue[name as string]);

// from: ../dojo/src/types/action.cairo
export enum Action {
  Idle = 0,
  Paces1 = 1,
  Paces2 = 2,
  Paces3 = 3,
  Paces4 = 4,
  Paces5 = 5,
  Paces6 = 6,
  Paces7 = 7,
  Paces8 = 8,
  Paces9 = 9,
  Paces10 = 10,
  FastBlade = 11,
  SlowBlade = 12,
  Block = 13,
  Flee = 14,
  Steal = 15,
  Seppuku = 16,
};
export const ActionNameToValue: Record<string, Action> = {
  'Idle': Action.Idle,
  'Paces1': Action.Paces1,
  'Paces2': Action.Paces2,
  'Paces3': Action.Paces3,
  'Paces4': Action.Paces4,
  'Paces5': Action.Paces5,
  'Paces6': Action.Paces6,
  'Paces7': Action.Paces7,
  'Paces8': Action.Paces8,
  'Paces9': Action.Paces9,
  'Paces10': Action.Paces10,
  'FastBlade': Action.FastBlade,
  'SlowBlade': Action.SlowBlade,
  'Block': Action.Block,
  'Flee': Action.Flee,
  'Steal': Action.Steal,
  'Seppuku': Action.Seppuku,
};
export const getAction = (name: string | number): Action => (ActionNameToValue[name as string]);

// from: ../dojo/src/types/challenge.cairo
export enum ChallengeState {
  Null = 0,
  Awaiting = 1,
  Withdrawn = 2,
  Refused = 3,
  Expired = 4,
  InProgress = 5,
  Resolved = 6,
  Draw = 7,
};
export const ChallengeStateNameToValue: Record<string, ChallengeState> = {
  'Null': ChallengeState.Null,
  'Awaiting': ChallengeState.Awaiting,
  'Withdrawn': ChallengeState.Withdrawn,
  'Refused': ChallengeState.Refused,
  'Expired': ChallengeState.Expired,
  'InProgress': ChallengeState.InProgress,
  'Resolved': ChallengeState.Resolved,
  'Draw': ChallengeState.Draw,
};
export const getChallengeState = (name: string | number): ChallengeState => (ChallengeStateNameToValue[name as string]);

// from: ../dojo/src/types/round.cairo
export enum RoundState {
  Null = 0,
  Commit = 1,
  Reveal = 2,
  Finished = 3,
};
export const RoundStateNameToValue: Record<string, RoundState> = {
  'Null': RoundState.Null,
  'Commit': RoundState.Commit,
  'Reveal': RoundState.Reveal,
  'Finished': RoundState.Finished,
};
export const getRoundState = (name: string | number): RoundState => (RoundStateNameToValue[name as string]);
