/* Autogenerated file. Do not edit manually. */
import { BigNumberish } from 'starknet';

//
// enums
//

// from: ../dojo/src/models/duelist.cairo
export enum Archetype {
  Undefined = 0,
  Villainous = 1,
  Trickster = 2,
  Honourable = 3,
};
export const ArchetypeNameToValue: Record<string, Archetype> = {
  'Undefined': Archetype.Undefined,
  'Villainous': Archetype.Villainous,
  'Trickster': Archetype.Trickster,
  'Honourable': Archetype.Honourable,
};
export const getArchetype = (name: string | number): Archetype => (ArchetypeNameToValue[name as string]);

// from: ../dojo/src/models/duelist.cairo
export enum ProfilePicType {
  Undefined = 0,
  Duelist = 1,
  External = 2,
};
export const ProfilePicTypeNameToValue: Record<string, ProfilePicType> = {
  'Undefined': ProfilePicType.Undefined,
  'Duelist': ProfilePicType.Duelist,
  'External': ProfilePicType.External,
};
export const getProfilePicType = (name: string | number): ProfilePicType => (ProfilePicTypeNameToValue[name as string]);

// from: ../dojo/src/models/table.cairo
export enum TableType {
  Undefined = 0,
  Classic = 1,
  Tournament = 2,
  IRLTournament = 3,
};
export const TableTypeNameToValue: Record<string, TableType> = {
  'Undefined': TableType.Undefined,
  'Classic': TableType.Classic,
  'Tournament': TableType.Tournament,
  'IRLTournament': TableType.IRLTournament,
};
export const getTableType = (name: string | number): TableType => (TableTypeNameToValue[name as string]);

// from: ../dojo/src/types/cards/blades.cairo
export enum BladesCard {
  None = 0,
  Seppuku = 1,
  RunAway = 2,
  Behead = 3,
  Grapple = 4,
};
export const BladesCardNameToValue: Record<string, BladesCard> = {
  'None': BladesCard.None,
  'Seppuku': BladesCard.Seppuku,
  'RunAway': BladesCard.RunAway,
  'Behead': BladesCard.Behead,
  'Grapple': BladesCard.Grapple,
};
export const getBladesCard = (name: string | number): BladesCard => (BladesCardNameToValue[name as string]);

// from: ../dojo/src/types/cards/cards.cairo
export enum Rarity {
  None = 0,
  Common = 1,
  Uncommon = 2,
  Special = 3,
};
export const RarityNameToValue: Record<string, Rarity> = {
  'None': Rarity.None,
  'Common': Rarity.Common,
  'Uncommon': Rarity.Uncommon,
  'Special': Rarity.Special,
};
export const getRarity = (name: string | number): Rarity => (RarityNameToValue[name as string]);

// from: ../dojo/src/types/cards/env.cairo
export enum EnvCard {
  None = 0,
  DamageUp = 1,
  DamageDown = 2,
  ChancesUp = 3,
  ChancesDown = 4,
  DoubleDamageUp = 5,
  DoubleChancesUp = 6,
  SpecialAllShotsHit = 7,
  SpecialAllShotsMiss = 8,
  SpecialDoubleTactics = 9,
  SpecialNoTactics = 10,
};
export const EnvCardNameToValue: Record<string, EnvCard> = {
  'None': EnvCard.None,
  'DamageUp': EnvCard.DamageUp,
  'DamageDown': EnvCard.DamageDown,
  'ChancesUp': EnvCard.ChancesUp,
  'ChancesDown': EnvCard.ChancesDown,
  'DoubleDamageUp': EnvCard.DoubleDamageUp,
  'DoubleChancesUp': EnvCard.DoubleChancesUp,
  'SpecialAllShotsHit': EnvCard.SpecialAllShotsHit,
  'SpecialAllShotsMiss': EnvCard.SpecialAllShotsMiss,
  'SpecialDoubleTactics': EnvCard.SpecialDoubleTactics,
  'SpecialNoTactics': EnvCard.SpecialNoTactics,
};
export const getEnvCard = (name: string | number): EnvCard => (EnvCardNameToValue[name as string]);

// from: ../dojo/src/types/cards/paces.cairo
export enum PacesCard {
  None = 0,
  Paces1 = 1,
  Paces2 = 2,
  Paces3 = 3,
  Paces4 = 4,
  Paces5 = 5,
  Paces6 = 6,
  Paces7 = 7,
  Paces8 = 8,
  Paces9 = 9,
  Paces10 = 10,
};
export const PacesCardNameToValue: Record<string, PacesCard> = {
  'None': PacesCard.None,
  'Paces1': PacesCard.Paces1,
  'Paces2': PacesCard.Paces2,
  'Paces3': PacesCard.Paces3,
  'Paces4': PacesCard.Paces4,
  'Paces5': PacesCard.Paces5,
  'Paces6': PacesCard.Paces6,
  'Paces7': PacesCard.Paces7,
  'Paces8': PacesCard.Paces8,
  'Paces9': PacesCard.Paces9,
  'Paces10': PacesCard.Paces10,
};
export const getPacesCard = (name: string | number): PacesCard => (PacesCardNameToValue[name as string]);

// from: ../dojo/src/types/cards/tactics.cairo
export enum TacticsCard {
  None = 0,
  Insult = 1,
  CoinToss = 2,
  Vengeful = 3,
  ThickCoat = 4,
  Reversal = 5,
  Bananas = 6,
};
export const TacticsCardNameToValue: Record<string, TacticsCard> = {
  'None': TacticsCard.None,
  'Insult': TacticsCard.Insult,
  'CoinToss': TacticsCard.CoinToss,
  'Vengeful': TacticsCard.Vengeful,
  'ThickCoat': TacticsCard.ThickCoat,
  'Reversal': TacticsCard.Reversal,
  'Bananas': TacticsCard.Bananas,
};
export const getTacticsCard = (name: string | number): TacticsCard => (TacticsCardNameToValue[name as string]);

// from: ../dojo/src/types/challenge_state.cairo
export enum ChallengeState {
  Null = 0,
  Awaiting = 1,
  Withdrawn = 2,
  Refused = 3,
  Expired = 4,
  InProgress = 5,
  Resolved = 6,
  Draw = 7,
};
export const ChallengeStateNameToValue: Record<string, ChallengeState> = {
  'Null': ChallengeState.Null,
  'Awaiting': ChallengeState.Awaiting,
  'Withdrawn': ChallengeState.Withdrawn,
  'Refused': ChallengeState.Refused,
  'Expired': ChallengeState.Expired,
  'InProgress': ChallengeState.InProgress,
  'Resolved': ChallengeState.Resolved,
  'Draw': ChallengeState.Draw,
};
export const getChallengeState = (name: string | number): ChallengeState => (ChallengeStateNameToValue[name as string]);

// from: ../dojo/src/types/duel_progress.cairo
export enum DuelistDrawnCard {
  None = 0,
  Fire = 1,
  Dodge = 2,
  Blades = 3,
};
export const DuelistDrawnCardNameToValue: Record<string, DuelistDrawnCard> = {
  'None': DuelistDrawnCard.None,
  'Fire': DuelistDrawnCard.Fire,
  'Dodge': DuelistDrawnCard.Dodge,
  'Blades': DuelistDrawnCard.Blades,
};
export const getDuelistDrawnCard = (name: string | number): DuelistDrawnCard => (DuelistDrawnCardNameToValue[name as string]);

// from: ../dojo/src/types/misc.cairo
export enum Boolean {
  Undefined = 0,
  True = 1,
  False = 2,
};
export const BooleanNameToValue: Record<string, Boolean> = {
  'Undefined': Boolean.Undefined,
  'True': Boolean.True,
  'False': Boolean.False,
};
export const getBoolean = (name: string | number): Boolean => (BooleanNameToValue[name as string]);

// from: ../dojo/src/types/premise.cairo
export enum Premise {
  Null = 0,
  Matter = 1,
  Debt = 2,
  Dispute = 3,
  Honour = 4,
  Hatred = 5,
  Blood = 6,
  Nothing = 7,
};
export const PremiseNameToValue: Record<string, Premise> = {
  'Null': Premise.Null,
  'Matter': Premise.Matter,
  'Debt': Premise.Debt,
  'Dispute': Premise.Dispute,
  'Honour': Premise.Honour,
  'Hatred': Premise.Hatred,
  'Blood': Premise.Blood,
  'Nothing': Premise.Nothing,
};
export const getPremise = (name: string | number): Premise => (PremiseNameToValue[name as string]);

// from: ../dojo/src/types/round_state.cairo
export enum RoundState {
  Null = 0,
  Commit = 1,
  Reveal = 2,
  Finished = 3,
};
export const RoundStateNameToValue: Record<string, RoundState> = {
  'Null': RoundState.Null,
  'Commit': RoundState.Commit,
  'Reveal': RoundState.Reveal,
  'Finished': RoundState.Finished,
};
export const getRoundState = (name: string | number): RoundState => (RoundStateNameToValue[name as string]);

//
// constants
//

// from: ../dojo/src/types/cards/cards.cairo
export type CardPoints = {
  name : string,
  self_chances : number,
  self_damage : number,
  other_chances : number,
  other_damage : number,
  special : string,
};

// from: ../dojo/src/types/cards/cards.cairo
export type EnvCardPoints = {
  name : string,
  rarity : Rarity,
  chances : number,
  damage : number,
  one_step : boolean,
  tactics_multiplier : number,
};

// from: ../dojo/src/interfaces/systems.cairo
type type_SELECTORS = {
  ADMIN: BigNumberish, // cairo: felt252
  ACTIONS: BigNumberish, // cairo: felt252
  RNG: BigNumberish, // cairo: felt252
  MINTER: BigNumberish, // cairo: felt252
  TOKEN_DUELIST: BigNumberish, // cairo: felt252
  LORDS_MOCK: BigNumberish, // cairo: felt252
  CONFIG: BigNumberish, // cairo: felt252
  TABLE_CONFIG: BigNumberish, // cairo: felt252
  TOKEN_CONFIG: BigNumberish, // cairo: felt252
};
export const SELECTORS: type_SELECTORS = {
  ADMIN: '0x036fd20372b5d47c092e2fede52897075978efb732aeaeb155d19eb8147f6497', // 'selector_from_tag!("pistols-admin")'
  ACTIONS: '0x04f10cff77842b589eafef9f3261c4cb207e41302e7ac01527cff88ad26ded3e', // 'selector_from_tag!("pistols-actions")'
  RNG: '0x013f1a6a9ae118440a997d6624230b59f43516220a1208526c3f66e202910504', // 'selector_from_tag!("pistols-rng")'
  MINTER: '0x07b759538267ac8937772e5bdadb6b598748b33c377c90426fc0a4960234de20', // 'selector_from_tag!("pistols-minter")'
  TOKEN_DUELIST: '0x0541e9c1813eb1f7867062ea0fafcd949ad9d3f8b212bbac1df80c48947c48cd', // 'selector_from_tag!("pistols-token_duelist")'
  LORDS_MOCK: '0x02b1156e63a09854c3d8dba0cad93b41e1fc4662466a0ffc2a9ec9e54b4bc788', // 'selector_from_tag!("pistols-lords_mock")'
  CONFIG: '0x060742fa7259b7ce3ebc0a2dde90b740d1234c770199a822fa2e7cf779dc0392', // 'selector_from_tag!("pistols-Config")'
  TABLE_CONFIG: '0x01e8368fc88328662c92a11c0e739bf8b74bcd77a20071d2641a31e1a063c138', // 'selector_from_tag!("pistols-TableConfig")'
  TOKEN_CONFIG: '0x056ebd3387f45e8b292b472f3539e675031f12cf156c07c309c6403044f71fed', // 'selector_from_tag!("pistols-TokenConfig")'
};

// from: ../dojo/src/models/config.cairo
type type_CONFIG = {
  CONFIG_KEY: number, // cairo: u8
};
export const CONFIG: type_CONFIG = {
  CONFIG_KEY: 1,
};

// from: ../dojo/src/models/table.cairo
type type_TABLES = {
  LORDS: string, // cairo: felt252
  COMMONERS: string, // cairo: felt252
};
export const TABLES: type_TABLES = {
  LORDS: 'Lords',
  COMMONERS: 'Commoners',
};

// from: ../dojo/src/types/cards/blades.cairo
type type_BLADES_CARDS = {
  NONE: number, // cairo: u8
  SEPPUKU: number, // cairo: u8
  RUN_AWAY: number, // cairo: u8
  BEHEAD: number, // cairo: u8
  GRAPPLE: number, // cairo: u8
};
export const BLADES_CARDS: type_BLADES_CARDS = {
  NONE: 0,
  SEPPUKU: 1,
  RUN_AWAY: 2,
  BEHEAD: 3,
  GRAPPLE: 4,
};

// from: ../dojo/src/types/cards/blades.cairo
type type_BLADES_POINTS = {
  SEPPUKU: CardPoints, // cairo: CardPoints
  RUN_AWAY: CardPoints, // cairo: CardPoints
  BEHEAD: CardPoints, // cairo: CardPoints
  GRAPPLE: CardPoints, // cairo: CardPoints
};
export const BLADES_POINTS: type_BLADES_POINTS = {
  SEPPUKU: {
    name: 'Seppuku',
    self_chances: 20,
    self_damage: 1,
    other_chances: 0,
    other_damage: 0,
    special: 'Suicide if survives',
  },
  RUN_AWAY: {
    name: 'Run Away',
    self_chances: 0,
    self_damage: 0,
    other_chances: -10,
    other_damage: 0,
    special: 'Beats Behead',
  },
  BEHEAD: {
    name: 'Behead',
    self_chances: 0,
    self_damage: 1,
    other_chances: 0,
    other_damage: 0,
    special: 'Beats Grapple',
  },
  GRAPPLE: {
    name: 'Grapple',
    self_chances: 0,
    self_damage: 0,
    other_chances: 0,
    other_damage: -1,
    special: 'Beats Run Away',
  },
};

// from: ../dojo/src/types/cards/env.cairo
type type_ENV_CARDS = {
  NONE: number, // cairo: u8
  DAMAGE_UP: number, // cairo: u8
  DAMAGE_DOWN: number, // cairo: u8
  CHANCES_UP: number, // cairo: u8
  CHANCES_DOWN: number, // cairo: u8
  DOUBLE_DAMAGE_UP: number, // cairo: u8
  DOUBLE_CHANCES_UP: number, // cairo: u8
  SPECIAL_ALL_SHOTS_HIT: number, // cairo: u8
  SPECIAL_ALL_SHOTS_MISS: number, // cairo: u8
  SPECIAL_DOUBLE_TACTICS: number, // cairo: u8
  SPECIAL_NO_TACTICS: number, // cairo: u8
};
export const ENV_CARDS: type_ENV_CARDS = {
  NONE: 0,
  DAMAGE_UP: 1,
  DAMAGE_DOWN: 2,
  CHANCES_UP: 3,
  CHANCES_DOWN: 4,
  DOUBLE_DAMAGE_UP: 5,
  DOUBLE_CHANCES_UP: 7,
  SPECIAL_ALL_SHOTS_HIT: 9,
  SPECIAL_ALL_SHOTS_MISS: 10,
  SPECIAL_DOUBLE_TACTICS: 11,
  SPECIAL_NO_TACTICS: 12,
};

// from: ../dojo/src/types/cards/env.cairo
type type_ENV_POINTS = {
  DAMAGE_UP: EnvCardPoints, // cairo: EnvCardPoints
  DAMAGE_DOWN: EnvCardPoints, // cairo: EnvCardPoints
  CHANCES_UP: EnvCardPoints, // cairo: EnvCardPoints
  CHANCES_DOWN: EnvCardPoints, // cairo: EnvCardPoints
  DOUBLE_DAMAGE_UP: EnvCardPoints, // cairo: EnvCardPoints
  DOUBLE_CHANCES_UP: EnvCardPoints, // cairo: EnvCardPoints
  SPECIAL_ALL_SHOTS_HIT: EnvCardPoints, // cairo: EnvCardPoints
  SPECIAL_ALL_SHOTS_MISS: EnvCardPoints, // cairo: EnvCardPoints
  SPECIAL_DOUBLE_TACTICS: EnvCardPoints, // cairo: EnvCardPoints
  SPECIAL_NO_TACTICS: EnvCardPoints, // cairo: EnvCardPoints
};
export const ENV_POINTS: type_ENV_POINTS = {
  DAMAGE_UP: {
    name: 'Damage Up',
    rarity: Rarity.Common,
    chances: 0,
    damage: 1,
    one_step: false,
    tactics_multiplier: 1,
  },
  DAMAGE_DOWN: {
    name: 'Damage Down',
    rarity: Rarity.Common,
    chances: 0,
    damage: -1,
    one_step: false,
    tactics_multiplier: 1,
  },
  CHANCES_UP: {
    name: 'Chances Up',
    rarity: Rarity.Common,
    chances: 10,
    damage: 0,
    one_step: false,
    tactics_multiplier: 1,
  },
  CHANCES_DOWN: {
    name: 'Chances Down',
    rarity: Rarity.Common,
    chances: -10,
    damage: 0,
    one_step: false,
    tactics_multiplier: 1,
  },
  DOUBLE_DAMAGE_UP: {
    name: 'Double Damage Up',
    rarity: Rarity.Uncommon,
    chances: 0,
    damage: 2,
    one_step: false,
    tactics_multiplier: 1,
  },
  DOUBLE_CHANCES_UP: {
    name: 'Double Chances Up',
    rarity: Rarity.Uncommon,
    chances: 20,
    damage: 0,
    one_step: false,
    tactics_multiplier: 1,
  },
  SPECIAL_ALL_SHOTS_HIT: {
    name: 'All Shots Hit',
    rarity: Rarity.Special,
    chances: 100,
    damage: 100,
    one_step: true,
    tactics_multiplier: 1,
  },
  SPECIAL_ALL_SHOTS_MISS: {
    name: 'All Shots Miss',
    rarity: Rarity.Special,
    chances: -100,
    damage: -100,
    one_step: true,
    tactics_multiplier: 1,
  },
  SPECIAL_DOUBLE_TACTICS: {
    name: 'Double Tactics',
    rarity: Rarity.Special,
    chances: 0,
    damage: 0,
    one_step: true,
    tactics_multiplier: 2,
  },
  SPECIAL_NO_TACTICS: {
    name: 'No Tactics',
    rarity: Rarity.Special,
    chances: 0,
    damage: 0,
    one_step: true,
    tactics_multiplier: 0,
  },
};

// from: ../dojo/src/types/cards/paces.cairo
type type_PACES_CARDS = {
  None: number, // cairo: u8
  PACES_1: number, // cairo: u8
  PACES_2: number, // cairo: u8
  PACES_3: number, // cairo: u8
  PACES_4: number, // cairo: u8
  PACES_5: number, // cairo: u8
  PACES_6: number, // cairo: u8
  PACES_7: number, // cairo: u8
  PACES_8: number, // cairo: u8
  PACES_9: number, // cairo: u8
  PACES_10: number, // cairo: u8
};
export const PACES_CARDS: type_PACES_CARDS = {
  None: 0,
  PACES_1: 1,
  PACES_2: 2,
  PACES_3: 3,
  PACES_4: 4,
  PACES_5: 5,
  PACES_6: 6,
  PACES_7: 7,
  PACES_8: 8,
  PACES_9: 9,
  PACES_10: 10,
};

// from: ../dojo/src/types/cards/tactics.cairo
type type_TACTICS_CARDS = {
  NONE: number, // cairo: u8
  INSULT: number, // cairo: u8
  COIN_TOSS: number, // cairo: u8
  VENGEFUL: number, // cairo: u8
  THICK_COAT: number, // cairo: u8
  REVERSAL: number, // cairo: u8
  BANANAS: number, // cairo: u8
};
export const TACTICS_CARDS: type_TACTICS_CARDS = {
  NONE: 0,
  INSULT: 1,
  COIN_TOSS: 2,
  VENGEFUL: 3,
  THICK_COAT: 4,
  REVERSAL: 5,
  BANANAS: 6,
};

// from: ../dojo/src/types/cards/tactics.cairo
type type_TACTICS_POINTS = {
  INSULT: CardPoints, // cairo: CardPoints
  COIN_TOSS: CardPoints, // cairo: CardPoints
  VENGEFUL: CardPoints, // cairo: CardPoints
  THICK_COAT: CardPoints, // cairo: CardPoints
  REVERSAL: CardPoints, // cairo: CardPoints
  BANANAS: CardPoints, // cairo: CardPoints
};
export const TACTICS_POINTS: type_TACTICS_POINTS = {
  INSULT: {
    name: 'Insult',
    self_chances: 0,
    self_damage: 0,
    other_chances: -10,
    other_damage: 1,
    special: '',
  },
  COIN_TOSS: {
    name: 'Coin Toss',
    self_chances: 0,
    self_damage: 0,
    other_chances: 0,
    other_damage: 0,
    special: 'First special doesnt affect you',
  },
  VENGEFUL: {
    name: 'Vengeful',
    self_chances: 0,
    self_damage: 1,
    other_chances: 0,
    other_damage: 0,
    special: '',
  },
  THICK_COAT: {
    name: 'Thick Coat',
    self_chances: 0,
    self_damage: 0,
    other_chances: 0,
    other_damage: -1,
    special: '',
  },
  REVERSAL: {
    name: 'Reversal',
    self_chances: 0,
    self_damage: 0,
    other_chances: 0,
    other_damage: 0,
    special: 'Next decrease increases both',
  },
  BANANAS: {
    name: 'Bananas',
    self_chances: -10,
    self_damage: 0,
    other_chances: -10,
    other_damage: 0,
    special: '',
  },
};

// from: ../dojo/src/types/challenge_state.cairo
type type_CHALLENGE_STATE = {
  NULL: number, // cairo: u8
  AWAITING: number, // cairo: u8
  WITHDRAWN: number, // cairo: u8
  REFUSED: number, // cairo: u8
  EXPIRED: number, // cairo: u8
  IN_PROGRESS: number, // cairo: u8
  RESOLVED: number, // cairo: u8
  DRAW: number, // cairo: u8
};
export const CHALLENGE_STATE: type_CHALLENGE_STATE = {
  NULL: 0,
  AWAITING: 1,
  WITHDRAWN: 2,
  REFUSED: 3,
  EXPIRED: 4,
  IN_PROGRESS: 5,
  RESOLVED: 6,
  DRAW: 7,
};

// from: ../dojo/src/types/constants.cairo
type type_CONST = {
  ROUND_COUNT: number, // cairo: u8
  MAX_DUELIST_ID: BigNumberish, // cairo: u128
  FULL_HEALTH: number, // cairo: u8
  DOUBLE_DAMAGE: number, // cairo: u8
  SINGLE_DAMAGE: number, // cairo: u8
  INITIAL_CHANCE: number, // cairo: u8
  INITIAL_DAMAGE: number, // cairo: u8
  ETH_TO_WEI: BigNumberish, // cairo: u256
};
export const CONST: type_CONST = {
  ROUND_COUNT: 1,
  MAX_DUELIST_ID: '0xffff',
  FULL_HEALTH: 3,
  DOUBLE_DAMAGE: 2,
  SINGLE_DAMAGE: 1,
  INITIAL_CHANCE: 50,
  INITIAL_DAMAGE: 1,
  ETH_TO_WEI: '1_000_000_000_000_000_000',
};

// from: ../dojo/src/types/constants.cairo
type type_HONOUR = {
  VILLAIN_START: number, // cairo: u8
  TRICKSTER_START: number, // cairo: u8
  LORD_START: number, // cairo: u8
  HALFWAY: number, // cairo: u8
  MAX: number, // cairo: u8
  LEVEL_MIN: number, // cairo: u8
  LEVEL_MAX: number, // cairo: u8
};
export const HONOUR: type_HONOUR = {
  VILLAIN_START: 10,
  TRICKSTER_START: 35,
  LORD_START: 75,
  HALFWAY: 50,
  MAX: 100,
  LEVEL_MIN: 10,
  LEVEL_MAX: 100,
};

// from: ../dojo/src/types/constants.cairo
type type_CHANCES = {
  NEVER: number, // cairo: u8
  ALWAYS: number, // cairo: u8
};
export const CHANCES: type_CHANCES = {
  NEVER: 0,
  ALWAYS: 100,
};

// from: ../dojo/src/types/events.cairo
type type_EVENT_SELECTOR = {
  DuelistRegisteredEvent: BigNumberish, // cairo: felt252
  NewChallengeEvent: BigNumberish, // cairo: felt252
  ChallengeAcceptedEvent: BigNumberish, // cairo: felt252
  ChallengeResolvedEvent: BigNumberish, // cairo: felt252
  DuelistTurnEvent: BigNumberish, // cairo: felt252
};
export const EVENT_SELECTOR: type_EVENT_SELECTOR = {
  DuelistRegisteredEvent: '0x148c3db21a55576bc012023dc4d3b5bd570c519de855849eac52b1c5d6c9e85',
  NewChallengeEvent: '0x14a0df74df51e02ef8dedabfd1ea9684ea2087bed6370e881b156d7e2e56975',
  ChallengeAcceptedEvent: '0x31cdbf7ac39747303190a727df1a270ae5e4f05191f6f58e452ce4eb1e98abe',
  ChallengeResolvedEvent: '0x23dfe05a8414fd8464370e120099be69327b2a52ae6655ff23733651e8281b1',
  DuelistTurnEvent: '0x19556e1418f1e7a7e6962eff75d1a46abd50bda431139f855ba85c9119754a4',
};

// from: ../dojo/src/types/round_state.cairo
type type_ROUND_STATE = {
  NULL: number, // cairo: u8
  COMMIT: number, // cairo: u8
  REVEAL: number, // cairo: u8
  FINISHED: number, // cairo: u8
};
export const ROUND_STATE: type_ROUND_STATE = {
  NULL: 0,
  COMMIT: 1,
  REVEAL: 2,
  FINISHED: 3,
};

// from: ../dojo/src/types/typed_data.cairo
type type_TYPED_DATA = {
  NAME: string, // cairo: felt252
  VERSION: string, // cairo: felt252
  COMMIT_MOVE_MESSAGE_TYPE_HASH: BigNumberish, // cairo: felt252
};
export const TYPED_DATA: type_TYPED_DATA = {
  NAME: 'Underware',
  VERSION: '0.1.0',
  COMMIT_MOVE_MESSAGE_TYPE_HASH: '0x74fe0c723488214ab442c24761e9b32d30216def5e93d1c110375d993482ae',
};

// from: ../dojo/src/utils/bitwise.cairo
type type_BITWISE = {
  MAX_U8: number, // cairo: u8
  MAX_U16: number, // cairo: u16
  MAX_U32: number, // cairo: u32
  MAX_U64: BigNumberish, // cairo: u64
  MAX_U128: BigNumberish, // cairo: u128
  MAX_U256: BigNumberish, // cairo: u256
  MSB_U8: number, // cairo: u8
  MSB_U16: number, // cairo: u16
  MSB_U32: number, // cairo: u32
  MSB_U64: BigNumberish, // cairo: u64
  MSB_U128: BigNumberish, // cairo: u128
  MSB_U256: BigNumberish, // cairo: u256
};
export const BITWISE: type_BITWISE = {
  MAX_U8: 0xff,
  MAX_U16: 0xffff,
  MAX_U32: 0xffffffff,
  MAX_U64: '0xffffffffffffffff',
  MAX_U128: '0xffffffffffffffffffffffffffffffff',
  MAX_U256: '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  MSB_U8: 0x80,
  MSB_U16: 0x8000,
  MSB_U32: 0x80000000,
  MSB_U64: '0x8000000000000000',
  MSB_U128: '0x80000000000000000000000000000000',
  MSB_U256: '0x8000000000000000000000000000000000000000000000000000000000000000',
};
