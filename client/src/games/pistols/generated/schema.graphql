schema {
  query: World__Query
  subscription: World__Subscription
}

scalar ByteArray

scalar ContractAddress

scalar Cursor

scalar DateTime

scalar Enum

union ModelUnion =
    origami_token_ERC20AllowanceModel
  | origami_token_ERC20BalanceModel
  | origami_token_ERC20BridgeableModel
  | origami_token_ERC20MetadataModel
  | origami_token_ERC721BalanceModel
  | origami_token_ERC721EnumerableIndexModel
  | origami_token_ERC721EnumerableOwnerIndexModel
  | origami_token_ERC721EnumerableOwnerTokenModel
  | origami_token_ERC721EnumerableTokenModel
  | origami_token_ERC721EnumerableTotalModel
  | origami_token_ERC721MetaModel
  | origami_token_ERC721OperatorApprovalModel
  | origami_token_ERC721OwnerModel
  | origami_token_ERC721TokenApprovalModel
  | origami_token_InitializableModel
  | origami_token_SRC5Model
  | pistols_Challenge
  | pistols_Config
  | pistols_Duelist
  | pistols_Pact
  | pistols_Round
  | pistols_Scoreboard
  | pistols_Snapshot
  | pistols_TableAdmittance
  | pistols_TableConfig
  | pistols_TokenConfig
  | pistols_Wager

enum OrderDirection {
  ASC
  DESC
}

type World__Content {
  name: String
  description: String
  website: String
  iconUri: String
  coverUri: String
  socials: [World__Social]
}

type World__Entity {
  id: ID
  keys: [String]
  eventId: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  models: [ModelUnion]
}

type World__EntityConnection {
  edges: [World__EntityEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EntityEdge {
  node: World__Entity
  cursor: Cursor
}

type World__Event {
  id: ID
  keys: [String]
  data: [String]
  executedAt: DateTime
  createdAt: DateTime
  transactionHash: String
}

type World__EventConnection {
  edges: [World__EventEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EventEdge {
  node: World__Event
  cursor: Cursor
}

type World__EventMessage {
  id: ID
  keys: [String]
  eventId: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  models: [ModelUnion]
}

type World__EventMessageConnection {
  edges: [World__EventMessageEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EventMessageEdge {
  node: World__EventMessage
  cursor: Cursor
}

type World__Metadata {
  id: ID
  uri: String
  worldAddress: String!
  content: World__Content
  iconImg: String
  coverImg: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

type World__MetadataConnection {
  edges: [World__MetadataEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__MetadataEdge {
  node: World__Metadata
  cursor: Cursor
}

type World__Model {
  id: ID
  name: String
  classHash: felt252
  contractAddress: felt252
  transactionHash: felt252
  executedAt: DateTime
  createdAt: DateTime
}

type World__ModelConnection {
  edges: [World__ModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__ModelEdge {
  node: World__Model
  cursor: Cursor
}

input World__ModelOrder {
  direction: OrderDirection!
  field: World__ModelOrderField!
}

enum World__ModelOrderField {
  NAME
  CLASS_HASH
}

type World__PageInfo {
  hasPreviousPage: Boolean
  hasNextPage: Boolean
  startCursor: Cursor
  endCursor: Cursor
}

type World__Query {
  entity(id: ID!): World__Entity!
  entities(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    keys: [String]
  ): World__EntityConnection
  eventMessage(id: ID!): World__EventMessage!
  eventMessages(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    keys: [String]
  ): World__EventMessageConnection
  events(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    keys: [String]
  ): World__EventConnection
  metadatas(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
  ): World__MetadataConnection
  model(id: ID!): World__Model!
  models(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    order: World__ModelOrder
  ): World__ModelConnection
  transaction(transactionHash: ID!): World__Transaction!
  transactions(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
  ): World__TransactionConnection
  origamiTokenErc20AllowanceModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC20AllowanceModelWhereInput
    order: origami_token_ERC20AllowanceModelOrder
  ): origami_token_ERC20AllowanceModelConnection
  origamiTokenErc20BalanceModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC20BalanceModelWhereInput
    order: origami_token_ERC20BalanceModelOrder
  ): origami_token_ERC20BalanceModelConnection
  origamiTokenErc20BridgeableModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC20BridgeableModelWhereInput
    order: origami_token_ERC20BridgeableModelOrder
  ): origami_token_ERC20BridgeableModelConnection
  origamiTokenErc20MetadataModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC20MetadataModelWhereInput
    order: origami_token_ERC20MetadataModelOrder
  ): origami_token_ERC20MetadataModelConnection
  origamiTokenErc721BalanceModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721BalanceModelWhereInput
    order: origami_token_ERC721BalanceModelOrder
  ): origami_token_ERC721BalanceModelConnection
  origamiTokenErc721EnumerableIndexModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721EnumerableIndexModelWhereInput
    order: origami_token_ERC721EnumerableIndexModelOrder
  ): origami_token_ERC721EnumerableIndexModelConnection
  origamiTokenErc721EnumerableOwnerIndexModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721EnumerableOwnerIndexModelWhereInput
    order: origami_token_ERC721EnumerableOwnerIndexModelOrder
  ): origami_token_ERC721EnumerableOwnerIndexModelConnection
  origamiTokenErc721EnumerableOwnerTokenModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721EnumerableOwnerTokenModelWhereInput
    order: origami_token_ERC721EnumerableOwnerTokenModelOrder
  ): origami_token_ERC721EnumerableOwnerTokenModelConnection
  origamiTokenErc721EnumerableTokenModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721EnumerableTokenModelWhereInput
    order: origami_token_ERC721EnumerableTokenModelOrder
  ): origami_token_ERC721EnumerableTokenModelConnection
  origamiTokenErc721EnumerableTotalModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721EnumerableTotalModelWhereInput
    order: origami_token_ERC721EnumerableTotalModelOrder
  ): origami_token_ERC721EnumerableTotalModelConnection
  origamiTokenErc721MetaModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721MetaModelWhereInput
    order: origami_token_ERC721MetaModelOrder
  ): origami_token_ERC721MetaModelConnection
  origamiTokenErc721OperatorApprovalModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721OperatorApprovalModelWhereInput
    order: origami_token_ERC721OperatorApprovalModelOrder
  ): origami_token_ERC721OperatorApprovalModelConnection
  origamiTokenErc721OwnerModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721OwnerModelWhereInput
    order: origami_token_ERC721OwnerModelOrder
  ): origami_token_ERC721OwnerModelConnection
  origamiTokenErc721TokenApprovalModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_ERC721TokenApprovalModelWhereInput
    order: origami_token_ERC721TokenApprovalModelOrder
  ): origami_token_ERC721TokenApprovalModelConnection
  origamiTokenInitializableModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_InitializableModelWhereInput
    order: origami_token_InitializableModelOrder
  ): origami_token_InitializableModelConnection
  origamiTokenSrc5ModelModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: origami_token_SRC5ModelWhereInput
    order: origami_token_SRC5ModelOrder
  ): origami_token_SRC5ModelConnection
  pistolsChallengeModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_ChallengeWhereInput
    order: pistols_ChallengeOrder
  ): pistols_ChallengeConnection
  pistolsConfigModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_ConfigWhereInput
    order: pistols_ConfigOrder
  ): pistols_ConfigConnection
  pistolsDuelistModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_DuelistWhereInput
    order: pistols_DuelistOrder
  ): pistols_DuelistConnection
  pistolsPactModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_PactWhereInput
    order: pistols_PactOrder
  ): pistols_PactConnection
  pistolsRoundModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_RoundWhereInput
    order: pistols_RoundOrder
  ): pistols_RoundConnection
  pistolsScoreboardModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_ScoreboardWhereInput
    order: pistols_ScoreboardOrder
  ): pistols_ScoreboardConnection
  pistolsSnapshotModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_SnapshotWhereInput
    order: pistols_SnapshotOrder
  ): pistols_SnapshotConnection
  pistolsTableAdmittanceModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_TableAdmittanceWhereInput
    order: pistols_TableAdmittanceOrder
  ): pistols_TableAdmittanceConnection
  pistolsTableConfigModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_TableConfigWhereInput
    order: pistols_TableConfigOrder
  ): pistols_TableConfigConnection
  pistolsTokenConfigModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_TokenConfigWhereInput
    order: pistols_TokenConfigOrder
  ): pistols_TokenConfigConnection
  pistolsWagerModels(
    first: Int
    last: Int
    before: Cursor
    after: Cursor
    offset: Int
    limit: Int
    where: pistols_WagerWhereInput
    order: pistols_WagerOrder
  ): pistols_WagerConnection
}

type World__Social {
  name: String
  url: String
}

type World__Subscription {
  entityUpdated(id: ID): World__Entity!
  eventMessageUpdated(id: ID): World__EventMessage!
  eventEmitted(keys: [String]): World__Event!
  modelRegistered(id: ID): World__Model!
}

type World__Transaction {
  id: ID
  transactionHash: felt252
  senderAddress: felt252
  calldata: [felt252]
  maxFee: felt252
  signature: [felt252]
  nonce: felt252
  executedAt: DateTime
  createdAt: DateTime
}

type World__TransactionConnection {
  edges: [World__TransactionEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__TransactionEdge {
  node: World__Transaction
  cursor: Cursor
}

scalar bool

scalar felt252

type origami_token_ERC20AllowanceModel {
  token: ContractAddress
  owner: ContractAddress
  spender: ContractAddress
  amount: u256
  entity: World__Entity
}

type origami_token_ERC20AllowanceModelConnection {
  edges: [origami_token_ERC20AllowanceModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC20AllowanceModelEdge {
  node: origami_token_ERC20AllowanceModel
  cursor: Cursor
}

input origami_token_ERC20AllowanceModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC20AllowanceModelOrderField!
}

enum origami_token_ERC20AllowanceModelOrderField {
  TOKEN
  OWNER
  SPENDER
  AMOUNT
}

input origami_token_ERC20AllowanceModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  owner: ContractAddress
  ownerGT: ContractAddress
  ownerGTE: ContractAddress
  ownerLT: ContractAddress
  ownerLTE: ContractAddress
  ownerNEQ: ContractAddress
  ownerEQ: ContractAddress
  ownerNOTIN: [ContractAddress]
  ownerIN: [ContractAddress]
  ownerNOTLIKE: ContractAddress
  ownerLIKE: ContractAddress
  spender: ContractAddress
  spenderGT: ContractAddress
  spenderGTE: ContractAddress
  spenderLT: ContractAddress
  spenderLTE: ContractAddress
  spenderNEQ: ContractAddress
  spenderEQ: ContractAddress
  spenderNOTIN: [ContractAddress]
  spenderIN: [ContractAddress]
  spenderNOTLIKE: ContractAddress
  spenderLIKE: ContractAddress
  amount: u256
  amountGT: u256
  amountGTE: u256
  amountLT: u256
  amountLTE: u256
  amountNEQ: u256
  amountEQ: u256
  amountNOTIN: [u256]
  amountIN: [u256]
  amountNOTLIKE: u256
  amountLIKE: u256
}

type origami_token_ERC20BalanceModel {
  token: ContractAddress
  account: ContractAddress
  amount: u256
  entity: World__Entity
}

type origami_token_ERC20BalanceModelConnection {
  edges: [origami_token_ERC20BalanceModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC20BalanceModelEdge {
  node: origami_token_ERC20BalanceModel
  cursor: Cursor
}

input origami_token_ERC20BalanceModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC20BalanceModelOrderField!
}

enum origami_token_ERC20BalanceModelOrderField {
  TOKEN
  ACCOUNT
  AMOUNT
}

input origami_token_ERC20BalanceModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  account: ContractAddress
  accountGT: ContractAddress
  accountGTE: ContractAddress
  accountLT: ContractAddress
  accountLTE: ContractAddress
  accountNEQ: ContractAddress
  accountEQ: ContractAddress
  accountNOTIN: [ContractAddress]
  accountIN: [ContractAddress]
  accountNOTLIKE: ContractAddress
  accountLIKE: ContractAddress
  amount: u256
  amountGT: u256
  amountGTE: u256
  amountLT: u256
  amountLTE: u256
  amountNEQ: u256
  amountEQ: u256
  amountNOTIN: [u256]
  amountIN: [u256]
  amountNOTLIKE: u256
  amountLIKE: u256
}

type origami_token_ERC20BridgeableModel {
  token: ContractAddress
  l2_bridge_address: ContractAddress
  entity: World__Entity
}

type origami_token_ERC20BridgeableModelConnection {
  edges: [origami_token_ERC20BridgeableModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC20BridgeableModelEdge {
  node: origami_token_ERC20BridgeableModel
  cursor: Cursor
}

input origami_token_ERC20BridgeableModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC20BridgeableModelOrderField!
}

enum origami_token_ERC20BridgeableModelOrderField {
  TOKEN
  L2_BRIDGE_ADDRESS
}

input origami_token_ERC20BridgeableModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  l2_bridge_address: ContractAddress
  l2_bridge_addressGT: ContractAddress
  l2_bridge_addressGTE: ContractAddress
  l2_bridge_addressLT: ContractAddress
  l2_bridge_addressLTE: ContractAddress
  l2_bridge_addressNEQ: ContractAddress
  l2_bridge_addressEQ: ContractAddress
  l2_bridge_addressNOTIN: [ContractAddress]
  l2_bridge_addressIN: [ContractAddress]
  l2_bridge_addressNOTLIKE: ContractAddress
  l2_bridge_addressLIKE: ContractAddress
}

type origami_token_ERC20MetadataModel {
  token: ContractAddress
  name: ByteArray
  symbol: ByteArray
  decimals: u8
  total_supply: u256
  entity: World__Entity
}

type origami_token_ERC20MetadataModelConnection {
  edges: [origami_token_ERC20MetadataModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC20MetadataModelEdge {
  node: origami_token_ERC20MetadataModel
  cursor: Cursor
}

input origami_token_ERC20MetadataModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC20MetadataModelOrderField!
}

enum origami_token_ERC20MetadataModelOrderField {
  TOKEN
  NAME
  SYMBOL
  DECIMALS
  TOTAL_SUPPLY
}

input origami_token_ERC20MetadataModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  name: ByteArray
  nameGT: ByteArray
  nameGTE: ByteArray
  nameLT: ByteArray
  nameLTE: ByteArray
  nameNEQ: ByteArray
  nameEQ: ByteArray
  nameNOTIN: [ByteArray]
  nameIN: [ByteArray]
  nameNOTLIKE: ByteArray
  nameLIKE: ByteArray
  symbol: ByteArray
  symbolGT: ByteArray
  symbolGTE: ByteArray
  symbolLT: ByteArray
  symbolLTE: ByteArray
  symbolNEQ: ByteArray
  symbolEQ: ByteArray
  symbolNOTIN: [ByteArray]
  symbolIN: [ByteArray]
  symbolNOTLIKE: ByteArray
  symbolLIKE: ByteArray
  decimals: u8
  decimalsGT: u8
  decimalsGTE: u8
  decimalsLT: u8
  decimalsLTE: u8
  decimalsNEQ: u8
  decimalsEQ: u8
  decimalsNOTIN: [u8]
  decimalsIN: [u8]
  decimalsNOTLIKE: u8
  decimalsLIKE: u8
  total_supply: u256
  total_supplyGT: u256
  total_supplyGTE: u256
  total_supplyLT: u256
  total_supplyLTE: u256
  total_supplyNEQ: u256
  total_supplyEQ: u256
  total_supplyNOTIN: [u256]
  total_supplyIN: [u256]
  total_supplyNOTLIKE: u256
  total_supplyLIKE: u256
}

type origami_token_ERC721BalanceModel {
  token: ContractAddress
  account: ContractAddress
  amount: u128
  entity: World__Entity
}

type origami_token_ERC721BalanceModelConnection {
  edges: [origami_token_ERC721BalanceModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721BalanceModelEdge {
  node: origami_token_ERC721BalanceModel
  cursor: Cursor
}

input origami_token_ERC721BalanceModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721BalanceModelOrderField!
}

enum origami_token_ERC721BalanceModelOrderField {
  TOKEN
  ACCOUNT
  AMOUNT
}

input origami_token_ERC721BalanceModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  account: ContractAddress
  accountGT: ContractAddress
  accountGTE: ContractAddress
  accountLT: ContractAddress
  accountLTE: ContractAddress
  accountNEQ: ContractAddress
  accountEQ: ContractAddress
  accountNOTIN: [ContractAddress]
  accountIN: [ContractAddress]
  accountNOTLIKE: ContractAddress
  accountLIKE: ContractAddress
  amount: u128
  amountGT: u128
  amountGTE: u128
  amountLT: u128
  amountLTE: u128
  amountNEQ: u128
  amountEQ: u128
  amountNOTIN: [u128]
  amountIN: [u128]
  amountNOTLIKE: u128
  amountLIKE: u128
}

type origami_token_ERC721EnumerableIndexModel {
  token: ContractAddress
  index: u128
  token_id: u128
  entity: World__Entity
}

type origami_token_ERC721EnumerableIndexModelConnection {
  edges: [origami_token_ERC721EnumerableIndexModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721EnumerableIndexModelEdge {
  node: origami_token_ERC721EnumerableIndexModel
  cursor: Cursor
}

input origami_token_ERC721EnumerableIndexModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721EnumerableIndexModelOrderField!
}

enum origami_token_ERC721EnumerableIndexModelOrderField {
  TOKEN
  INDEX
  TOKEN_ID
}

input origami_token_ERC721EnumerableIndexModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  index: u128
  indexGT: u128
  indexGTE: u128
  indexLT: u128
  indexLTE: u128
  indexNEQ: u128
  indexEQ: u128
  indexNOTIN: [u128]
  indexIN: [u128]
  indexNOTLIKE: u128
  indexLIKE: u128
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
}

type origami_token_ERC721EnumerableOwnerIndexModel {
  token: ContractAddress
  owner: ContractAddress
  index: u128
  token_id: u128
  entity: World__Entity
}

type origami_token_ERC721EnumerableOwnerIndexModelConnection {
  edges: [origami_token_ERC721EnumerableOwnerIndexModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721EnumerableOwnerIndexModelEdge {
  node: origami_token_ERC721EnumerableOwnerIndexModel
  cursor: Cursor
}

input origami_token_ERC721EnumerableOwnerIndexModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721EnumerableOwnerIndexModelOrderField!
}

enum origami_token_ERC721EnumerableOwnerIndexModelOrderField {
  TOKEN
  OWNER
  INDEX
  TOKEN_ID
}

input origami_token_ERC721EnumerableOwnerIndexModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  owner: ContractAddress
  ownerGT: ContractAddress
  ownerGTE: ContractAddress
  ownerLT: ContractAddress
  ownerLTE: ContractAddress
  ownerNEQ: ContractAddress
  ownerEQ: ContractAddress
  ownerNOTIN: [ContractAddress]
  ownerIN: [ContractAddress]
  ownerNOTLIKE: ContractAddress
  ownerLIKE: ContractAddress
  index: u128
  indexGT: u128
  indexGTE: u128
  indexLT: u128
  indexLTE: u128
  indexNEQ: u128
  indexEQ: u128
  indexNOTIN: [u128]
  indexIN: [u128]
  indexNOTLIKE: u128
  indexLIKE: u128
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
}

type origami_token_ERC721EnumerableOwnerTokenModel {
  token: ContractAddress
  owner: ContractAddress
  token_id: u128
  index: u128
  entity: World__Entity
}

type origami_token_ERC721EnumerableOwnerTokenModelConnection {
  edges: [origami_token_ERC721EnumerableOwnerTokenModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721EnumerableOwnerTokenModelEdge {
  node: origami_token_ERC721EnumerableOwnerTokenModel
  cursor: Cursor
}

input origami_token_ERC721EnumerableOwnerTokenModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721EnumerableOwnerTokenModelOrderField!
}

enum origami_token_ERC721EnumerableOwnerTokenModelOrderField {
  TOKEN
  OWNER
  TOKEN_ID
  INDEX
}

input origami_token_ERC721EnumerableOwnerTokenModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  owner: ContractAddress
  ownerGT: ContractAddress
  ownerGTE: ContractAddress
  ownerLT: ContractAddress
  ownerLTE: ContractAddress
  ownerNEQ: ContractAddress
  ownerEQ: ContractAddress
  ownerNOTIN: [ContractAddress]
  ownerIN: [ContractAddress]
  ownerNOTLIKE: ContractAddress
  ownerLIKE: ContractAddress
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
  index: u128
  indexGT: u128
  indexGTE: u128
  indexLT: u128
  indexLTE: u128
  indexNEQ: u128
  indexEQ: u128
  indexNOTIN: [u128]
  indexIN: [u128]
  indexNOTLIKE: u128
  indexLIKE: u128
}

type origami_token_ERC721EnumerableTokenModel {
  token: ContractAddress
  token_id: u128
  index: u128
  entity: World__Entity
}

type origami_token_ERC721EnumerableTokenModelConnection {
  edges: [origami_token_ERC721EnumerableTokenModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721EnumerableTokenModelEdge {
  node: origami_token_ERC721EnumerableTokenModel
  cursor: Cursor
}

input origami_token_ERC721EnumerableTokenModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721EnumerableTokenModelOrderField!
}

enum origami_token_ERC721EnumerableTokenModelOrderField {
  TOKEN
  TOKEN_ID
  INDEX
}

input origami_token_ERC721EnumerableTokenModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
  index: u128
  indexGT: u128
  indexGTE: u128
  indexLT: u128
  indexLTE: u128
  indexNEQ: u128
  indexEQ: u128
  indexNOTIN: [u128]
  indexIN: [u128]
  indexNOTLIKE: u128
  indexLIKE: u128
}

type origami_token_ERC721EnumerableTotalModel {
  token: ContractAddress
  total_supply: u128
  entity: World__Entity
}

type origami_token_ERC721EnumerableTotalModelConnection {
  edges: [origami_token_ERC721EnumerableTotalModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721EnumerableTotalModelEdge {
  node: origami_token_ERC721EnumerableTotalModel
  cursor: Cursor
}

input origami_token_ERC721EnumerableTotalModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721EnumerableTotalModelOrderField!
}

enum origami_token_ERC721EnumerableTotalModelOrderField {
  TOKEN
  TOTAL_SUPPLY
}

input origami_token_ERC721EnumerableTotalModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  total_supply: u128
  total_supplyGT: u128
  total_supplyGTE: u128
  total_supplyLT: u128
  total_supplyLTE: u128
  total_supplyNEQ: u128
  total_supplyEQ: u128
  total_supplyNOTIN: [u128]
  total_supplyIN: [u128]
  total_supplyNOTLIKE: u128
  total_supplyLIKE: u128
}

type origami_token_ERC721MetaModel {
  token: ContractAddress
  name: ByteArray
  symbol: ByteArray
  base_uri: ByteArray
  entity: World__Entity
}

type origami_token_ERC721MetaModelConnection {
  edges: [origami_token_ERC721MetaModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721MetaModelEdge {
  node: origami_token_ERC721MetaModel
  cursor: Cursor
}

input origami_token_ERC721MetaModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721MetaModelOrderField!
}

enum origami_token_ERC721MetaModelOrderField {
  TOKEN
  NAME
  SYMBOL
  BASE_URI
}

input origami_token_ERC721MetaModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  name: ByteArray
  nameGT: ByteArray
  nameGTE: ByteArray
  nameLT: ByteArray
  nameLTE: ByteArray
  nameNEQ: ByteArray
  nameEQ: ByteArray
  nameNOTIN: [ByteArray]
  nameIN: [ByteArray]
  nameNOTLIKE: ByteArray
  nameLIKE: ByteArray
  symbol: ByteArray
  symbolGT: ByteArray
  symbolGTE: ByteArray
  symbolLT: ByteArray
  symbolLTE: ByteArray
  symbolNEQ: ByteArray
  symbolEQ: ByteArray
  symbolNOTIN: [ByteArray]
  symbolIN: [ByteArray]
  symbolNOTLIKE: ByteArray
  symbolLIKE: ByteArray
  base_uri: ByteArray
  base_uriGT: ByteArray
  base_uriGTE: ByteArray
  base_uriLT: ByteArray
  base_uriLTE: ByteArray
  base_uriNEQ: ByteArray
  base_uriEQ: ByteArray
  base_uriNOTIN: [ByteArray]
  base_uriIN: [ByteArray]
  base_uriNOTLIKE: ByteArray
  base_uriLIKE: ByteArray
}

type origami_token_ERC721OperatorApprovalModel {
  token: ContractAddress
  owner: ContractAddress
  operator: ContractAddress
  approved: bool
  entity: World__Entity
}

type origami_token_ERC721OperatorApprovalModelConnection {
  edges: [origami_token_ERC721OperatorApprovalModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721OperatorApprovalModelEdge {
  node: origami_token_ERC721OperatorApprovalModel
  cursor: Cursor
}

input origami_token_ERC721OperatorApprovalModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721OperatorApprovalModelOrderField!
}

enum origami_token_ERC721OperatorApprovalModelOrderField {
  TOKEN
  OWNER
  OPERATOR
  APPROVED
}

input origami_token_ERC721OperatorApprovalModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  owner: ContractAddress
  ownerGT: ContractAddress
  ownerGTE: ContractAddress
  ownerLT: ContractAddress
  ownerLTE: ContractAddress
  ownerNEQ: ContractAddress
  ownerEQ: ContractAddress
  ownerNOTIN: [ContractAddress]
  ownerIN: [ContractAddress]
  ownerNOTLIKE: ContractAddress
  ownerLIKE: ContractAddress
  operator: ContractAddress
  operatorGT: ContractAddress
  operatorGTE: ContractAddress
  operatorLT: ContractAddress
  operatorLTE: ContractAddress
  operatorNEQ: ContractAddress
  operatorEQ: ContractAddress
  operatorNOTIN: [ContractAddress]
  operatorIN: [ContractAddress]
  operatorNOTLIKE: ContractAddress
  operatorLIKE: ContractAddress
  approved: bool
}

type origami_token_ERC721OwnerModel {
  token: ContractAddress
  token_id: u128
  address: ContractAddress
  entity: World__Entity
}

type origami_token_ERC721OwnerModelConnection {
  edges: [origami_token_ERC721OwnerModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721OwnerModelEdge {
  node: origami_token_ERC721OwnerModel
  cursor: Cursor
}

input origami_token_ERC721OwnerModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721OwnerModelOrderField!
}

enum origami_token_ERC721OwnerModelOrderField {
  TOKEN
  TOKEN_ID
  ADDRESS
}

input origami_token_ERC721OwnerModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
  address: ContractAddress
  addressGT: ContractAddress
  addressGTE: ContractAddress
  addressLT: ContractAddress
  addressLTE: ContractAddress
  addressNEQ: ContractAddress
  addressEQ: ContractAddress
  addressNOTIN: [ContractAddress]
  addressIN: [ContractAddress]
  addressNOTLIKE: ContractAddress
  addressLIKE: ContractAddress
}

type origami_token_ERC721TokenApprovalModel {
  token: ContractAddress
  token_id: u128
  address: ContractAddress
  entity: World__Entity
}

type origami_token_ERC721TokenApprovalModelConnection {
  edges: [origami_token_ERC721TokenApprovalModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_ERC721TokenApprovalModelEdge {
  node: origami_token_ERC721TokenApprovalModel
  cursor: Cursor
}

input origami_token_ERC721TokenApprovalModelOrder {
  direction: OrderDirection!
  field: origami_token_ERC721TokenApprovalModelOrderField!
}

enum origami_token_ERC721TokenApprovalModelOrderField {
  TOKEN
  TOKEN_ID
  ADDRESS
}

input origami_token_ERC721TokenApprovalModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
  address: ContractAddress
  addressGT: ContractAddress
  addressGTE: ContractAddress
  addressLT: ContractAddress
  addressLTE: ContractAddress
  addressNEQ: ContractAddress
  addressEQ: ContractAddress
  addressNOTIN: [ContractAddress]
  addressIN: [ContractAddress]
  addressNOTLIKE: ContractAddress
  addressLIKE: ContractAddress
}

type origami_token_InitializableModel {
  token: ContractAddress
  initialized: bool
  entity: World__Entity
}

type origami_token_InitializableModelConnection {
  edges: [origami_token_InitializableModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_InitializableModelEdge {
  node: origami_token_InitializableModel
  cursor: Cursor
}

input origami_token_InitializableModelOrder {
  direction: OrderDirection!
  field: origami_token_InitializableModelOrderField!
}

enum origami_token_InitializableModelOrderField {
  TOKEN
  INITIALIZED
}

input origami_token_InitializableModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  initialized: bool
}

type origami_token_SRC5Model {
  token: ContractAddress
  interface_id: felt252
  supports: bool
  entity: World__Entity
}

type origami_token_SRC5ModelConnection {
  edges: [origami_token_SRC5ModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type origami_token_SRC5ModelEdge {
  node: origami_token_SRC5Model
  cursor: Cursor
}

input origami_token_SRC5ModelOrder {
  direction: OrderDirection!
  field: origami_token_SRC5ModelOrderField!
}

enum origami_token_SRC5ModelOrderField {
  TOKEN
  INTERFACE_ID
  SUPPORTS
}

input origami_token_SRC5ModelWhereInput {
  token: ContractAddress
  tokenGT: ContractAddress
  tokenGTE: ContractAddress
  tokenLT: ContractAddress
  tokenLTE: ContractAddress
  tokenNEQ: ContractAddress
  tokenEQ: ContractAddress
  tokenNOTIN: [ContractAddress]
  tokenIN: [ContractAddress]
  tokenNOTLIKE: ContractAddress
  tokenLIKE: ContractAddress
  interface_id: felt252
  interface_idGT: felt252
  interface_idGTE: felt252
  interface_idLT: felt252
  interface_idLTE: felt252
  interface_idNEQ: felt252
  interface_idEQ: felt252
  interface_idNOTIN: [felt252]
  interface_idIN: [felt252]
  interface_idNOTLIKE: felt252
  interface_idLIKE: felt252
  supports: bool
}

type pistols_Challenge {
  duel_id: u128
  table_id: felt252
  message: felt252
  address_a: ContractAddress
  address_b: ContractAddress
  duelist_id_a: u128
  duelist_id_b: u128
  state: Enum
  round_number: u8
  winner: u8
  timestamp_start: u64
  timestamp_end: u64
  entity: World__Entity
}

type pistols_ChallengeConnection {
  edges: [pistols_ChallengeEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ChallengeEdge {
  node: pistols_Challenge
  cursor: Cursor
}

input pistols_ChallengeOrder {
  direction: OrderDirection!
  field: pistols_ChallengeOrderField!
}

enum pistols_ChallengeOrderField {
  DUEL_ID
  TABLE_ID
  MESSAGE
  ADDRESS_A
  ADDRESS_B
  DUELIST_ID_A
  DUELIST_ID_B
  STATE
  ROUND_NUMBER
  WINNER
  TIMESTAMP_START
  TIMESTAMP_END
}

input pistols_ChallengeWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  message: felt252
  messageGT: felt252
  messageGTE: felt252
  messageLT: felt252
  messageLTE: felt252
  messageNEQ: felt252
  messageEQ: felt252
  messageNOTIN: [felt252]
  messageIN: [felt252]
  messageNOTLIKE: felt252
  messageLIKE: felt252
  address_a: ContractAddress
  address_aGT: ContractAddress
  address_aGTE: ContractAddress
  address_aLT: ContractAddress
  address_aLTE: ContractAddress
  address_aNEQ: ContractAddress
  address_aEQ: ContractAddress
  address_aNOTIN: [ContractAddress]
  address_aIN: [ContractAddress]
  address_aNOTLIKE: ContractAddress
  address_aLIKE: ContractAddress
  address_b: ContractAddress
  address_bGT: ContractAddress
  address_bGTE: ContractAddress
  address_bLT: ContractAddress
  address_bLTE: ContractAddress
  address_bNEQ: ContractAddress
  address_bEQ: ContractAddress
  address_bNOTIN: [ContractAddress]
  address_bIN: [ContractAddress]
  address_bNOTLIKE: ContractAddress
  address_bLIKE: ContractAddress
  duelist_id_a: u128
  duelist_id_aGT: u128
  duelist_id_aGTE: u128
  duelist_id_aLT: u128
  duelist_id_aLTE: u128
  duelist_id_aNEQ: u128
  duelist_id_aEQ: u128
  duelist_id_aNOTIN: [u128]
  duelist_id_aIN: [u128]
  duelist_id_aNOTLIKE: u128
  duelist_id_aLIKE: u128
  duelist_id_b: u128
  duelist_id_bGT: u128
  duelist_id_bGTE: u128
  duelist_id_bLT: u128
  duelist_id_bLTE: u128
  duelist_id_bNEQ: u128
  duelist_id_bEQ: u128
  duelist_id_bNOTIN: [u128]
  duelist_id_bIN: [u128]
  duelist_id_bNOTLIKE: u128
  duelist_id_bLIKE: u128
  state: Enum
  round_number: u8
  round_numberGT: u8
  round_numberGTE: u8
  round_numberLT: u8
  round_numberLTE: u8
  round_numberNEQ: u8
  round_numberEQ: u8
  round_numberNOTIN: [u8]
  round_numberIN: [u8]
  round_numberNOTLIKE: u8
  round_numberLIKE: u8
  winner: u8
  winnerGT: u8
  winnerGTE: u8
  winnerLT: u8
  winnerLTE: u8
  winnerNEQ: u8
  winnerEQ: u8
  winnerNOTIN: [u8]
  winnerIN: [u8]
  winnerNOTLIKE: u8
  winnerLIKE: u8
  timestamp_start: u64
  timestamp_startGT: u64
  timestamp_startGTE: u64
  timestamp_startLT: u64
  timestamp_startLTE: u64
  timestamp_startNEQ: u64
  timestamp_startEQ: u64
  timestamp_startNOTIN: [u64]
  timestamp_startIN: [u64]
  timestamp_startNOTLIKE: u64
  timestamp_startLIKE: u64
  timestamp_end: u64
  timestamp_endGT: u64
  timestamp_endGTE: u64
  timestamp_endLT: u64
  timestamp_endLTE: u64
  timestamp_endNEQ: u64
  timestamp_endEQ: u64
  timestamp_endNOTIN: [u64]
  timestamp_endIN: [u64]
  timestamp_endNOTLIKE: u64
  timestamp_endLIKE: u64
}

type pistols_Config {
  key: u8
  treasury_address: ContractAddress
  paused: bool
  entity: World__Entity
}

type pistols_ConfigConnection {
  edges: [pistols_ConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ConfigEdge {
  node: pistols_Config
  cursor: Cursor
}

input pistols_ConfigOrder {
  direction: OrderDirection!
  field: pistols_ConfigOrderField!
}

enum pistols_ConfigOrderField {
  KEY
  TREASURY_ADDRESS
  PAUSED
}

input pistols_ConfigWhereInput {
  key: u8
  keyGT: u8
  keyGTE: u8
  keyLT: u8
  keyLTE: u8
  keyNEQ: u8
  keyEQ: u8
  keyNOTIN: [u8]
  keyIN: [u8]
  keyNOTLIKE: u8
  keyLIKE: u8
  treasury_address: ContractAddress
  treasury_addressGT: ContractAddress
  treasury_addressGTE: ContractAddress
  treasury_addressLT: ContractAddress
  treasury_addressLTE: ContractAddress
  treasury_addressNEQ: ContractAddress
  treasury_addressEQ: ContractAddress
  treasury_addressNOTIN: [ContractAddress]
  treasury_addressIN: [ContractAddress]
  treasury_addressNOTLIKE: ContractAddress
  treasury_addressLIKE: ContractAddress
  paused: bool
}

type pistols_Duelist {
  duelist_id: u128
  name: felt252
  profile_pic_uri: ByteArray
  profile_pic_type: Enum
  timestamp: u64
  score: pistols_Duelist_Score
  entity: World__Entity
}

type pistols_DuelistConnection {
  edges: [pistols_DuelistEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_DuelistEdge {
  node: pistols_Duelist
  cursor: Cursor
}

input pistols_DuelistOrder {
  direction: OrderDirection!
  field: pistols_DuelistOrderField!
}

enum pistols_DuelistOrderField {
  DUELIST_ID
  NAME
  PROFILE_PIC_URI
  PROFILE_PIC_TYPE
  TIMESTAMP
  SCORE
}

input pistols_DuelistWhereInput {
  duelist_id: u128
  duelist_idGT: u128
  duelist_idGTE: u128
  duelist_idLT: u128
  duelist_idLTE: u128
  duelist_idNEQ: u128
  duelist_idEQ: u128
  duelist_idNOTIN: [u128]
  duelist_idIN: [u128]
  duelist_idNOTLIKE: u128
  duelist_idLIKE: u128
  name: felt252
  nameGT: felt252
  nameGTE: felt252
  nameLT: felt252
  nameLTE: felt252
  nameNEQ: felt252
  nameEQ: felt252
  nameNOTIN: [felt252]
  nameIN: [felt252]
  nameNOTLIKE: felt252
  nameLIKE: felt252
  profile_pic_uri: ByteArray
  profile_pic_uriGT: ByteArray
  profile_pic_uriGTE: ByteArray
  profile_pic_uriLT: ByteArray
  profile_pic_uriLTE: ByteArray
  profile_pic_uriNEQ: ByteArray
  profile_pic_uriEQ: ByteArray
  profile_pic_uriNOTIN: [ByteArray]
  profile_pic_uriIN: [ByteArray]
  profile_pic_uriNOTLIKE: ByteArray
  profile_pic_uriLIKE: ByteArray
  profile_pic_type: Enum
  timestamp: u64
  timestampGT: u64
  timestampGTE: u64
  timestampLT: u64
  timestampLTE: u64
  timestampNEQ: u64
  timestampEQ: u64
  timestampNOTIN: [u64]
  timestampIN: [u64]
  timestampNOTLIKE: u64
  timestampLIKE: u64
}

type pistols_Duelist_Score {
  honour: u8
  level_villain: u8
  level_trickster: u8
  level_lord: u8
  total_duels: u16
  total_wins: u16
  total_losses: u16
  total_draws: u16
  honour_history: u64
}

type pistols_Pact {
  table_id: felt252
  pair: u128
  duel_id: u128
  entity: World__Entity
}

type pistols_PactConnection {
  edges: [pistols_PactEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PactEdge {
  node: pistols_Pact
  cursor: Cursor
}

input pistols_PactOrder {
  direction: OrderDirection!
  field: pistols_PactOrderField!
}

enum pistols_PactOrderField {
  TABLE_ID
  PAIR
  DUEL_ID
}

input pistols_PactWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  pair: u128
  pairGT: u128
  pairGTE: u128
  pairLT: u128
  pairLTE: u128
  pairNEQ: u128
  pairEQ: u128
  pairNOTIN: [u128]
  pairIN: [u128]
  pairNOTLIKE: u128
  pairLIKE: u128
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
}

type pistols_Round {
  duel_id: u128
  round_number: u8
  state: Enum
  shot_a: pistols_Round_Shot
  shot_b: pistols_Round_Shot
  entity: World__Entity
}

type pistols_RoundConnection {
  edges: [pistols_RoundEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_RoundEdge {
  node: pistols_Round
  cursor: Cursor
}

input pistols_RoundOrder {
  direction: OrderDirection!
  field: pistols_RoundOrderField!
}

enum pistols_RoundOrderField {
  DUEL_ID
  ROUND_NUMBER
  STATE
  SHOT_A
  SHOT_B
}

input pistols_RoundWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  round_number: u8
  round_numberGT: u8
  round_numberGTE: u8
  round_numberLT: u8
  round_numberLTE: u8
  round_numberNEQ: u8
  round_numberEQ: u8
  round_numberNOTIN: [u8]
  round_numberIN: [u8]
  round_numberNOTLIKE: u8
  round_numberLIKE: u8
  state: Enum
}

type pistols_Round_Shot {
  hash: u64
  salt: u64
  action: u16
  chance_crit: u8
  chance_hit: u8
  chance_lethal: u8
  dice_crit: u8
  dice_hit: u8
  damage: u8
  block: u8
  win: u8
  wager: u8
  health: u8
  honour: u8
}

type pistols_Scoreboard {
  table_id: felt252
  duelist_id: u128
  score: pistols_Scoreboard_Score
  wager_won: u128
  wager_lost: u128
  entity: World__Entity
}

type pistols_ScoreboardConnection {
  edges: [pistols_ScoreboardEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ScoreboardEdge {
  node: pistols_Scoreboard
  cursor: Cursor
}

input pistols_ScoreboardOrder {
  direction: OrderDirection!
  field: pistols_ScoreboardOrderField!
}

enum pistols_ScoreboardOrderField {
  TABLE_ID
  DUELIST_ID
  SCORE
  WAGER_WON
  WAGER_LOST
}

input pistols_ScoreboardWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  duelist_id: u128
  duelist_idGT: u128
  duelist_idGTE: u128
  duelist_idLT: u128
  duelist_idLTE: u128
  duelist_idNEQ: u128
  duelist_idEQ: u128
  duelist_idNOTIN: [u128]
  duelist_idIN: [u128]
  duelist_idNOTLIKE: u128
  duelist_idLIKE: u128
  wager_won: u128
  wager_wonGT: u128
  wager_wonGTE: u128
  wager_wonLT: u128
  wager_wonLTE: u128
  wager_wonNEQ: u128
  wager_wonEQ: u128
  wager_wonNOTIN: [u128]
  wager_wonIN: [u128]
  wager_wonNOTLIKE: u128
  wager_wonLIKE: u128
  wager_lost: u128
  wager_lostGT: u128
  wager_lostGTE: u128
  wager_lostLT: u128
  wager_lostLTE: u128
  wager_lostNEQ: u128
  wager_lostEQ: u128
  wager_lostNOTIN: [u128]
  wager_lostIN: [u128]
  wager_lostNOTLIKE: u128
  wager_lostLIKE: u128
}

type pistols_Scoreboard_Score {
  honour: u8
  level_villain: u8
  level_trickster: u8
  level_lord: u8
  total_duels: u16
  total_wins: u16
  total_losses: u16
  total_draws: u16
  honour_history: u64
}

type pistols_Snapshot {
  duel_id: u128
  score_a: pistols_Snapshot_Score
  score_b: pistols_Snapshot_Score
  entity: World__Entity
}

type pistols_SnapshotConnection {
  edges: [pistols_SnapshotEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_SnapshotEdge {
  node: pistols_Snapshot
  cursor: Cursor
}

input pistols_SnapshotOrder {
  direction: OrderDirection!
  field: pistols_SnapshotOrderField!
}

enum pistols_SnapshotOrderField {
  DUEL_ID
  SCORE_A
  SCORE_B
}

input pistols_SnapshotWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
}

type pistols_Snapshot_Score {
  honour: u8
  level_villain: u8
  level_trickster: u8
  level_lord: u8
  total_duels: u16
  total_wins: u16
  total_losses: u16
  total_draws: u16
  honour_history: u64
}

type pistols_TableAdmittance {
  table_id: felt252
  accounts: [ContractAddress]
  duelists: [u128]
  entity: World__Entity
}

type pistols_TableAdmittanceConnection {
  edges: [pistols_TableAdmittanceEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TableAdmittanceEdge {
  node: pistols_TableAdmittance
  cursor: Cursor
}

input pistols_TableAdmittanceOrder {
  direction: OrderDirection!
  field: pistols_TableAdmittanceOrderField!
}

enum pistols_TableAdmittanceOrderField {
  TABLE_ID
  ACCOUNTS
  DUELISTS
}

input pistols_TableAdmittanceWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
}

type pistols_TableConfig {
  table_id: felt252
  table_type: Enum
  description: felt252
  fee_collector_address: ContractAddress
  wager_contract_address: ContractAddress
  wager_min: u128
  fee_min: u128
  fee_pct: u8
  is_open: bool
  entity: World__Entity
}

type pistols_TableConfigConnection {
  edges: [pistols_TableConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TableConfigEdge {
  node: pistols_TableConfig
  cursor: Cursor
}

input pistols_TableConfigOrder {
  direction: OrderDirection!
  field: pistols_TableConfigOrderField!
}

enum pistols_TableConfigOrderField {
  TABLE_ID
  TABLE_TYPE
  DESCRIPTION
  FEE_COLLECTOR_ADDRESS
  WAGER_CONTRACT_ADDRESS
  WAGER_MIN
  FEE_MIN
  FEE_PCT
  IS_OPEN
}

input pistols_TableConfigWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  table_type: Enum
  description: felt252
  descriptionGT: felt252
  descriptionGTE: felt252
  descriptionLT: felt252
  descriptionLTE: felt252
  descriptionNEQ: felt252
  descriptionEQ: felt252
  descriptionNOTIN: [felt252]
  descriptionIN: [felt252]
  descriptionNOTLIKE: felt252
  descriptionLIKE: felt252
  fee_collector_address: ContractAddress
  fee_collector_addressGT: ContractAddress
  fee_collector_addressGTE: ContractAddress
  fee_collector_addressLT: ContractAddress
  fee_collector_addressLTE: ContractAddress
  fee_collector_addressNEQ: ContractAddress
  fee_collector_addressEQ: ContractAddress
  fee_collector_addressNOTIN: [ContractAddress]
  fee_collector_addressIN: [ContractAddress]
  fee_collector_addressNOTLIKE: ContractAddress
  fee_collector_addressLIKE: ContractAddress
  wager_contract_address: ContractAddress
  wager_contract_addressGT: ContractAddress
  wager_contract_addressGTE: ContractAddress
  wager_contract_addressLT: ContractAddress
  wager_contract_addressLTE: ContractAddress
  wager_contract_addressNEQ: ContractAddress
  wager_contract_addressEQ: ContractAddress
  wager_contract_addressNOTIN: [ContractAddress]
  wager_contract_addressIN: [ContractAddress]
  wager_contract_addressNOTLIKE: ContractAddress
  wager_contract_addressLIKE: ContractAddress
  wager_min: u128
  wager_minGT: u128
  wager_minGTE: u128
  wager_minLT: u128
  wager_minLTE: u128
  wager_minNEQ: u128
  wager_minEQ: u128
  wager_minNOTIN: [u128]
  wager_minIN: [u128]
  wager_minNOTLIKE: u128
  wager_minLIKE: u128
  fee_min: u128
  fee_minGT: u128
  fee_minGTE: u128
  fee_minLT: u128
  fee_minLTE: u128
  fee_minNEQ: u128
  fee_minEQ: u128
  fee_minNOTIN: [u128]
  fee_minIN: [u128]
  fee_minNOTLIKE: u128
  fee_minLIKE: u128
  fee_pct: u8
  fee_pctGT: u8
  fee_pctGTE: u8
  fee_pctLT: u8
  fee_pctLTE: u8
  fee_pctNEQ: u8
  fee_pctEQ: u8
  fee_pctNOTIN: [u8]
  fee_pctIN: [u8]
  fee_pctNOTLIKE: u8
  fee_pctLIKE: u8
  is_open: bool
}

type pistols_TokenConfig {
  token_address: ContractAddress
  max_supply: u16
  max_per_wallet: u16
  minted_count: u16
  is_open: bool
  entity: World__Entity
}

type pistols_TokenConfigConnection {
  edges: [pistols_TokenConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TokenConfigEdge {
  node: pistols_TokenConfig
  cursor: Cursor
}

input pistols_TokenConfigOrder {
  direction: OrderDirection!
  field: pistols_TokenConfigOrderField!
}

enum pistols_TokenConfigOrderField {
  TOKEN_ADDRESS
  MAX_SUPPLY
  MAX_PER_WALLET
  MINTED_COUNT
  IS_OPEN
}

input pistols_TokenConfigWhereInput {
  token_address: ContractAddress
  token_addressGT: ContractAddress
  token_addressGTE: ContractAddress
  token_addressLT: ContractAddress
  token_addressLTE: ContractAddress
  token_addressNEQ: ContractAddress
  token_addressEQ: ContractAddress
  token_addressNOTIN: [ContractAddress]
  token_addressIN: [ContractAddress]
  token_addressNOTLIKE: ContractAddress
  token_addressLIKE: ContractAddress
  max_supply: u16
  max_supplyGT: u16
  max_supplyGTE: u16
  max_supplyLT: u16
  max_supplyLTE: u16
  max_supplyNEQ: u16
  max_supplyEQ: u16
  max_supplyNOTIN: [u16]
  max_supplyIN: [u16]
  max_supplyNOTLIKE: u16
  max_supplyLIKE: u16
  max_per_wallet: u16
  max_per_walletGT: u16
  max_per_walletGTE: u16
  max_per_walletLT: u16
  max_per_walletLTE: u16
  max_per_walletNEQ: u16
  max_per_walletEQ: u16
  max_per_walletNOTIN: [u16]
  max_per_walletIN: [u16]
  max_per_walletNOTLIKE: u16
  max_per_walletLIKE: u16
  minted_count: u16
  minted_countGT: u16
  minted_countGTE: u16
  minted_countLT: u16
  minted_countLTE: u16
  minted_countNEQ: u16
  minted_countEQ: u16
  minted_countNOTIN: [u16]
  minted_countIN: [u16]
  minted_countNOTLIKE: u16
  minted_countLIKE: u16
  is_open: bool
}

type pistols_Wager {
  duel_id: u128
  value: u128
  fee: u128
  entity: World__Entity
}

type pistols_WagerConnection {
  edges: [pistols_WagerEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_WagerEdge {
  node: pistols_Wager
  cursor: Cursor
}

input pistols_WagerOrder {
  direction: OrderDirection!
  field: pistols_WagerOrderField!
}

enum pistols_WagerOrderField {
  DUEL_ID
  VALUE
  FEE
}

input pistols_WagerWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  value: u128
  valueGT: u128
  valueGTE: u128
  valueLT: u128
  valueLTE: u128
  valueNEQ: u128
  valueEQ: u128
  valueNOTIN: [u128]
  valueIN: [u128]
  valueNOTLIKE: u128
  valueLIKE: u128
  fee: u128
  feeGT: u128
  feeGTE: u128
  feeLT: u128
  feeLTE: u128
  feeNEQ: u128
  feeEQ: u128
  feeNOTIN: [u128]
  feeIN: [u128]
  feeNOTLIKE: u128
  feeLIKE: u128
}

scalar u128

scalar u16

scalar u256

scalar u64

scalar u8
