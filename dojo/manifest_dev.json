{
  "world": {
    "class_hash": "0x75fc75bcd1a7f8b4bf64b74978b0f89c8cee44bb755c1dae6f82284756451ec",
    "address": "0x4d250e93c20818b21642997b81ad8ba857b2dbe093dd5d4e086caee4f033832",
    "seed": "pistols",
    "name": "Pistols at Dawn",
    "entrypoints": [
      "uuid",
      "set_metadata",
      "register_namespace",
      "register_event",
      "register_model",
      "register_contract",
      "register_library",
      "init_contract",
      "upgrade_event",
      "upgrade_model",
      "upgrade_contract",
      "emit_event",
      "emit_events",
      "set_entity",
      "set_entities",
      "delete_entity",
      "delete_entities",
      "grant_owner",
      "revoke_owner",
      "grant_writer",
      "revoke_writer",
      "upgrade"
    ],
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          },
          {
            "name": "Library",
            "type": "(core::starknet::class_hash::ClassHash, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "metadata_hash",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::array::Span::<core::felt252>>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::array::Span::<core::felt252>>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::model::definition::ModelIndex>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::model::definition::ModelIndex>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_library",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              },
              {
                "name": "name",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "version",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_events",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::LibraryRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "LibraryRegistered",
            "type": "dojo::world::world_contract::world::LibraryRegistered",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0x3624eb87174ad0c9e4a50b0ad1a25efd276cf59c714b18cfe25789a2884d145",
      "class_hash": "0x10df0aa6185fe21462007e116e86c82e5f253da5f930676005dbea807f4607d",
      "abi": [
        {
          "type": "impl",
          "name": "admin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "admin__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "treasury_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "lords_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "vrf_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "AdminImpl",
          "interface_name": "pistols::systems::admin::IAdmin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::rules::RulesType",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Academy",
              "type": "()"
            },
            {
              "name": "Season",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::table::TableConfig",
          "members": [
            {
              "name": "table_id",
              "type": "core::felt252"
            },
            {
              "name": "description",
              "type": "core::felt252"
            },
            {
              "name": "rules",
              "type": "pistols::types::rules::RulesType"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::admin::IAdmin",
          "items": [
            {
              "type": "function",
              "name": "am_i_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "granted",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_treasury",
              "inputs": [
                {
                  "name": "treasury_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_paused",
              "inputs": [
                {
                  "name": "paused",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_table",
              "inputs": [
                {
                  "name": "table",
                  "type": "pistols::models::table::TableConfig"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "urgent_update",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::admin::admin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "0x0",
        "0x0"
      ],
      "tag": "pistols-admin",
      "selector": "0x36fd20372b5d47c092e2fede52897075978efb732aeaeb155d19eb8147f6497",
      "systems": [
        "dojo_init",
        "grant_admin",
        "set_treasury",
        "set_paused",
        "set_table",
        "urgent_update",
        "upgrade"
      ]
    },
    {
      "address": "0x241627b30a1a61c89e96519e45f46f37778fb65a07b0505daabefa7acb45627",
      "class_hash": "0x4f32decc0a3ba1421eb184e5cb31b834b936011bf3a2e4c7716c526f0b3581d",
      "abi": [
        {
          "type": "impl",
          "name": "bank__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "bank__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "BankPublicImpl",
          "interface_name": "pistols::systems::bank::IBankPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::bank::IBankPublic",
          "items": [
            {
              "type": "function",
              "name": "sponsor_duelists",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "lords_amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "sponsor_season",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "lords_amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "sponsor_tournament",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "lords_amount",
                  "type": "core::integer::u128"
                },
                {
                  "name": "tournament_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "BankProtectedImpl",
          "interface_name": "pistols::systems::bank::IBankProtected"
        },
        {
          "type": "enum",
          "name": "pistols::models::pool::ReleaseReason",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "FameLostToCreator",
              "type": "()"
            },
            {
              "name": "FameLostToDeveloper",
              "type": "()"
            },
            {
              "name": "SacrificedToDeveloper",
              "type": "()"
            },
            {
              "name": "LeaderboardPrize",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::pool::LordsReleaseBill",
          "members": [
            {
              "name": "reason",
              "type": "pistols::models::pool::ReleaseReason"
            },
            {
              "name": "duelist_id",
              "type": "core::integer::u128"
            },
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "pegged_fame",
              "type": "core::integer::u128"
            },
            {
              "name": "pegged_lords",
              "type": "core::integer::u128"
            },
            {
              "name": "sponsored_lords",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::models::pool::LordsReleaseBill>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::models::pool::LordsReleaseBill>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::models::pool::PoolType",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Purchases",
              "type": "()"
            },
            {
              "name": "FamePeg",
              "type": "()"
            },
            {
              "name": "Season",
              "type": "core::felt252"
            },
            {
              "name": "Tournament",
              "type": "core::felt252"
            },
            {
              "name": "SacredFlame",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::bank::IBankProtected",
          "items": [
            {
              "type": "function",
              "name": "charge_purchase",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "lords_amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "peg_minted_fame_to_purchased_lords",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "lords_amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "release_lords_from_fame_to_be_burned",
              "inputs": [
                {
                  "name": "season_table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "bills",
                  "type": "core::array::Span::<pistols::models::pool::LordsReleaseBill>"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "duelist_lost_fame_to_pool",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "fame_amount",
                  "type": "core::integer::u128"
                },
                {
                  "name": "pool_id",
                  "type": "pistols::models::pool::PoolType"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "release_season_pool",
              "inputs": [
                {
                  "name": "season_table_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::bank::bank::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-bank",
      "selector": "0x7a683ab68bc70300995da8de5781002e781f22ba246fe239ebeff02b2230375",
      "systems": [
        "sponsor_duelists",
        "sponsor_season",
        "sponsor_tournament",
        "charge_purchase",
        "peg_minted_fame_to_purchased_lords",
        "release_lords_from_fame_to_be_burned",
        "duelist_lost_fame_to_pool",
        "release_season_pool",
        "upgrade"
      ]
    },
    {
      "address": "0x684c7bc6f6631262ed9d185954c7f15b3a5b29146d7e8cc150d8ddf8d04e82e",
      "class_hash": "0x11720ceeef2286b8f7c941bd2a85ab6928dd04214105e63586facef2a4b7299",
      "abi": [
        {
          "type": "impl",
          "name": "duel_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "duel_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            },
            {
              "name": "minter_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duel_token::IDuelTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::premise::Premise",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Matter",
              "type": "()"
            },
            {
              "name": "Debt",
              "type": "()"
            },
            {
              "name": "Dispute",
              "type": "()"
            },
            {
              "name": "Honour",
              "type": "()"
            },
            {
              "name": "Hatred",
              "type": "()"
            },
            {
              "name": "Blood",
              "type": "()"
            },
            {
              "name": "Nothing",
              "type": "()"
            },
            {
              "name": "Tournament",
              "type": "()"
            },
            {
              "name": "Treaty",
              "type": "()"
            },
            {
              "name": "Lesson",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::challenge_state::ChallengeState",
          "variants": [
            {
              "name": "Null",
              "type": "()"
            },
            {
              "name": "Awaiting",
              "type": "()"
            },
            {
              "name": "Withdrawn",
              "type": "()"
            },
            {
              "name": "Refused",
              "type": "()"
            },
            {
              "name": "Expired",
              "type": "()"
            },
            {
              "name": "InProgress",
              "type": "()"
            },
            {
              "name": "Resolved",
              "type": "()"
            },
            {
              "name": "Draw",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duel_token::IDuelTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "get_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "address_a",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "address_b",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "has_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "address_a",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "address_b",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_join",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "create_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "challenged_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "premise",
                  "type": "pistols::types::premise::Premise"
                },
                {
                  "name": "quote",
                  "type": "core::felt252"
                },
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "expire_hours",
                  "type": "core::integer::u64"
                },
                {
                  "name": "lives_staked",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reply_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "accepted",
                  "type": "core::bool"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::challenge_state::ChallengeState"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "DuelTokenProtectedImpl",
          "interface_name": "pistols::systems::tokens::duel_token::IDuelTokenProtected"
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duel_token::IDuelTokenProtected",
          "items": [
            {
              "type": "function",
              "name": "transfer_to_winner",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721ComboMixinImpl",
          "interface_name": "nft_combo::erc721::interface::IERC721ComboABI"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "nft_combo::erc721::interface::IERC721ComboABI",
          "items": [
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "max_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "last_token_id",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_minting_paused",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "maxSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contract_uri",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contractURI",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royalty_info",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "default_royalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_royalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royaltyInfo",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "defaultRoyalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenRoyalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "update_contract_metadata",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_token_metadata",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_tokens_metadata",
              "inputs": [
                {
                  "name": "from_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "to_token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
          "kind": "struct",
          "members": []
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "from_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            },
            {
              "name": "to_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "ContractURIUpdated",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
              "kind": "nested"
            },
            {
              "name": "MetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
              "kind": "nested"
            },
            {
              "name": "BatchMetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duel_token::duel_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721ComboEvent",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:https://assets.underware.gg",
        "0x0",
        "0"
      ],
      "tag": "pistols-duel_token",
      "selector": "0x670a5c673ac776e00e61c279cf7dc0efbe282787f4d719498e55643c5116063",
      "systems": [
        "dojo_init",
        "create_duel",
        "reply_duel",
        "transfer_to_winner",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll",
        "update_contract_metadata",
        "update_token_metadata",
        "update_tokens_metadata"
      ]
    },
    {
      "address": "0x4d4ab649f9727321fb8cc2d44e02abac1bac1477118c56c0e316a047dc0e33f",
      "class_hash": "0x5ccbcb2297f3e09979b4cdc36208e44252012d48aeffa1d330c8a2c23b74394",
      "abi": [
        {
          "type": "impl",
          "name": "duelist_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "duelist_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelistTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "fame_balance",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_alive",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "life_count",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_inactive",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "inactive_timestamp",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "inactive_fame_dripped",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "poke",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "sacrifice",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "memorialize",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "DuelistTokenProtectedImpl",
          "interface_name": "pistols::systems::tokens::duelist_token::IDuelistTokenProtected"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u128>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u128>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::premise::Premise",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Matter",
              "type": "()"
            },
            {
              "name": "Debt",
              "type": "()"
            },
            {
              "name": "Dispute",
              "type": "()"
            },
            {
              "name": "Honour",
              "type": "()"
            },
            {
              "name": "Hatred",
              "type": "()"
            },
            {
              "name": "Blood",
              "type": "()"
            },
            {
              "name": "Nothing",
              "type": "()"
            },
            {
              "name": "Tournament",
              "type": "()"
            },
            {
              "name": "Treaty",
              "type": "()"
            },
            {
              "name": "Lesson",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::challenge_state::ChallengeState",
          "variants": [
            {
              "name": "Null",
              "type": "()"
            },
            {
              "name": "Awaiting",
              "type": "()"
            },
            {
              "name": "Withdrawn",
              "type": "()"
            },
            {
              "name": "Refused",
              "type": "()"
            },
            {
              "name": "Expired",
              "type": "()"
            },
            {
              "name": "InProgress",
              "type": "()"
            },
            {
              "name": "Resolved",
              "type": "()"
            },
            {
              "name": "Draw",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::timestamp::Period",
          "members": [
            {
              "name": "start",
              "type": "core::integer::u64"
            },
            {
              "name": "end",
              "type": "core::integer::u64"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::Challenge",
          "members": [
            {
              "name": "duel_id",
              "type": "core::integer::u128"
            },
            {
              "name": "table_id",
              "type": "core::felt252"
            },
            {
              "name": "premise",
              "type": "pistols::types::premise::Premise"
            },
            {
              "name": "quote",
              "type": "core::felt252"
            },
            {
              "name": "lives_staked",
              "type": "core::integer::u8"
            },
            {
              "name": "address_a",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "address_b",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "duelist_id_a",
              "type": "core::integer::u128"
            },
            {
              "name": "duelist_id_b",
              "type": "core::integer::u128"
            },
            {
              "name": "state",
              "type": "pistols::types::challenge_state::ChallengeState"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "timestamps",
              "type": "pistols::types::timestamp::Period"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::rules::RewardValues",
          "members": [
            {
              "name": "fame_lost",
              "type": "core::integer::u128"
            },
            {
              "name": "fame_gained",
              "type": "core::integer::u128"
            },
            {
              "name": "fools_gained",
              "type": "core::integer::u128"
            },
            {
              "name": "points_scored",
              "type": "core::integer::u16"
            },
            {
              "name": "position",
              "type": "core::integer::u8"
            },
            {
              "name": "fame_burned",
              "type": "core::integer::u128"
            },
            {
              "name": "lords_unlocked",
              "type": "core::integer::u128"
            },
            {
              "name": "survived",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duelist_token::IDuelistTokenProtected",
          "items": [
            {
              "type": "function",
              "name": "mint_duelists",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "quantity",
                  "type": "core::integer::u32"
                },
                {
                  "name": "seed",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_rewards",
              "inputs": [
                {
                  "name": "challenge",
                  "type": "pistols::models::challenge::Challenge"
                },
                {
                  "name": "tournament_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "(pistols::types::rules::RewardValues, pistols::types::rules::RewardValues)"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721ComboMixinImpl",
          "interface_name": "nft_combo::erc721::interface::IERC721ComboABI"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "nft_combo::erc721::interface::IERC721ComboABI",
          "items": [
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "max_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "last_token_id",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_minting_paused",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "maxSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contract_uri",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contractURI",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royalty_info",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "default_royalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_royalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royaltyInfo",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "defaultRoyalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenRoyalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "update_contract_metadata",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_token_metadata",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_tokens_metadata",
              "inputs": [
                {
                  "name": "from_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "to_token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
          "kind": "struct",
          "members": []
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "from_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            },
            {
              "name": "to_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "ContractURIUpdated",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
              "kind": "nested"
            },
            {
              "name": "MetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
              "kind": "nested"
            },
            {
              "name": "BatchMetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duelist_token::duelist_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721ComboEvent",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:https://assets.underware.gg"
      ],
      "tag": "pistols-duelist_token",
      "selector": "0x45c96d20393520c5dffeb2f2929fb599034d4fc6e9d423e6a641222fb60a25e",
      "systems": [
        "dojo_init",
        "poke",
        "sacrifice",
        "memorialize",
        "mint_duelists",
        "transfer_rewards",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll",
        "update_contract_metadata",
        "update_token_metadata",
        "update_tokens_metadata"
      ]
    },
    {
      "address": "0x4a54e7a43e43a0fd05e67fc663f008ee3dbd2d61458a42fbc7e924466384b4c",
      "class_hash": "0x676dc0653eddfeb82359b6a7fc1dd9cd44d66034b461a9d09a481fd984030a9",
      "abi": [
        {
          "type": "impl",
          "name": "fame_coin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "fame_coin__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "FamePublicImpl",
          "interface_name": "pistols::systems::tokens::fame_coin::IFameCoinProtected"
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::fame_coin::IFameCoinProtected",
          "items": [
            {
              "type": "function",
              "name": "minted_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reward_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "burn",
              "inputs": [
                {
                  "name": "amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenBoundPublicImpl",
          "interface_name": "pistols::systems::components::token_bound::ITokenBoundPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_bound::ITokenBoundPublic",
          "items": [
            {
              "type": "function",
              "name": "address_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_of_address",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer_from_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "sender_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from_token_to_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "sender_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "recipient_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "burn_from_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::fame_coin::fame_coin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenBoundEvent",
              "type": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-fame_coin",
      "selector": "0x371b95cb7056eb2d21819662e973ed32c345c989aa9f6097e7811a5665a0b0a",
      "systems": [
        "dojo_init",
        "minted_duelist",
        "reward_duelist",
        "burn",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom",
        "transfer_from_token",
        "transfer_from_token_to_token",
        "burn_from_token"
      ]
    },
    {
      "address": "0x2c334dbd5b0f3332f1253b420ef4acd5fa7788c70a1d5199467c19a1ec655cf",
      "class_hash": "0x12b7b6527ff7e88971661e69f4837bd1713114c493d45d3834a29c35369b43e",
      "abi": [
        {
          "type": "impl",
          "name": "fools_coin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "fools_coin__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "FoolsPublicImpl",
          "interface_name": "pistols::systems::tokens::fools_coin::IFoolsCoinProtected"
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::fools_coin::IFoolsCoinProtected",
          "items": [
            {
              "type": "function",
              "name": "reward_player",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::fools_coin::fools_coin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-fools_coin",
      "selector": "0x58070034702ab2b03c2911459d7299e63048e70e3d41f77e1d806b4cb8f2dcd",
      "systems": [
        "dojo_init",
        "reward_player",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom"
      ]
    },
    {
      "address": "0x6c707bc1edb2c1e541740096aea4e7127dba43a5913af8c6de1c7f19c23554d",
      "class_hash": "0x3f493179f447718bd663a74fb3644a52d11eeb60321885c573a4730edea3c59",
      "abi": [
        {
          "type": "impl",
          "name": "game__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "game__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "GameImpl",
          "interface_name": "pistols::systems::game::IGame"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::array::Span::<core::integer::u8>>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::array::Span::<core::integer::u8>>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::paces::PacesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Paces1",
              "type": "()"
            },
            {
              "name": "Paces2",
              "type": "()"
            },
            {
              "name": "Paces3",
              "type": "()"
            },
            {
              "name": "Paces4",
              "type": "()"
            },
            {
              "name": "Paces5",
              "type": "()"
            },
            {
              "name": "Paces6",
              "type": "()"
            },
            {
              "name": "Paces7",
              "type": "()"
            },
            {
              "name": "Paces8",
              "type": "()"
            },
            {
              "name": "Paces9",
              "type": "()"
            },
            {
              "name": "Paces10",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::env::EnvCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "DamageUp",
              "type": "()"
            },
            {
              "name": "DamageDown",
              "type": "()"
            },
            {
              "name": "ChancesUp",
              "type": "()"
            },
            {
              "name": "ChancesDown",
              "type": "()"
            },
            {
              "name": "DoubleDamageUp",
              "type": "()"
            },
            {
              "name": "DoubleChancesUp",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsHit",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsMiss",
              "type": "()"
            },
            {
              "name": "SpecialDoubleTactics",
              "type": "()"
            },
            {
              "name": "SpecialNoTactics",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::tactics::TacticsCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Insult",
              "type": "()"
            },
            {
              "name": "CoinToss",
              "type": "()"
            },
            {
              "name": "Vengeful",
              "type": "()"
            },
            {
              "name": "ThickCoat",
              "type": "()"
            },
            {
              "name": "Reversal",
              "type": "()"
            },
            {
              "name": "Bananas",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::SpecialsDrawn",
          "members": [
            {
              "name": "tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "coin_toss",
              "type": "core::bool"
            },
            {
              "name": "reversal",
              "type": "core::bool"
            },
            {
              "name": "shots_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "tactics_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::blades::BladesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Seppuku",
              "type": "()"
            },
            {
              "name": "PocketPistol",
              "type": "()"
            },
            {
              "name": "Behead",
              "type": "()"
            },
            {
              "name": "Grapple",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::duel_progress::DuelistDrawnCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::DuelistState",
          "members": [
            {
              "name": "chances",
              "type": "core::integer::u8"
            },
            {
              "name": "damage",
              "type": "core::integer::u8"
            },
            {
              "name": "health",
              "type": "core::integer::u8"
            },
            {
              "name": "dice_fire",
              "type": "core::integer::u8"
            },
            {
              "name": "honour",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelStep",
          "members": [
            {
              "name": "pace",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_env",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "dice_env",
              "type": "core::integer::u8"
            },
            {
              "name": "specials_a",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "specials_b",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "card_a",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "card_b",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "state_a",
              "type": "pistols::models::challenge::DuelistState"
            },
            {
              "name": "state_b",
              "type": "pistols::models::challenge::DuelistState"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::types::duel_progress::DuelStep>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::types::duel_progress::DuelStep>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::cards::hand::DuelistHand",
          "members": [
            {
              "name": "card_fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "card_blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelProgress",
          "members": [
            {
              "name": "steps",
              "type": "core::array::Span::<pistols::types::duel_progress::DuelStep>"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "hand_a",
              "type": "pistols::types::cards::hand::DuelistHand"
            },
            {
              "name": "hand_b",
              "type": "pistols::types::cards::hand::DuelistHand"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::leaderboard::LeaderboardPosition",
          "members": [
            {
              "name": "position",
              "type": "core::integer::u8"
            },
            {
              "name": "duelist_id",
              "type": "core::integer::u128"
            },
            {
              "name": "points",
              "type": "core::integer::u16"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::models::leaderboard::LeaderboardPosition>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::models::leaderboard::LeaderboardPosition>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::rules::RewardValues",
          "members": [
            {
              "name": "fame_lost",
              "type": "core::integer::u128"
            },
            {
              "name": "fame_gained",
              "type": "core::integer::u128"
            },
            {
              "name": "fools_gained",
              "type": "core::integer::u128"
            },
            {
              "name": "points_scored",
              "type": "core::integer::u16"
            },
            {
              "name": "position",
              "type": "core::integer::u8"
            },
            {
              "name": "fame_burned",
              "type": "core::integer::u128"
            },
            {
              "name": "lords_unlocked",
              "type": "core::integer::u128"
            },
            {
              "name": "survived",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::game::IGame",
          "items": [
            {
              "type": "function",
              "name": "commit_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "hashed",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "moves",
                  "type": "core::array::Span::<core::integer::u8>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "clear_call_to_action",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "collect_duel",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "collect_season",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_duel_deck",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::array::Span::<core::integer::u8>>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duel_progress",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::duel_progress::DuelProgress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duelist_leaderboard_position",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::models::leaderboard::LeaderboardPosition"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_leaderboard",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<pistols::models::leaderboard::LeaderboardPosition>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_collect_duel",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_collect_season",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "calc_season_reward",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "lives_staked",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::rules::RewardValues"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_timestamp",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "test_validate_commit_message",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "signature",
                  "type": "core::array::Array::<core::felt252>"
                },
                {
                  "name": "duelId",
                  "type": "core::felt252"
                },
                {
                  "name": "duelistId",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "GameProtectedImpl",
          "interface_name": "pistols::systems::game::IGameProtected"
        },
        {
          "type": "interface",
          "name": "pistols::systems::game::IGameProtected",
          "items": [
            {
              "type": "function",
              "name": "create_trophies",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "achievement::components::achievable::AchievableComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::game::game::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "AchievableEvent",
              "type": "achievement::components::achievable::AchievableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-game",
      "selector": "0x32c102830cbffaddecbdce7ef85735e6f08da08ee762a2d7b09304b6533dd57",
      "systems": [
        "dojo_init",
        "commit_moves",
        "reveal_moves",
        "clear_call_to_action",
        "collect_duel",
        "collect_season",
        "create_trophies",
        "upgrade"
      ]
    },
    {
      "address": "0x12400b0bb6147510ed276b255953d6d4d34cfa788036b470e8e4fdef2769eed",
      "class_hash": "0x44df6b9c2fae5893aa0fa3315c6e734af7d25524e0e344c5283c779e535e3f7",
      "abi": [
        {
          "type": "impl",
          "name": "lords_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "lords_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "minter_contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "faucet_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "LordsMockPublicImpl",
          "interface_name": "pistols::systems::tokens::lords_mock::ILordsMockPublic"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::lords_mock::ILordsMockPublic",
          "items": [
            {
              "type": "function",
              "name": "faucet",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::lords_mock::lords_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "10000000000000000000000"
      ],
      "tag": "pistols-lords_mock",
      "selector": "0x2b1156e63a09854c3d8dba0cad93b41e1fc4662466a0ffc2a9ec9e54b4bc788",
      "systems": [
        "dojo_init",
        "faucet",
        "mint",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom"
      ]
    },
    {
      "address": "0x1c4cfc81e03a00368f0acb1776a281b2c5e02b5d346541915c39bcc33543b77",
      "class_hash": "0x1da3e72c3f507f23e7cfc2d92bb3f2a1f203b1868a9b9345709363bfd841a12",
      "abi": [
        {
          "type": "impl",
          "name": "pack_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "pack_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "PackTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::pack_token::IPackTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::models::pack::PackType",
          "variants": [
            {
              "name": "Unknown",
              "type": "()"
            },
            {
              "name": "StarterPack",
              "type": "()"
            },
            {
              "name": "Duelists5x",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u128>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u128>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::pack::Pack",
          "members": [
            {
              "name": "pack_id",
              "type": "core::integer::u128"
            },
            {
              "name": "pack_type",
              "type": "pistols::models::pack::PackType"
            },
            {
              "name": "seed",
              "type": "core::felt252"
            },
            {
              "name": "lords_amount",
              "type": "core::integer::u128"
            },
            {
              "name": "is_open",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::pack_token::IPackTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "can_claim_starter_pack",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_purchase",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "calc_mint_fee",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "claim_starter_pack",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "purchase",
              "inputs": [
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::models::pack::Pack"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "open",
              "inputs": [
                {
                  "name": "pack_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721ComboMixinImpl",
          "interface_name": "nft_combo::erc721::interface::IERC721ComboABI"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "nft_combo::erc721::interface::IERC721ComboABI",
          "items": [
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "max_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "last_token_id",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_minting_paused",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "maxSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contract_uri",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "contractURI",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royalty_info",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "default_royalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_royalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "royaltyInfo",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "sale_price",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "defaultRoyalty",
              "inputs": [],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenRoyalty",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "update_contract_metadata",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_token_metadata",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_tokens_metadata",
              "inputs": [
                {
                  "name": "from_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "to_token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
          "kind": "struct",
          "members": []
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
          "kind": "struct",
          "members": [
            {
              "name": "from_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            },
            {
              "name": "to_token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "ContractURIUpdated",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::ContractURIUpdated",
              "kind": "nested"
            },
            {
              "name": "MetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::MetadataUpdate",
              "kind": "nested"
            },
            {
              "name": "BatchMetadataUpdate",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::BatchMetadataUpdate",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::pack_token::pack_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721ComboEvent",
              "type": "nft_combo::erc721::erc721_combo::ERC721ComboComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:https://assets.underware.gg"
      ],
      "tag": "pistols-pack_token",
      "selector": "0x3d74e76192285c5a19a63c54a6c2ba5b015a1a25818c2d8f9cf75d7fef2b5c1",
      "systems": [
        "dojo_init",
        "claim_starter_pack",
        "purchase",
        "open",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll",
        "update_contract_metadata",
        "update_token_metadata",
        "update_tokens_metadata"
      ]
    },
    {
      "address": "0x1526cf32aa5c4f3b5c9e32ea3b2329440294d01ab38ca6ad555557bedfc8b6c",
      "class_hash": "0x69835cf6cb4af71d19e5f33707203e336c02d37f049ef84f423a355462fa855",
      "abi": [
        {
          "type": "impl",
          "name": "rng__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "rng__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "RngImpl",
          "interface_name": "pistols::systems::rng::IRng"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::systems::rng_mock::MockedValue",
          "members": [
            {
              "name": "salt",
              "type": "core::felt252"
            },
            {
              "name": "value",
              "type": "core::felt252"
            },
            {
              "name": "exists",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::systems::rng_mock::MockedValue>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::systems::rng_mock::MockedValue>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng::IRng",
          "items": [
            {
              "type": "function",
              "name": "reseed",
              "inputs": [
                {
                  "name": "seed",
                  "type": "core::felt252"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "mocked",
                  "type": "core::array::Span::<pistols::systems::rng_mock::MockedValue>"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_mocked",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::rng::rng::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-rng",
      "selector": "0x13f1a6a9ae118440a997d6624230b59f43516220a1208526c3f66e202910504",
      "systems": [
        "upgrade"
      ]
    },
    {
      "address": "0x1c63ca0d2c1f8c6b4abd334c60934bb9f797ca9ee09adaf8138f4e17ae8bda8",
      "class_hash": "0x6fc22bb3f6b93d49c5a4c5bf5f16fe613e5129df1da3524a7ad40ce9282455a",
      "abi": [
        {
          "type": "impl",
          "name": "rng_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "rng_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "RngImpl",
          "interface_name": "pistols::systems::rng::IRng"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::systems::rng_mock::MockedValue",
          "members": [
            {
              "name": "salt",
              "type": "core::felt252"
            },
            {
              "name": "value",
              "type": "core::felt252"
            },
            {
              "name": "exists",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::systems::rng_mock::MockedValue>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::systems::rng_mock::MockedValue>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng::IRng",
          "items": [
            {
              "type": "function",
              "name": "reseed",
              "inputs": [
                {
                  "name": "seed",
                  "type": "core::felt252"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "mocked",
                  "type": "core::array::Span::<pistols::systems::rng_mock::MockedValue>"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_mocked",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "MockerImpl",
          "interface_name": "pistols::systems::rng_mock::IMocker"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng_mock::IMocker",
          "items": [
            {
              "type": "function",
              "name": "set_mocked_values",
              "inputs": [
                {
                  "name": "salts",
                  "type": "core::array::Span::<core::felt252>"
                },
                {
                  "name": "values",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::rng_mock::rng_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-rng_mock",
      "selector": "0xfbd28ccd9cffb9b1783a0bf7cdf42a9b88c49d4568116cd1f7ee70ba415705",
      "systems": [
        "set_mocked_values",
        "upgrade"
      ]
    },
    {
      "address": "0x61f30ea7a260826bfbe0f1b2d2d50f77e664d2721bffbde864ed28d14dbfa21",
      "class_hash": "0x3a4d5b2aac5eb0914b8aa6520541562d5d42857c81f6ee2d0a10a0587210e55",
      "abi": [
        {
          "type": "impl",
          "name": "tutorial__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "tutorial__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "ActionsImpl",
          "interface_name": "pistols::systems::tutorial::ITutorial"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::paces::PacesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Paces1",
              "type": "()"
            },
            {
              "name": "Paces2",
              "type": "()"
            },
            {
              "name": "Paces3",
              "type": "()"
            },
            {
              "name": "Paces4",
              "type": "()"
            },
            {
              "name": "Paces5",
              "type": "()"
            },
            {
              "name": "Paces6",
              "type": "()"
            },
            {
              "name": "Paces7",
              "type": "()"
            },
            {
              "name": "Paces8",
              "type": "()"
            },
            {
              "name": "Paces9",
              "type": "()"
            },
            {
              "name": "Paces10",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::env::EnvCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "DamageUp",
              "type": "()"
            },
            {
              "name": "DamageDown",
              "type": "()"
            },
            {
              "name": "ChancesUp",
              "type": "()"
            },
            {
              "name": "ChancesDown",
              "type": "()"
            },
            {
              "name": "DoubleDamageUp",
              "type": "()"
            },
            {
              "name": "DoubleChancesUp",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsHit",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsMiss",
              "type": "()"
            },
            {
              "name": "SpecialDoubleTactics",
              "type": "()"
            },
            {
              "name": "SpecialNoTactics",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::tactics::TacticsCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Insult",
              "type": "()"
            },
            {
              "name": "CoinToss",
              "type": "()"
            },
            {
              "name": "Vengeful",
              "type": "()"
            },
            {
              "name": "ThickCoat",
              "type": "()"
            },
            {
              "name": "Reversal",
              "type": "()"
            },
            {
              "name": "Bananas",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::SpecialsDrawn",
          "members": [
            {
              "name": "tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "coin_toss",
              "type": "core::bool"
            },
            {
              "name": "reversal",
              "type": "core::bool"
            },
            {
              "name": "shots_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "tactics_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::blades::BladesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Seppuku",
              "type": "()"
            },
            {
              "name": "PocketPistol",
              "type": "()"
            },
            {
              "name": "Behead",
              "type": "()"
            },
            {
              "name": "Grapple",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::duel_progress::DuelistDrawnCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::DuelistState",
          "members": [
            {
              "name": "chances",
              "type": "core::integer::u8"
            },
            {
              "name": "damage",
              "type": "core::integer::u8"
            },
            {
              "name": "health",
              "type": "core::integer::u8"
            },
            {
              "name": "dice_fire",
              "type": "core::integer::u8"
            },
            {
              "name": "honour",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelStep",
          "members": [
            {
              "name": "pace",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_env",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "dice_env",
              "type": "core::integer::u8"
            },
            {
              "name": "specials_a",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "specials_b",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "card_a",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "card_b",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "state_a",
              "type": "pistols::models::challenge::DuelistState"
            },
            {
              "name": "state_b",
              "type": "pistols::models::challenge::DuelistState"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::types::duel_progress::DuelStep>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::types::duel_progress::DuelStep>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::cards::hand::DuelistHand",
          "members": [
            {
              "name": "card_fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "card_blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelProgress",
          "members": [
            {
              "name": "steps",
              "type": "core::array::Span::<pistols::types::duel_progress::DuelStep>"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "hand_a",
              "type": "pistols::types::cards::hand::DuelistHand"
            },
            {
              "name": "hand_b",
              "type": "pistols::types::cards::hand::DuelistHand"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tutorial::ITutorial",
          "items": [
            {
              "type": "function",
              "name": "create_tutorial",
              "inputs": [
                {
                  "name": "player_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "tutorial_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "commit_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "hashed",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "moves",
                  "type": "core::array::Span::<core::integer::u8>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "calc_duel_id",
              "inputs": [
                {
                  "name": "player_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "tutorial_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duel_progress",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::duel_progress::DuelProgress"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tutorial::tutorial::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-tutorial",
      "selector": "0x32f1e04dc2117bb6f46da72734a3910bcaca0e887025d5b1126fd804c256d24",
      "systems": [
        "dojo_init",
        "create_tutorial",
        "commit_moves",
        "reveal_moves",
        "upgrade"
      ]
    },
    {
      "address": "0xf5eeeaeaa2f65a0e0c55b2fe5f78c1b2541ce4dcd5bec19216e227bdf34112",
      "class_hash": "0xdba9dc80cbe0242d52e5f358e572157e3198c62bec69eaf160eb77b2eb0d02",
      "abi": [
        {
          "type": "impl",
          "name": "vrf_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "vrf_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "VRFMockImpl",
          "interface_name": "pistols::interfaces::vrf::IVrfProvider"
        },
        {
          "type": "enum",
          "name": "pistols::interfaces::vrf::Source",
          "variants": [
            {
              "name": "Nonce",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "Salt",
              "type": "core::felt252"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::interfaces::vrf::IVrfProvider",
          "items": [
            {
              "type": "function",
              "name": "request_random",
              "inputs": [
                {
                  "name": "caller",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "source",
                  "type": "pistols::interfaces::vrf::Source"
                }
              ],
              "outputs": [],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "consume_random",
              "inputs": [
                {
                  "name": "source",
                  "type": "pistols::interfaces::vrf::Source"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::vrf_mock::vrf_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-vrf_mock",
      "selector": "0x7d13bd4624d7bc31b13c78648f762d0b293e1ca94e19173659859209082629e",
      "systems": [
        "consume_random",
        "upgrade"
      ]
    }
  ],
  "libraries": [],
  "models": [
    {
      "members": [],
      "class_hash": "0x37303e6e722459ef65bbeb81417123320077c1c5d04ee3f8a3c6561cb014844",
      "tag": "pistols-Challenge",
      "selector": "0x673267b69d74c703ea86d97b041278944b49f62b52867345a95d3047b11378a"
    },
    {
      "members": [],
      "class_hash": "0x5706ba4f26824e9b6ebce383468f8bb7655fa1cb9a7e61a3ca674992b73b6f2",
      "tag": "pistols-CoinConfig",
      "selector": "0x26fad4dff063a4f2c3b3889723194b9bdbbbf833e44ff2d573af01741b966ac"
    },
    {
      "members": [],
      "class_hash": "0x75de81acd0726041d468241d1cbe3cc86a08557ca3dfe132df07e1eb6ef5ee3",
      "tag": "pistols-Config",
      "selector": "0x60742fa7259b7ce3ebc0a2dde90b740d1234c770199a822fa2e7cf779dc0392"
    },
    {
      "members": [],
      "class_hash": "0x472071c69869a39817073690f81b1aa8ae14e9e298bd93a900f0933663e7720",
      "tag": "pistols-Duelist",
      "selector": "0x1ec34ce9ccaa39b540179d85e0dd0d46c1c1ae712f4cb40a9cd7f8c21ebaa46"
    },
    {
      "members": [],
      "class_hash": "0x12a0d5bf4437f6c0b587f256dd1055266e2c50e42a5666199487e4d9992ebbe",
      "tag": "pistols-DuelistChallenge",
      "selector": "0x4f1193fa385154f58ce9408156cc7812f4424d57dd8ed2b04ca1b980db2ffec"
    },
    {
      "members": [],
      "class_hash": "0x2565b2e9b459598dc44eb73c6e3b5e335e0578c53d010008f13c955737c380a",
      "tag": "pistols-DuelistMemorial",
      "selector": "0x399b9689c37bf440c4f0478f361f68bd59161d01a096160d3ceaeae53b67b71"
    },
    {
      "members": [],
      "class_hash": "0x2d503c10e01052347bb32682790f3eecefadc33c5934b72b47bf28bbcab6151",
      "tag": "pistols-Leaderboard",
      "selector": "0x39835217fd4998f6024a6ae92f98bd185d158168f92b4363a47f73e5e1073ae"
    },
    {
      "members": [],
      "class_hash": "0x55335a4475a9ebfa369d9a31e59102fc468b3e4e5a0099946ac469b1bd66892",
      "tag": "pistols-MockedValue",
      "selector": "0x8deb0b9e5cc0c6c2089ee6a4bfdd306444147a869b6179c4e22b283a5176dc"
    },
    {
      "members": [],
      "class_hash": "0x6741ee0de6e390c0365029f020ff36f2bc0b4fd26b51bc57be84e5ff4b5e3f7",
      "tag": "pistols-Pack",
      "selector": "0x64159b4947adcdc7a87b41f7889ba33495ac8e3a3a333305c7712806763fa2d"
    },
    {
      "members": [],
      "class_hash": "0x3035efdecc0a353d6601eeb5c2f8675cfa0f61bccc0089cf950115fb554096b",
      "tag": "pistols-Pact",
      "selector": "0x72a33a6586ae24471fdae1c6f3cc9da6629f3fd3dce300a48324617dd511617"
    },
    {
      "members": [],
      "class_hash": "0x6f8157cdbf2104be3d49c1762b0eabb58713cd14c6643d06d5d695da3494068",
      "tag": "pistols-Player",
      "selector": "0x4fc7ed2304172cd24d40e2b967bf3642228eec13547b09e0ffdfb85469f6f86"
    },
    {
      "members": [],
      "class_hash": "0x2f39d7f9c9e5ec1db7ab5733a93fa0077ebc32e03e6f2909ca0af4fe9730f5e",
      "tag": "pistols-PlayerBookmark",
      "selector": "0x46db6150404dd9d739a2cd0c5e5036698ab3cfde3a5626ee798e1f1add13a63"
    },
    {
      "members": [],
      "class_hash": "0x129319dd1baca0a5c402c226d1abb9bd2d3f5e21061b9342ae1671780b659a1",
      "tag": "pistols-PlayerOnline",
      "selector": "0x6f3391bc3684ea92009be25543fc6cc734c1f756253523354efdf10e2a57dff"
    },
    {
      "members": [],
      "class_hash": "0x1446cd229afa3d2c3b047aa31180bc2c666249aeaf4887d3fd64de31b8a7294",
      "tag": "pistols-Pool",
      "selector": "0xb4328e5f120dfe361a8f367e6ea51e2be55dbc6b1c9f2c17a87b7d06ab8972"
    },
    {
      "members": [],
      "class_hash": "0x4127f7c8362af90d379dce0c804110b92c365ae620f8028eba8fb1597d470c9",
      "tag": "pistols-Round",
      "selector": "0x617e0a3d97aa8cb3f83bbb5341ede98d3e3d825b6424bcab0676933fec52bc2"
    },
    {
      "members": [],
      "class_hash": "0x26c59da15cdab0e7107258577cc05f876dc094f673d7b634fe2ac3331d35117",
      "tag": "pistols-SeasonConfig",
      "selector": "0x407b92d935dd7193931243082059cb7180309a73de27eea948ffa0649f6ebf3"
    },
    {
      "members": [],
      "class_hash": "0x2af1dc9ad0d06c63a137882498dbe4d1f40e89b2646929325425d3abb08931f",
      "tag": "pistols-TableConfig",
      "selector": "0x1e8368fc88328662c92a11c0e739bf8b74bcd77a20071d2641a31e1a063c138"
    },
    {
      "members": [],
      "class_hash": "0x55366c6011848e35705607bf631bb1a71c79b1f0249117952a734e564bb6194",
      "tag": "pistols-TableScoreboard",
      "selector": "0x7cedfed46fd59e7ccbf8d54e1466e6be9cea499c99e917bdc8873b53a00e1f3"
    },
    {
      "members": [],
      "class_hash": "0x1cffc5a620fe04958256b135067dae1cc2f1238989852f2081154f7ede43974",
      "tag": "pistols-TokenBoundAddress",
      "selector": "0x51e7eddb7555dc0cb6f6bdb0de4d85ac38457ede50d70e4f714a27c00047c8f"
    },
    {
      "members": [],
      "class_hash": "0x3decd5c15132304f305bbad2f89f85727ac6d90962b650cce923c5788e7cc2f",
      "tag": "pistols-TokenConfig",
      "selector": "0x56ebd3387f45e8b292b472f3539e675031f12cf156c07c309c6403044f71fed"
    }
  ],
  "events": [
    {
      "members": [],
      "class_hash": "0x446e655cf4e5040217a068c7dde7b8403e93f4e29bfe9ac89b298b00a8ee922",
      "tag": "pistols-CallToActionEvent",
      "selector": "0x2626522e055d4243cc4565f162bea1b170c6a5fd29721e7bc59607f9b737849"
    },
    {
      "members": [],
      "class_hash": "0x46981bc4e445b09fb3c61da831ebfcf88bdd88ddae0e7ea4c08cf3a7500ee61",
      "tag": "pistols-ChallengeRewardsEvent",
      "selector": "0x5d14202bbb6fb802276824aacd8f0256d17d49407a1909c2de53c66acebcfa8"
    },
    {
      "members": [],
      "class_hash": "0x40e08723693688934151f4bd7da7765e2a3efe511fcde31d63923311f61774c",
      "tag": "pistols-LordsReleaseEvent",
      "selector": "0x7121aa913fad664b07951ce2c9a3ee807c721c6fa15b015d5b6fc22f8daa7a1"
    },
    {
      "members": [],
      "class_hash": "0x144ad20d87812fe2eedd35c1de72c7e42adbd60e2d37706a07f6714d8b996c5",
      "tag": "pistols-PlayerActivityEvent",
      "selector": "0x46a192c105a4598953e7aeaf3809703964eb9e6d65403156d0458dcd2ee379b"
    },
    {
      "members": [],
      "class_hash": "0x5139e06eeffddd491a7563f9e4c10799f98fddfd6f26047e94413e374a19fcf",
      "tag": "pistols-TrophyCreation",
      "selector": "0x193f7990b65fed69ab857fd2526961d796fc50b6a72287c5be68f32415ad80c"
    },
    {
      "members": [],
      "class_hash": "0x95f31367acd360680f16e74f712470bd3faf98aede3393644dad7d6d9c12cb",
      "tag": "pistols-TrophyProgression",
      "selector": "0x528aee6e1c2ad2e0f603b1bfe15e3aefc1ded821cd118e5eab5092b704c79b0"
    }
  ],
  "external_contracts": []
}