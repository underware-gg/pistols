#!/bin/bash
set -e # enable exit on error
source scripts/setup.sh

if [[
  -z "$PROJECT_NAME" ||
  -z "$PROFILE" ||
  -z "$MANIFEST_FILE_PATH" ||
  "$RPC_URL" != "http"* ||
  "$WORLD_ADDRESS" != "0x"* ||
  -z "$WORLD_BLOCK"
]]; then
  echo "! Missing data 👎"
  exit 1
fi

echo "BINDINGS_PATH: $BINDINGS_PATH"
echo "SDK_GAME_PATH: $SDK_GAME_PATH"
echo "SDK_MANIFEST_PATH: $SDK_MANIFEST_PATH"

#-----------------
# build
#
echo "------------------------------------------------------------------------------"
sozo --version
echo "------------------------------------------------------------------------------"
echo ">>> Cleaning..."
execute_command "sozo -P $PROFILE $ARG_OFFLINE clean"
echo ">>> Building..."
if [[ "$PROFILE" == "dev" ]]; then
  execute_command "sozo -P $PROFILE $ARG_OFFLINE build $ARG_BINDINGS"
else
  execute_command "sozo -P $PROFILE $ARG_OFFLINE build"
fi
echo "👍"

#-----------------
# migrate
#
echo "------------------------------------------------------------------------------"
echo ">>> Inspect migrations..."
execute_command "sozo -P $PROFILE $ARG_OFFLINE inspect --world $WORLD_ADDRESS"

if [[ -n "$ARG_INSPECT" ]]; then # if is set
  echo "--- INSPECTED! 👍"
  exit 0
fi

echo ">>> Do migrations..."
# execute_command "sozo -P $PROFILE $ARG_OFFLINE migrate -vvv --world $WORLD_ADDRESS"
execute_command "sozo -P $PROFILE $ARG_OFFLINE migrate --world $WORLD_ADDRESS"
echo "👍"

# echo ">>> Inspect again..."
# execute_command "sozo -P $PROFILE $ARG_OFFLINE inspect --world $WORLD_ADDRESS"

#-----------------
# auth write
#
# scripts/default_auth.sh $PROFILE

#------------------------
# copy manifest to client
#
echo "------------------------------------------------------------------------------"
echo ">>> Copying manifest [$MANIFEST_FILE_PATH] to [$SDK_MANIFEST_PATH/]"
mkdir -p $SDK_MANIFEST_PATH
cp $MANIFEST_FILE_PATH $SDK_MANIFEST_PATH/
echo "👍"

#
# create torii config
export DUEL_TOKEN_ADDRESS=$(get_contract_address "pistols-duel_token")
export DUELIST_TOKEN_ADDRESS=$(get_contract_address "pistols-duelist_token")
export PACK_TOKEN_ADDRESS=$(get_contract_address "pistols-pack_token")
export TOURNAMENT_TOKEN_ADDRESS=$(get_contract_address "pistols-tournament_token")
export FAME_TOKEN_ADDRESS=$(get_contract_address "pistols-fame_coin")
export FOOLS_TOKEN_ADDRESS=$(get_contract_address "pistols-fools_coin")
export LORDS_TOKEN_ADDRESS=${LORDS_ADDRESS:-$(get_contract_address "pistols-lords_mock")}
echo "------------------------------------------------------------------------------"
echo ">>> Create torii config [$TORII_CONFIG_PATH]..."
cp $TORII_CONFIG_TEMPLATE_PATH $TORII_CONFIG_PATH
sed -i '' -e "s|\$profile|$PROFILE|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$world_address|$WORLD_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$world_block|$WORLD_BLOCK|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$rpc_url|$RPC_URL|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$duel_token|$DUEL_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$duelist_token|$DUELIST_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$pack_token|$PACK_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
# sed -i '' -e "s|\$tournament_token|$TOURNAMENT_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$fame_coin|$FAME_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$fools_coin|$FOOLS_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
sed -i '' -e "s|\$lords|$LORDS_TOKEN_ADDRESS|g" $TORII_CONFIG_PATH
cat $TORII_CONFIG_PATH
echo "👍"

#------------------------
# typescript bindings
#
if [[ "$PROFILE" == "dev" ]]; then
  #
  # copy typescript bindings
  if [[ -n "$ARG_BINDINGS" ]]; then # if is set
    cp -R $BINDINGS_PATH/typescript/* $SDK_GAME_PATH/generated/
  fi
  #
  # run generators...
  cd ../client
  echo "------------------------------------------------------------------------------"
  echo ">>> Generate constants..."
  # npm run generate-constants --sdk=../sdk/src/games/pistols
  # npx --package=@underware/pistols-sdk generate-constants --src:"../dojo/src" --out:"../sdk/src/games/pistols/generated/constants.ts"
  # ../sdk/bin/generateConstants.cjs --src:"../dojo/src" --out:"../sdk/src/games/pistols/generated/constants.ts"
  execute_command "npm run generate-constants --sdk=$SDK_GAME_PATH"
  echo "👍?"
  #
  # list copied files
  echo "------------------------------------------------------------------------------"
  ls -ld $SDK_GAME_PATH/* | grep -E 'ts|json'
  cd -
fi

if [[ "$CHAIN_ID" == "SN_SEPOLIA" || "$CHAIN_ID" == "SN_MAIN" ]]; then
  cd ../client
  echo "------------------------------------------------------------------------------"
  echo ">>> Generate controller preset..."
  # npm run generate-controller-preset --sdk=../sdk/src/games/pistols
  # npx --package=@underware/pistols-sdk generate-controller-preset --chain_id:"SN_MAIN" --out:"../sdk/src/games/pistols/generated/preset.json"
  # ../sdk/dist/bin/generateControllerPreset.mjs --chain_id:"SN_MAIN" --out:"../sdk/src/games/pistols/generated/preset.json"
  # cd ../sdk && turbo build && cd -
  execute_command "npm run generate-controller-preset --chain_id="$CHAIN_ID" --sdk=$SDK_GAME_PATH"
  echo "👍?"
  cd -
fi

#------------------
echo "--- DONE! 👍"
