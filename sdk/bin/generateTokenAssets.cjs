#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const { Buffer } = require("node:buffer");

function getFolderFilesRecursively(folder, extensions = []) {
  let files = [];
  fs.readdirSync(folder).forEach(File => {
    const absPath = path.join(folder, File);
    if (fs.statSync(absPath).isDirectory()) {
      if (!absPath.endsWith(`/tests`)) {
        files = files.concat(getFolderFilesRecursively(absPath, extensions));
      }
    } else if (
      extensions.length === 0 ||
      extensions.some(ext => absPath.endsWith(ext))
    ) {
      files.push(absPath);
    }
  });
  return files;
}

function cleanLine(line) {
  const parts = line.split('//');
  const contents = parts[0].trim();
  const comment = parts[1]?.trim();
  return {
    contents,
    comment,
  };
}

//----------------------
// Execution
//
console.log("executing [generateTokenAssets.cjs]...", process.argv)

const sources = [
  {
    source_path: '../../client/public/profiles',
    out_file: '../src/games/pistols/tokens/assets/profiles.tsx',
  },
  {
    source_path: '../../client/public/textures/cards',
    out_file: '../src/games/pistols/tokens/assets/cards.tsx',
  }
];

sources.forEach(source => {
  const srcPath = path.resolve(__dirname, source.source_path);
  const outPath = path.resolve(__dirname, source.out_file);
  // console.log(`SRC PATH:`, srcPath);
  // console.log(`OUT PATH:`, outPath);

  let assets = {};

  let files = getFolderFilesRecursively(srcPath, ['.png', '.jpg']);
  files.forEach(async filePath => {
    const fileContents = fs.readFileSync(filePath);
    // console.log(fileContents);
    let ix = filePath.indexOf('/public/') + '/public'.length;
    let name = filePath.slice(ix).replaceAll('/', '_').replaceAll('.', '_');
    // console.log(`FILE:`, filePath, name);
    const encoded = Buffer.from(fileContents).toString('base64');
    assets[name] = encoded;
  })
  

  // build file contents
  let fileContents = '';
  fileContents += `/* Autogenerated file. Do not edit manually. */\n`;
  fileContents += `\n`;
  fileContents += `// from: ${srcPath}\n`;
  fileContents += `\n`;
  fileContents += `export const assets = ${JSON.stringify(assets, null, 2)}\n`;
  
  // save file
  fs.writeFile(outPath, fileContents, (err) => {
    if (err) {
      console.error("ERROR: error writing file:", err);
    } else {
      console.log("Token assets file generated:", outPath);
    }
  });
})


