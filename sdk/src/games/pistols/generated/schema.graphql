schema {
  query: World__Query
  subscription: World__Subscription
}

"""
Indicates that an Input Object is a OneOf Input Object (and thus requires
                        exactly one of its field be provided)
"""
directive @oneOf on INPUT_OBJECT

"""
Provides a scalar specification URL for specifying the behavior of custom scalar types.
"""
directive @specifiedBy(
  """URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

scalar bool

scalar ByteArray

scalar ContractAddress

scalar Cursor

scalar DateTime

scalar Enum

union ERC__Token = ERC20__Token | ERC721__Token

type ERC20__Token {
  name: String!
  symbol: String!
  decimals: Int!
  contractAddress: String!
  amount: String!
}

type ERC721__Token {
  name: String!
  symbol: String!
  tokenId: String!
  contractAddress: String!
  metadata: String!
  metadataName: String
  metadataDescription: String
  metadataAttributes: String
  imagePath: String!
}

scalar felt252

scalar i128

union ModelUnion = pistols_TrophyCreation | pistols_PlayerRequiredAction | pistols_PlayerActivity | pistols_ScoreboardTable | pistols_Player | pistols_Pact | pistols_ChallengeFameBalance | pistols_TrophyProgression | pistols_Config | pistols_TableConfig | pistols_SeasonConfig | pistols_CoinConfig | pistols_Scoreboard | pistols_Pack | pistols_TokenConfig | pistols_TokenBoundAddress | pistols_PlayerBookmark | pistols_MockedValue | pistols_Challenge | pistols_PlayerOnline | pistols_Payment | pistols_DuelistChallenge | pistols_Duelist | pistols_Round

enum OrderDirection {
  ASC
  DESC
}

type pistols_Challenge {
  duel_id: u128
  table_id: felt252
  premise: Enum
  quote: felt252
  address_a: ContractAddress
  address_b: ContractAddress
  duelist_id_a: u128
  duelist_id_b: u128
  state: Enum
  winner: u8
  timestamp_start: u64
  timestamp_end: u64
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_ChallengeConnection {
  edges: [pistols_ChallengeEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ChallengeEdge {
  node: pistols_Challenge
  cursor: Cursor
}

type pistols_ChallengeFameBalance {
  duel_id: u128
  balance_a: i128
  balance_b: i128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_ChallengeFameBalanceConnection {
  edges: [pistols_ChallengeFameBalanceEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ChallengeFameBalanceEdge {
  node: pistols_ChallengeFameBalance
  cursor: Cursor
}

input pistols_ChallengeFameBalanceOrder {
  direction: OrderDirection!
  field: pistols_ChallengeFameBalanceOrderField!
}

enum pistols_ChallengeFameBalanceOrderField {
  DUEL_ID
  BALANCE_A
  BALANCE_B
}

input pistols_ChallengeFameBalanceWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  balance_a: i128
  balance_aGT: i128
  balance_aGTE: i128
  balance_aLT: i128
  balance_aLTE: i128
  balance_aNEQ: i128
  balance_aEQ: i128
  balance_aNOTIN: [i128]
  balance_aIN: [i128]
  balance_aNOTLIKE: i128
  balance_aLIKE: i128
  balance_b: i128
  balance_bGT: i128
  balance_bGTE: i128
  balance_bLT: i128
  balance_bLTE: i128
  balance_bNEQ: i128
  balance_bEQ: i128
  balance_bNOTIN: [i128]
  balance_bIN: [i128]
  balance_bNOTLIKE: i128
  balance_bLIKE: i128
}

input pistols_ChallengeOrder {
  direction: OrderDirection!
  field: pistols_ChallengeOrderField!
}

enum pistols_ChallengeOrderField {
  DUEL_ID
  TABLE_ID
  PREMISE
  QUOTE
  ADDRESS_A
  ADDRESS_B
  DUELIST_ID_A
  DUELIST_ID_B
  STATE
  WINNER
  TIMESTAMP_START
  TIMESTAMP_END
}

input pistols_ChallengeWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  premise: Enum
  quote: felt252
  quoteGT: felt252
  quoteGTE: felt252
  quoteLT: felt252
  quoteLTE: felt252
  quoteNEQ: felt252
  quoteEQ: felt252
  quoteNOTIN: [felt252]
  quoteIN: [felt252]
  quoteNOTLIKE: felt252
  quoteLIKE: felt252
  address_a: ContractAddress
  address_aGT: ContractAddress
  address_aGTE: ContractAddress
  address_aLT: ContractAddress
  address_aLTE: ContractAddress
  address_aNEQ: ContractAddress
  address_aEQ: ContractAddress
  address_aNOTIN: [ContractAddress]
  address_aIN: [ContractAddress]
  address_aNOTLIKE: ContractAddress
  address_aLIKE: ContractAddress
  address_b: ContractAddress
  address_bGT: ContractAddress
  address_bGTE: ContractAddress
  address_bLT: ContractAddress
  address_bLTE: ContractAddress
  address_bNEQ: ContractAddress
  address_bEQ: ContractAddress
  address_bNOTIN: [ContractAddress]
  address_bIN: [ContractAddress]
  address_bNOTLIKE: ContractAddress
  address_bLIKE: ContractAddress
  duelist_id_a: u128
  duelist_id_aGT: u128
  duelist_id_aGTE: u128
  duelist_id_aLT: u128
  duelist_id_aLTE: u128
  duelist_id_aNEQ: u128
  duelist_id_aEQ: u128
  duelist_id_aNOTIN: [u128]
  duelist_id_aIN: [u128]
  duelist_id_aNOTLIKE: u128
  duelist_id_aLIKE: u128
  duelist_id_b: u128
  duelist_id_bGT: u128
  duelist_id_bGTE: u128
  duelist_id_bLT: u128
  duelist_id_bLTE: u128
  duelist_id_bNEQ: u128
  duelist_id_bEQ: u128
  duelist_id_bNOTIN: [u128]
  duelist_id_bIN: [u128]
  duelist_id_bNOTLIKE: u128
  duelist_id_bLIKE: u128
  state: Enum
  winner: u8
  winnerGT: u8
  winnerGTE: u8
  winnerLT: u8
  winnerLTE: u8
  winnerNEQ: u8
  winnerEQ: u8
  winnerNOTIN: [u8]
  winnerIN: [u8]
  winnerNOTLIKE: u8
  winnerLIKE: u8
  timestamp_start: u64
  timestamp_startGT: u64
  timestamp_startGTE: u64
  timestamp_startLT: u64
  timestamp_startLTE: u64
  timestamp_startNEQ: u64
  timestamp_startEQ: u64
  timestamp_startNOTIN: [u64]
  timestamp_startIN: [u64]
  timestamp_startNOTLIKE: u64
  timestamp_startLIKE: u64
  timestamp_end: u64
  timestamp_endGT: u64
  timestamp_endGTE: u64
  timestamp_endLT: u64
  timestamp_endLTE: u64
  timestamp_endNEQ: u64
  timestamp_endEQ: u64
  timestamp_endNOTIN: [u64]
  timestamp_endIN: [u64]
  timestamp_endNOTLIKE: u64
  timestamp_endLIKE: u64
}

type pistols_CoinConfig {
  coin_address: ContractAddress
  minter_address: ContractAddress
  faucet_amount: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_CoinConfigConnection {
  edges: [pistols_CoinConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_CoinConfigEdge {
  node: pistols_CoinConfig
  cursor: Cursor
}

input pistols_CoinConfigOrder {
  direction: OrderDirection!
  field: pistols_CoinConfigOrderField!
}

enum pistols_CoinConfigOrderField {
  COIN_ADDRESS
  MINTER_ADDRESS
  FAUCET_AMOUNT
}

input pistols_CoinConfigWhereInput {
  coin_address: ContractAddress
  coin_addressGT: ContractAddress
  coin_addressGTE: ContractAddress
  coin_addressLT: ContractAddress
  coin_addressLTE: ContractAddress
  coin_addressNEQ: ContractAddress
  coin_addressEQ: ContractAddress
  coin_addressNOTIN: [ContractAddress]
  coin_addressIN: [ContractAddress]
  coin_addressNOTLIKE: ContractAddress
  coin_addressLIKE: ContractAddress
  minter_address: ContractAddress
  minter_addressGT: ContractAddress
  minter_addressGTE: ContractAddress
  minter_addressLT: ContractAddress
  minter_addressLTE: ContractAddress
  minter_addressNEQ: ContractAddress
  minter_addressEQ: ContractAddress
  minter_addressNOTIN: [ContractAddress]
  minter_addressIN: [ContractAddress]
  minter_addressNOTLIKE: ContractAddress
  minter_addressLIKE: ContractAddress
  faucet_amount: u128
  faucet_amountGT: u128
  faucet_amountGTE: u128
  faucet_amountLT: u128
  faucet_amountLTE: u128
  faucet_amountNEQ: u128
  faucet_amountEQ: u128
  faucet_amountNOTIN: [u128]
  faucet_amountIN: [u128]
  faucet_amountNOTLIKE: u128
  faucet_amountLIKE: u128
}

type pistols_Config {
  key: u8
  treasury_address: ContractAddress
  lords_address: ContractAddress
  vrf_address: ContractAddress
  season_table_id: felt252
  is_paused: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_ConfigConnection {
  edges: [pistols_ConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ConfigEdge {
  node: pistols_Config
  cursor: Cursor
}

input pistols_ConfigOrder {
  direction: OrderDirection!
  field: pistols_ConfigOrderField!
}

enum pistols_ConfigOrderField {
  KEY
  TREASURY_ADDRESS
  LORDS_ADDRESS
  VRF_ADDRESS
  SEASON_TABLE_ID
  IS_PAUSED
}

input pistols_ConfigWhereInput {
  key: u8
  keyGT: u8
  keyGTE: u8
  keyLT: u8
  keyLTE: u8
  keyNEQ: u8
  keyEQ: u8
  keyNOTIN: [u8]
  keyIN: [u8]
  keyNOTLIKE: u8
  keyLIKE: u8
  treasury_address: ContractAddress
  treasury_addressGT: ContractAddress
  treasury_addressGTE: ContractAddress
  treasury_addressLT: ContractAddress
  treasury_addressLTE: ContractAddress
  treasury_addressNEQ: ContractAddress
  treasury_addressEQ: ContractAddress
  treasury_addressNOTIN: [ContractAddress]
  treasury_addressIN: [ContractAddress]
  treasury_addressNOTLIKE: ContractAddress
  treasury_addressLIKE: ContractAddress
  lords_address: ContractAddress
  lords_addressGT: ContractAddress
  lords_addressGTE: ContractAddress
  lords_addressLT: ContractAddress
  lords_addressLTE: ContractAddress
  lords_addressNEQ: ContractAddress
  lords_addressEQ: ContractAddress
  lords_addressNOTIN: [ContractAddress]
  lords_addressIN: [ContractAddress]
  lords_addressNOTLIKE: ContractAddress
  lords_addressLIKE: ContractAddress
  vrf_address: ContractAddress
  vrf_addressGT: ContractAddress
  vrf_addressGTE: ContractAddress
  vrf_addressLT: ContractAddress
  vrf_addressLTE: ContractAddress
  vrf_addressNEQ: ContractAddress
  vrf_addressEQ: ContractAddress
  vrf_addressNOTIN: [ContractAddress]
  vrf_addressIN: [ContractAddress]
  vrf_addressNOTLIKE: ContractAddress
  vrf_addressLIKE: ContractAddress
  season_table_id: felt252
  season_table_idGT: felt252
  season_table_idGTE: felt252
  season_table_idLT: felt252
  season_table_idLTE: felt252
  season_table_idNEQ: felt252
  season_table_idEQ: felt252
  season_table_idNOTIN: [felt252]
  season_table_idIN: [felt252]
  season_table_idNOTLIKE: felt252
  season_table_idLIKE: felt252
  is_paused: bool
}

type pistols_Duelist {
  duelist_id: u128
  profile_type: pistols_ProfileType
  timestamp: u64
  entity: World__Entity
  eventMessage: World__EventMessage
}

input pistols_Duelist_profile_typeWhereInput {
  Duelist: Enum
  Character: Enum
  Bot: Enum
  option: Enum
}

type pistols_DuelistChallenge {
  duelist_id: u128
  duel_id: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_DuelistChallengeConnection {
  edges: [pistols_DuelistChallengeEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_DuelistChallengeEdge {
  node: pistols_DuelistChallenge
  cursor: Cursor
}

input pistols_DuelistChallengeOrder {
  direction: OrderDirection!
  field: pistols_DuelistChallengeOrderField!
}

enum pistols_DuelistChallengeOrderField {
  DUELIST_ID
  DUEL_ID
}

input pistols_DuelistChallengeWhereInput {
  duelist_id: u128
  duelist_idGT: u128
  duelist_idGTE: u128
  duelist_idLT: u128
  duelist_idLTE: u128
  duelist_idNEQ: u128
  duelist_idEQ: u128
  duelist_idNOTIN: [u128]
  duelist_idIN: [u128]
  duelist_idNOTLIKE: u128
  duelist_idLIKE: u128
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
}

type pistols_DuelistConnection {
  edges: [pistols_DuelistEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_DuelistEdge {
  node: pistols_Duelist
  cursor: Cursor
}

input pistols_DuelistOrder {
  direction: OrderDirection!
  field: pistols_DuelistOrderField!
}

enum pistols_DuelistOrderField {
  DUELIST_ID
  PROFILE_TYPE
  TIMESTAMP
}

type pistols_DuelistState {
  chances: u8
  damage: u8
  health: u8
  dice_fire: u8
  honour: u8
}

input pistols_DuelistWhereInput {
  duelist_id: u128
  duelist_idGT: u128
  duelist_idGTE: u128
  duelist_idLT: u128
  duelist_idLTE: u128
  duelist_idNEQ: u128
  duelist_idEQ: u128
  duelist_idNOTIN: [u128]
  duelist_idIN: [u128]
  duelist_idNOTLIKE: u128
  duelist_idLIKE: u128
  profile_type: pistols_Duelist_profile_typeWhereInput
  timestamp: u64
  timestampGT: u64
  timestampGTE: u64
  timestampLT: u64
  timestampLTE: u64
  timestampNEQ: u64
  timestampEQ: u64
  timestampNOTIN: [u64]
  timestampIN: [u64]
  timestampNOTLIKE: u64
  timestampLIKE: u64
}

type pistols_FinalBlow {
  Paces: Enum
  Blades: Enum
  option: Enum
}

type pistols_MockedValue {
  salt: felt252
  value: felt252
  exists: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_MockedValueConnection {
  edges: [pistols_MockedValueEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_MockedValueEdge {
  node: pistols_MockedValue
  cursor: Cursor
}

input pistols_MockedValueOrder {
  direction: OrderDirection!
  field: pistols_MockedValueOrderField!
}

enum pistols_MockedValueOrderField {
  SALT
  VALUE
  EXISTS
}

input pistols_MockedValueWhereInput {
  salt: felt252
  saltGT: felt252
  saltGTE: felt252
  saltLT: felt252
  saltLTE: felt252
  saltNEQ: felt252
  saltEQ: felt252
  saltNOTIN: [felt252]
  saltIN: [felt252]
  saltNOTLIKE: felt252
  saltLIKE: felt252
  value: felt252
  valueGT: felt252
  valueGTE: felt252
  valueLT: felt252
  valueLTE: felt252
  valueNEQ: felt252
  valueEQ: felt252
  valueNOTIN: [felt252]
  valueIN: [felt252]
  valueNOTLIKE: felt252
  valueLIKE: felt252
  exists: bool
}

type pistols_Moves {
  salt: felt252
  hashed: u128
  card_1: u8
  card_2: u8
  card_3: u8
  card_4: u8
}

type pistols_Pack {
  pack_id: u128
  pack_type: Enum
  seed: felt252
  is_open: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PackConnection {
  edges: [pistols_PackEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PackEdge {
  node: pistols_Pack
  cursor: Cursor
}

input pistols_PackOrder {
  direction: OrderDirection!
  field: pistols_PackOrderField!
}

enum pistols_PackOrderField {
  PACK_ID
  PACK_TYPE
  SEED
  IS_OPEN
}

input pistols_PackWhereInput {
  pack_id: u128
  pack_idGT: u128
  pack_idGTE: u128
  pack_idLT: u128
  pack_idLTE: u128
  pack_idNEQ: u128
  pack_idEQ: u128
  pack_idNOTIN: [u128]
  pack_idIN: [u128]
  pack_idNOTLIKE: u128
  pack_idLIKE: u128
  pack_type: Enum
  seed: felt252
  seedGT: felt252
  seedGTE: felt252
  seedLT: felt252
  seedLTE: felt252
  seedNEQ: felt252
  seedEQ: felt252
  seedNOTIN: [felt252]
  seedIN: [felt252]
  seedNOTLIKE: felt252
  seedLIKE: felt252
  is_open: bool
}

type pistols_Pact {
  table_id: felt252
  pair: u128
  duel_id: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PactConnection {
  edges: [pistols_PactEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PactEdge {
  node: pistols_Pact
  cursor: Cursor
}

input pistols_PactOrder {
  direction: OrderDirection!
  field: pistols_PactOrderField!
}

enum pistols_PactOrderField {
  TABLE_ID
  PAIR
  DUEL_ID
}

input pistols_PactWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  pair: u128
  pairGT: u128
  pairGTE: u128
  pairLT: u128
  pairLTE: u128
  pairNEQ: u128
  pairEQ: u128
  pairNOTIN: [u128]
  pairIN: [u128]
  pairNOTLIKE: u128
  pairLIKE: u128
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
}

type pistols_Payment {
  key: felt252
  amount: u256
  client_percent: u8
  ranking_percent: u8
  owner_percent: u8
  pool_percent: u8
  treasury_percent: u8
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PaymentConnection {
  edges: [pistols_PaymentEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PaymentEdge {
  node: pistols_Payment
  cursor: Cursor
}

input pistols_PaymentOrder {
  direction: OrderDirection!
  field: pistols_PaymentOrderField!
}

enum pistols_PaymentOrderField {
  KEY
  AMOUNT
  CLIENT_PERCENT
  RANKING_PERCENT
  OWNER_PERCENT
  POOL_PERCENT
  TREASURY_PERCENT
}

input pistols_PaymentWhereInput {
  key: felt252
  keyGT: felt252
  keyGTE: felt252
  keyLT: felt252
  keyLTE: felt252
  keyNEQ: felt252
  keyEQ: felt252
  keyNOTIN: [felt252]
  keyIN: [felt252]
  keyNOTLIKE: felt252
  keyLIKE: felt252
  amount: u256
  amountGT: u256
  amountGTE: u256
  amountLT: u256
  amountLTE: u256
  amountNEQ: u256
  amountEQ: u256
  amountNOTIN: [u256]
  amountIN: [u256]
  amountNOTLIKE: u256
  amountLIKE: u256
  client_percent: u8
  client_percentGT: u8
  client_percentGTE: u8
  client_percentLT: u8
  client_percentLTE: u8
  client_percentNEQ: u8
  client_percentEQ: u8
  client_percentNOTIN: [u8]
  client_percentIN: [u8]
  client_percentNOTLIKE: u8
  client_percentLIKE: u8
  ranking_percent: u8
  ranking_percentGT: u8
  ranking_percentGTE: u8
  ranking_percentLT: u8
  ranking_percentLTE: u8
  ranking_percentNEQ: u8
  ranking_percentEQ: u8
  ranking_percentNOTIN: [u8]
  ranking_percentIN: [u8]
  ranking_percentNOTLIKE: u8
  ranking_percentLIKE: u8
  owner_percent: u8
  owner_percentGT: u8
  owner_percentGTE: u8
  owner_percentLT: u8
  owner_percentLTE: u8
  owner_percentNEQ: u8
  owner_percentEQ: u8
  owner_percentNOTIN: [u8]
  owner_percentIN: [u8]
  owner_percentNOTLIKE: u8
  owner_percentLIKE: u8
  pool_percent: u8
  pool_percentGT: u8
  pool_percentGTE: u8
  pool_percentLT: u8
  pool_percentLTE: u8
  pool_percentNEQ: u8
  pool_percentEQ: u8
  pool_percentNOTIN: [u8]
  pool_percentIN: [u8]
  pool_percentNOTLIKE: u8
  pool_percentLIKE: u8
  treasury_percent: u8
  treasury_percentGT: u8
  treasury_percentGTE: u8
  treasury_percentLT: u8
  treasury_percentLTE: u8
  treasury_percentNEQ: u8
  treasury_percentEQ: u8
  treasury_percentNOTIN: [u8]
  treasury_percentIN: [u8]
  treasury_percentNOTLIKE: u8
  treasury_percentLIKE: u8
}

type pistols_Player {
  player_address: ContractAddress
  timestamp_registered: u64
  claimed_welcome_pack: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PlayerActivity {
  player_address: ContractAddress
  timestamp: u64
  activity: Enum
  identifier: felt252
  is_public: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PlayerActivityConnection {
  edges: [pistols_PlayerActivityEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PlayerActivityEdge {
  node: pistols_PlayerActivity
  cursor: Cursor
}

input pistols_PlayerActivityOrder {
  direction: OrderDirection!
  field: pistols_PlayerActivityOrderField!
}

enum pistols_PlayerActivityOrderField {
  PLAYER_ADDRESS
  TIMESTAMP
  ACTIVITY
  IDENTIFIER
  IS_PUBLIC
}

input pistols_PlayerActivityWhereInput {
  player_address: ContractAddress
  player_addressGT: ContractAddress
  player_addressGTE: ContractAddress
  player_addressLT: ContractAddress
  player_addressLTE: ContractAddress
  player_addressNEQ: ContractAddress
  player_addressEQ: ContractAddress
  player_addressNOTIN: [ContractAddress]
  player_addressIN: [ContractAddress]
  player_addressNOTLIKE: ContractAddress
  player_addressLIKE: ContractAddress
  timestamp: u64
  timestampGT: u64
  timestampGTE: u64
  timestampLT: u64
  timestampLTE: u64
  timestampNEQ: u64
  timestampEQ: u64
  timestampNOTIN: [u64]
  timestampIN: [u64]
  timestampNOTLIKE: u64
  timestampLIKE: u64
  activity: Enum
  identifier: felt252
  identifierGT: felt252
  identifierGTE: felt252
  identifierLT: felt252
  identifierLTE: felt252
  identifierNEQ: felt252
  identifierEQ: felt252
  identifierNOTIN: [felt252]
  identifierIN: [felt252]
  identifierNOTLIKE: felt252
  identifierLIKE: felt252
  is_public: bool
}

type pistols_PlayerBookmark {
  identity: ContractAddress
  target_address: ContractAddress
  target_id: u128
  enabled: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PlayerBookmarkConnection {
  edges: [pistols_PlayerBookmarkEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PlayerBookmarkEdge {
  node: pistols_PlayerBookmark
  cursor: Cursor
}

input pistols_PlayerBookmarkOrder {
  direction: OrderDirection!
  field: pistols_PlayerBookmarkOrderField!
}

enum pistols_PlayerBookmarkOrderField {
  IDENTITY
  TARGET_ADDRESS
  TARGET_ID
  ENABLED
}

input pistols_PlayerBookmarkWhereInput {
  identity: ContractAddress
  identityGT: ContractAddress
  identityGTE: ContractAddress
  identityLT: ContractAddress
  identityLTE: ContractAddress
  identityNEQ: ContractAddress
  identityEQ: ContractAddress
  identityNOTIN: [ContractAddress]
  identityIN: [ContractAddress]
  identityNOTLIKE: ContractAddress
  identityLIKE: ContractAddress
  target_address: ContractAddress
  target_addressGT: ContractAddress
  target_addressGTE: ContractAddress
  target_addressLT: ContractAddress
  target_addressLTE: ContractAddress
  target_addressNEQ: ContractAddress
  target_addressEQ: ContractAddress
  target_addressNOTIN: [ContractAddress]
  target_addressIN: [ContractAddress]
  target_addressNOTLIKE: ContractAddress
  target_addressLIKE: ContractAddress
  target_id: u128
  target_idGT: u128
  target_idGTE: u128
  target_idLT: u128
  target_idLTE: u128
  target_idNEQ: u128
  target_idEQ: u128
  target_idNOTIN: [u128]
  target_idIN: [u128]
  target_idNOTLIKE: u128
  target_idLIKE: u128
  enabled: bool
}

type pistols_PlayerConnection {
  edges: [pistols_PlayerEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PlayerEdge {
  node: pistols_Player
  cursor: Cursor
}

type pistols_PlayerOnline {
  identity: ContractAddress
  timestamp: u64
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PlayerOnlineConnection {
  edges: [pistols_PlayerOnlineEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PlayerOnlineEdge {
  node: pistols_PlayerOnline
  cursor: Cursor
}

input pistols_PlayerOnlineOrder {
  direction: OrderDirection!
  field: pistols_PlayerOnlineOrderField!
}

enum pistols_PlayerOnlineOrderField {
  IDENTITY
  TIMESTAMP
}

input pistols_PlayerOnlineWhereInput {
  identity: ContractAddress
  identityGT: ContractAddress
  identityGTE: ContractAddress
  identityLT: ContractAddress
  identityLTE: ContractAddress
  identityNEQ: ContractAddress
  identityEQ: ContractAddress
  identityNOTIN: [ContractAddress]
  identityIN: [ContractAddress]
  identityNOTLIKE: ContractAddress
  identityLIKE: ContractAddress
  timestamp: u64
  timestampGT: u64
  timestampGTE: u64
  timestampLT: u64
  timestampLTE: u64
  timestampNEQ: u64
  timestampEQ: u64
  timestampNOTIN: [u64]
  timestampIN: [u64]
  timestampNOTLIKE: u64
  timestampLIKE: u64
}

input pistols_PlayerOrder {
  direction: OrderDirection!
  field: pistols_PlayerOrderField!
}

enum pistols_PlayerOrderField {
  PLAYER_ADDRESS
  TIMESTAMP_REGISTERED
  CLAIMED_WELCOME_PACK
}

type pistols_PlayerRequiredAction {
  duelist_id: u128
  duel_id: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_PlayerRequiredActionConnection {
  edges: [pistols_PlayerRequiredActionEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_PlayerRequiredActionEdge {
  node: pistols_PlayerRequiredAction
  cursor: Cursor
}

input pistols_PlayerRequiredActionOrder {
  direction: OrderDirection!
  field: pistols_PlayerRequiredActionOrderField!
}

enum pistols_PlayerRequiredActionOrderField {
  DUELIST_ID
  DUEL_ID
}

input pistols_PlayerRequiredActionWhereInput {
  duelist_id: u128
  duelist_idGT: u128
  duelist_idGTE: u128
  duelist_idLT: u128
  duelist_idLTE: u128
  duelist_idNEQ: u128
  duelist_idEQ: u128
  duelist_idNOTIN: [u128]
  duelist_idIN: [u128]
  duelist_idNOTLIKE: u128
  duelist_idLIKE: u128
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
}

input pistols_PlayerWhereInput {
  player_address: ContractAddress
  player_addressGT: ContractAddress
  player_addressGTE: ContractAddress
  player_addressLT: ContractAddress
  player_addressLTE: ContractAddress
  player_addressNEQ: ContractAddress
  player_addressEQ: ContractAddress
  player_addressNOTIN: [ContractAddress]
  player_addressIN: [ContractAddress]
  player_addressNOTLIKE: ContractAddress
  player_addressLIKE: ContractAddress
  timestamp_registered: u64
  timestamp_registeredGT: u64
  timestamp_registeredGTE: u64
  timestamp_registeredLT: u64
  timestamp_registeredLTE: u64
  timestamp_registeredNEQ: u64
  timestamp_registeredEQ: u64
  timestamp_registeredNOTIN: [u64]
  timestamp_registeredIN: [u64]
  timestamp_registeredNOTLIKE: u64
  timestamp_registeredLIKE: u64
  claimed_welcome_pack: bool
}

type pistols_ProfileType {
  Duelist: Enum
  Character: Enum
  Bot: Enum
  option: Enum
}

type pistols_Round {
  duel_id: u128
  moves_a: pistols_Moves
  moves_b: pistols_Moves
  state_a: pistols_DuelistState
  state_b: pistols_DuelistState
  state: Enum
  final_blow: pistols_FinalBlow
  entity: World__Entity
  eventMessage: World__EventMessage
}

input pistols_Round_final_blowWhereInput {
  Paces: Enum
  Blades: Enum
  option: Enum
}

input pistols_Round_moves_aWhereInput {
  salt: felt252
  saltGT: felt252
  saltGTE: felt252
  saltLT: felt252
  saltLTE: felt252
  saltNEQ: felt252
  saltEQ: felt252
  saltNOTIN: [felt252]
  saltIN: [felt252]
  saltNOTLIKE: felt252
  saltLIKE: felt252
  hashed: u128
  hashedGT: u128
  hashedGTE: u128
  hashedLT: u128
  hashedLTE: u128
  hashedNEQ: u128
  hashedEQ: u128
  hashedNOTIN: [u128]
  hashedIN: [u128]
  hashedNOTLIKE: u128
  hashedLIKE: u128
  card_1: u8
  card_1GT: u8
  card_1GTE: u8
  card_1LT: u8
  card_1LTE: u8
  card_1NEQ: u8
  card_1EQ: u8
  card_1NOTIN: [u8]
  card_1IN: [u8]
  card_1NOTLIKE: u8
  card_1LIKE: u8
  card_2: u8
  card_2GT: u8
  card_2GTE: u8
  card_2LT: u8
  card_2LTE: u8
  card_2NEQ: u8
  card_2EQ: u8
  card_2NOTIN: [u8]
  card_2IN: [u8]
  card_2NOTLIKE: u8
  card_2LIKE: u8
  card_3: u8
  card_3GT: u8
  card_3GTE: u8
  card_3LT: u8
  card_3LTE: u8
  card_3NEQ: u8
  card_3EQ: u8
  card_3NOTIN: [u8]
  card_3IN: [u8]
  card_3NOTLIKE: u8
  card_3LIKE: u8
  card_4: u8
  card_4GT: u8
  card_4GTE: u8
  card_4LT: u8
  card_4LTE: u8
  card_4NEQ: u8
  card_4EQ: u8
  card_4NOTIN: [u8]
  card_4IN: [u8]
  card_4NOTLIKE: u8
  card_4LIKE: u8
}

input pistols_Round_moves_bWhereInput {
  salt: felt252
  saltGT: felt252
  saltGTE: felt252
  saltLT: felt252
  saltLTE: felt252
  saltNEQ: felt252
  saltEQ: felt252
  saltNOTIN: [felt252]
  saltIN: [felt252]
  saltNOTLIKE: felt252
  saltLIKE: felt252
  hashed: u128
  hashedGT: u128
  hashedGTE: u128
  hashedLT: u128
  hashedLTE: u128
  hashedNEQ: u128
  hashedEQ: u128
  hashedNOTIN: [u128]
  hashedIN: [u128]
  hashedNOTLIKE: u128
  hashedLIKE: u128
  card_1: u8
  card_1GT: u8
  card_1GTE: u8
  card_1LT: u8
  card_1LTE: u8
  card_1NEQ: u8
  card_1EQ: u8
  card_1NOTIN: [u8]
  card_1IN: [u8]
  card_1NOTLIKE: u8
  card_1LIKE: u8
  card_2: u8
  card_2GT: u8
  card_2GTE: u8
  card_2LT: u8
  card_2LTE: u8
  card_2NEQ: u8
  card_2EQ: u8
  card_2NOTIN: [u8]
  card_2IN: [u8]
  card_2NOTLIKE: u8
  card_2LIKE: u8
  card_3: u8
  card_3GT: u8
  card_3GTE: u8
  card_3LT: u8
  card_3LTE: u8
  card_3NEQ: u8
  card_3EQ: u8
  card_3NOTIN: [u8]
  card_3IN: [u8]
  card_3NOTLIKE: u8
  card_3LIKE: u8
  card_4: u8
  card_4GT: u8
  card_4GTE: u8
  card_4LT: u8
  card_4LTE: u8
  card_4NEQ: u8
  card_4EQ: u8
  card_4NOTIN: [u8]
  card_4IN: [u8]
  card_4NOTLIKE: u8
  card_4LIKE: u8
}

input pistols_Round_state_aWhereInput {
  chances: u8
  chancesGT: u8
  chancesGTE: u8
  chancesLT: u8
  chancesLTE: u8
  chancesNEQ: u8
  chancesEQ: u8
  chancesNOTIN: [u8]
  chancesIN: [u8]
  chancesNOTLIKE: u8
  chancesLIKE: u8
  damage: u8
  damageGT: u8
  damageGTE: u8
  damageLT: u8
  damageLTE: u8
  damageNEQ: u8
  damageEQ: u8
  damageNOTIN: [u8]
  damageIN: [u8]
  damageNOTLIKE: u8
  damageLIKE: u8
  health: u8
  healthGT: u8
  healthGTE: u8
  healthLT: u8
  healthLTE: u8
  healthNEQ: u8
  healthEQ: u8
  healthNOTIN: [u8]
  healthIN: [u8]
  healthNOTLIKE: u8
  healthLIKE: u8
  dice_fire: u8
  dice_fireGT: u8
  dice_fireGTE: u8
  dice_fireLT: u8
  dice_fireLTE: u8
  dice_fireNEQ: u8
  dice_fireEQ: u8
  dice_fireNOTIN: [u8]
  dice_fireIN: [u8]
  dice_fireNOTLIKE: u8
  dice_fireLIKE: u8
  honour: u8
  honourGT: u8
  honourGTE: u8
  honourLT: u8
  honourLTE: u8
  honourNEQ: u8
  honourEQ: u8
  honourNOTIN: [u8]
  honourIN: [u8]
  honourNOTLIKE: u8
  honourLIKE: u8
}

input pistols_Round_state_bWhereInput {
  chances: u8
  chancesGT: u8
  chancesGTE: u8
  chancesLT: u8
  chancesLTE: u8
  chancesNEQ: u8
  chancesEQ: u8
  chancesNOTIN: [u8]
  chancesIN: [u8]
  chancesNOTLIKE: u8
  chancesLIKE: u8
  damage: u8
  damageGT: u8
  damageGTE: u8
  damageLT: u8
  damageLTE: u8
  damageNEQ: u8
  damageEQ: u8
  damageNOTIN: [u8]
  damageIN: [u8]
  damageNOTLIKE: u8
  damageLIKE: u8
  health: u8
  healthGT: u8
  healthGTE: u8
  healthLT: u8
  healthLTE: u8
  healthNEQ: u8
  healthEQ: u8
  healthNOTIN: [u8]
  healthIN: [u8]
  healthNOTLIKE: u8
  healthLIKE: u8
  dice_fire: u8
  dice_fireGT: u8
  dice_fireGTE: u8
  dice_fireLT: u8
  dice_fireLTE: u8
  dice_fireNEQ: u8
  dice_fireEQ: u8
  dice_fireNOTIN: [u8]
  dice_fireIN: [u8]
  dice_fireNOTLIKE: u8
  dice_fireLIKE: u8
  honour: u8
  honourGT: u8
  honourGTE: u8
  honourLT: u8
  honourLTE: u8
  honourNEQ: u8
  honourEQ: u8
  honourNOTIN: [u8]
  honourIN: [u8]
  honourNOTLIKE: u8
  honourLIKE: u8
}

type pistols_RoundConnection {
  edges: [pistols_RoundEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_RoundEdge {
  node: pistols_Round
  cursor: Cursor
}

input pistols_RoundOrder {
  direction: OrderDirection!
  field: pistols_RoundOrderField!
}

enum pistols_RoundOrderField {
  DUEL_ID
  MOVES_A
  MOVES_B
  STATE_A
  STATE_B
  STATE
  FINAL_BLOW
}

input pistols_RoundWhereInput {
  duel_id: u128
  duel_idGT: u128
  duel_idGTE: u128
  duel_idLT: u128
  duel_idLTE: u128
  duel_idNEQ: u128
  duel_idEQ: u128
  duel_idNOTIN: [u128]
  duel_idIN: [u128]
  duel_idNOTLIKE: u128
  duel_idLIKE: u128
  moves_a: pistols_Round_moves_aWhereInput
  moves_b: pistols_Round_moves_bWhereInput
  state_a: pistols_Round_state_aWhereInput
  state_b: pistols_Round_state_bWhereInput
  state: Enum
  final_blow: pistols_Round_final_blowWhereInput
}

type pistols_Score {
  honour: u8
  total_duels: u16
  total_wins: u16
  total_losses: u16
  total_draws: u16
  honour_history: u64
}

type pistols_Scoreboard {
  holder: felt252
  score: pistols_Score
  entity: World__Entity
  eventMessage: World__EventMessage
}

input pistols_Scoreboard_scoreWhereInput {
  honour: u8
  honourGT: u8
  honourGTE: u8
  honourLT: u8
  honourLTE: u8
  honourNEQ: u8
  honourEQ: u8
  honourNOTIN: [u8]
  honourIN: [u8]
  honourNOTLIKE: u8
  honourLIKE: u8
  total_duels: u16
  total_duelsGT: u16
  total_duelsGTE: u16
  total_duelsLT: u16
  total_duelsLTE: u16
  total_duelsNEQ: u16
  total_duelsEQ: u16
  total_duelsNOTIN: [u16]
  total_duelsIN: [u16]
  total_duelsNOTLIKE: u16
  total_duelsLIKE: u16
  total_wins: u16
  total_winsGT: u16
  total_winsGTE: u16
  total_winsLT: u16
  total_winsLTE: u16
  total_winsNEQ: u16
  total_winsEQ: u16
  total_winsNOTIN: [u16]
  total_winsIN: [u16]
  total_winsNOTLIKE: u16
  total_winsLIKE: u16
  total_losses: u16
  total_lossesGT: u16
  total_lossesGTE: u16
  total_lossesLT: u16
  total_lossesLTE: u16
  total_lossesNEQ: u16
  total_lossesEQ: u16
  total_lossesNOTIN: [u16]
  total_lossesIN: [u16]
  total_lossesNOTLIKE: u16
  total_lossesLIKE: u16
  total_draws: u16
  total_drawsGT: u16
  total_drawsGTE: u16
  total_drawsLT: u16
  total_drawsLTE: u16
  total_drawsNEQ: u16
  total_drawsEQ: u16
  total_drawsNOTIN: [u16]
  total_drawsIN: [u16]
  total_drawsNOTLIKE: u16
  total_drawsLIKE: u16
  honour_history: u64
  honour_historyGT: u64
  honour_historyGTE: u64
  honour_historyLT: u64
  honour_historyLTE: u64
  honour_historyNEQ: u64
  honour_historyEQ: u64
  honour_historyNOTIN: [u64]
  honour_historyIN: [u64]
  honour_historyNOTLIKE: u64
  honour_historyLIKE: u64
}

type pistols_ScoreboardConnection {
  edges: [pistols_ScoreboardEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ScoreboardEdge {
  node: pistols_Scoreboard
  cursor: Cursor
}

input pistols_ScoreboardOrder {
  direction: OrderDirection!
  field: pistols_ScoreboardOrderField!
}

enum pistols_ScoreboardOrderField {
  HOLDER
  SCORE
}

type pistols_ScoreboardTable {
  holder: felt252
  table_id: felt252
  score: pistols_Score
  entity: World__Entity
  eventMessage: World__EventMessage
}

input pistols_ScoreboardTable_scoreWhereInput {
  honour: u8
  honourGT: u8
  honourGTE: u8
  honourLT: u8
  honourLTE: u8
  honourNEQ: u8
  honourEQ: u8
  honourNOTIN: [u8]
  honourIN: [u8]
  honourNOTLIKE: u8
  honourLIKE: u8
  total_duels: u16
  total_duelsGT: u16
  total_duelsGTE: u16
  total_duelsLT: u16
  total_duelsLTE: u16
  total_duelsNEQ: u16
  total_duelsEQ: u16
  total_duelsNOTIN: [u16]
  total_duelsIN: [u16]
  total_duelsNOTLIKE: u16
  total_duelsLIKE: u16
  total_wins: u16
  total_winsGT: u16
  total_winsGTE: u16
  total_winsLT: u16
  total_winsLTE: u16
  total_winsNEQ: u16
  total_winsEQ: u16
  total_winsNOTIN: [u16]
  total_winsIN: [u16]
  total_winsNOTLIKE: u16
  total_winsLIKE: u16
  total_losses: u16
  total_lossesGT: u16
  total_lossesGTE: u16
  total_lossesLT: u16
  total_lossesLTE: u16
  total_lossesNEQ: u16
  total_lossesEQ: u16
  total_lossesNOTIN: [u16]
  total_lossesIN: [u16]
  total_lossesNOTLIKE: u16
  total_lossesLIKE: u16
  total_draws: u16
  total_drawsGT: u16
  total_drawsGTE: u16
  total_drawsLT: u16
  total_drawsLTE: u16
  total_drawsNEQ: u16
  total_drawsEQ: u16
  total_drawsNOTIN: [u16]
  total_drawsIN: [u16]
  total_drawsNOTLIKE: u16
  total_drawsLIKE: u16
  honour_history: u64
  honour_historyGT: u64
  honour_historyGTE: u64
  honour_historyLT: u64
  honour_historyLTE: u64
  honour_historyNEQ: u64
  honour_historyEQ: u64
  honour_historyNOTIN: [u64]
  honour_historyIN: [u64]
  honour_historyNOTLIKE: u64
  honour_historyLIKE: u64
}

type pistols_ScoreboardTableConnection {
  edges: [pistols_ScoreboardTableEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_ScoreboardTableEdge {
  node: pistols_ScoreboardTable
  cursor: Cursor
}

input pistols_ScoreboardTableOrder {
  direction: OrderDirection!
  field: pistols_ScoreboardTableOrderField!
}

enum pistols_ScoreboardTableOrderField {
  HOLDER
  TABLE_ID
  SCORE
}

input pistols_ScoreboardTableWhereInput {
  holder: felt252
  holderGT: felt252
  holderGTE: felt252
  holderLT: felt252
  holderLTE: felt252
  holderNEQ: felt252
  holderEQ: felt252
  holderNOTIN: [felt252]
  holderIN: [felt252]
  holderNOTLIKE: felt252
  holderLIKE: felt252
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  score: pistols_ScoreboardTable_scoreWhereInput
}

input pistols_ScoreboardWhereInput {
  holder: felt252
  holderGT: felt252
  holderGTE: felt252
  holderLT: felt252
  holderLTE: felt252
  holderNEQ: felt252
  holderEQ: felt252
  holderNOTIN: [felt252]
  holderIN: [felt252]
  holderNOTLIKE: felt252
  holderLIKE: felt252
  score: pistols_Scoreboard_scoreWhereInput
}

type pistols_SeasonConfig {
  table_id: felt252
  season_id: u16
  timestamp_start: u64
  timestamp_end: u64
  phase: Enum
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_SeasonConfigConnection {
  edges: [pistols_SeasonConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_SeasonConfigEdge {
  node: pistols_SeasonConfig
  cursor: Cursor
}

input pistols_SeasonConfigOrder {
  direction: OrderDirection!
  field: pistols_SeasonConfigOrderField!
}

enum pistols_SeasonConfigOrderField {
  TABLE_ID
  SEASON_ID
  TIMESTAMP_START
  TIMESTAMP_END
  PHASE
}

input pistols_SeasonConfigWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  season_id: u16
  season_idGT: u16
  season_idGTE: u16
  season_idLT: u16
  season_idLTE: u16
  season_idNEQ: u16
  season_idEQ: u16
  season_idNOTIN: [u16]
  season_idIN: [u16]
  season_idNOTLIKE: u16
  season_idLIKE: u16
  timestamp_start: u64
  timestamp_startGT: u64
  timestamp_startGTE: u64
  timestamp_startLT: u64
  timestamp_startLTE: u64
  timestamp_startNEQ: u64
  timestamp_startEQ: u64
  timestamp_startNOTIN: [u64]
  timestamp_startIN: [u64]
  timestamp_startNOTLIKE: u64
  timestamp_startLIKE: u64
  timestamp_end: u64
  timestamp_endGT: u64
  timestamp_endGTE: u64
  timestamp_endLT: u64
  timestamp_endLTE: u64
  timestamp_endNEQ: u64
  timestamp_endEQ: u64
  timestamp_endNOTIN: [u64]
  timestamp_endIN: [u64]
  timestamp_endNOTLIKE: u64
  timestamp_endLIKE: u64
  phase: Enum
}

type pistols_TableConfig {
  table_id: felt252
  description: felt252
  table_type: Enum
  fee_collector_address: ContractAddress
  fee_min: u128
  is_open: bool
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_TableConfigConnection {
  edges: [pistols_TableConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TableConfigEdge {
  node: pistols_TableConfig
  cursor: Cursor
}

input pistols_TableConfigOrder {
  direction: OrderDirection!
  field: pistols_TableConfigOrderField!
}

enum pistols_TableConfigOrderField {
  TABLE_ID
  DESCRIPTION
  TABLE_TYPE
  FEE_COLLECTOR_ADDRESS
  FEE_MIN
  IS_OPEN
}

input pistols_TableConfigWhereInput {
  table_id: felt252
  table_idGT: felt252
  table_idGTE: felt252
  table_idLT: felt252
  table_idLTE: felt252
  table_idNEQ: felt252
  table_idEQ: felt252
  table_idNOTIN: [felt252]
  table_idIN: [felt252]
  table_idNOTLIKE: felt252
  table_idLIKE: felt252
  description: felt252
  descriptionGT: felt252
  descriptionGTE: felt252
  descriptionLT: felt252
  descriptionLTE: felt252
  descriptionNEQ: felt252
  descriptionEQ: felt252
  descriptionNOTIN: [felt252]
  descriptionIN: [felt252]
  descriptionNOTLIKE: felt252
  descriptionLIKE: felt252
  table_type: Enum
  fee_collector_address: ContractAddress
  fee_collector_addressGT: ContractAddress
  fee_collector_addressGTE: ContractAddress
  fee_collector_addressLT: ContractAddress
  fee_collector_addressLTE: ContractAddress
  fee_collector_addressNEQ: ContractAddress
  fee_collector_addressEQ: ContractAddress
  fee_collector_addressNOTIN: [ContractAddress]
  fee_collector_addressIN: [ContractAddress]
  fee_collector_addressNOTLIKE: ContractAddress
  fee_collector_addressLIKE: ContractAddress
  fee_min: u128
  fee_minGT: u128
  fee_minGTE: u128
  fee_minLT: u128
  fee_minLTE: u128
  fee_minNEQ: u128
  fee_minEQ: u128
  fee_minNOTIN: [u128]
  fee_minIN: [u128]
  fee_minNOTLIKE: u128
  fee_minLIKE: u128
  is_open: bool
}

type pistols_Task {
  id: felt252
  total: u32
  description: ByteArray
}

type pistols_TokenBoundAddress {
  recipient: ContractAddress
  contract_address: ContractAddress
  token_id: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_TokenBoundAddressConnection {
  edges: [pistols_TokenBoundAddressEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TokenBoundAddressEdge {
  node: pistols_TokenBoundAddress
  cursor: Cursor
}

input pistols_TokenBoundAddressOrder {
  direction: OrderDirection!
  field: pistols_TokenBoundAddressOrderField!
}

enum pistols_TokenBoundAddressOrderField {
  RECIPIENT
  CONTRACT_ADDRESS
  TOKEN_ID
}

input pistols_TokenBoundAddressWhereInput {
  recipient: ContractAddress
  recipientGT: ContractAddress
  recipientGTE: ContractAddress
  recipientLT: ContractAddress
  recipientLTE: ContractAddress
  recipientNEQ: ContractAddress
  recipientEQ: ContractAddress
  recipientNOTIN: [ContractAddress]
  recipientIN: [ContractAddress]
  recipientNOTLIKE: ContractAddress
  recipientLIKE: ContractAddress
  contract_address: ContractAddress
  contract_addressGT: ContractAddress
  contract_addressGTE: ContractAddress
  contract_addressLT: ContractAddress
  contract_addressLTE: ContractAddress
  contract_addressNEQ: ContractAddress
  contract_addressEQ: ContractAddress
  contract_addressNOTIN: [ContractAddress]
  contract_addressIN: [ContractAddress]
  contract_addressNOTLIKE: ContractAddress
  contract_addressLIKE: ContractAddress
  token_id: u128
  token_idGT: u128
  token_idGTE: u128
  token_idLT: u128
  token_idLTE: u128
  token_idNEQ: u128
  token_idEQ: u128
  token_idNOTIN: [u128]
  token_idIN: [u128]
  token_idNOTLIKE: u128
  token_idLIKE: u128
}

type pistols_TokenConfig {
  token_address: ContractAddress
  minter_address: ContractAddress
  renderer_address: ContractAddress
  minted_count: u128
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_TokenConfigConnection {
  edges: [pistols_TokenConfigEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TokenConfigEdge {
  node: pistols_TokenConfig
  cursor: Cursor
}

input pistols_TokenConfigOrder {
  direction: OrderDirection!
  field: pistols_TokenConfigOrderField!
}

enum pistols_TokenConfigOrderField {
  TOKEN_ADDRESS
  MINTER_ADDRESS
  RENDERER_ADDRESS
  MINTED_COUNT
}

input pistols_TokenConfigWhereInput {
  token_address: ContractAddress
  token_addressGT: ContractAddress
  token_addressGTE: ContractAddress
  token_addressLT: ContractAddress
  token_addressLTE: ContractAddress
  token_addressNEQ: ContractAddress
  token_addressEQ: ContractAddress
  token_addressNOTIN: [ContractAddress]
  token_addressIN: [ContractAddress]
  token_addressNOTLIKE: ContractAddress
  token_addressLIKE: ContractAddress
  minter_address: ContractAddress
  minter_addressGT: ContractAddress
  minter_addressGTE: ContractAddress
  minter_addressLT: ContractAddress
  minter_addressLTE: ContractAddress
  minter_addressNEQ: ContractAddress
  minter_addressEQ: ContractAddress
  minter_addressNOTIN: [ContractAddress]
  minter_addressIN: [ContractAddress]
  minter_addressNOTLIKE: ContractAddress
  minter_addressLIKE: ContractAddress
  renderer_address: ContractAddress
  renderer_addressGT: ContractAddress
  renderer_addressGTE: ContractAddress
  renderer_addressLT: ContractAddress
  renderer_addressLTE: ContractAddress
  renderer_addressNEQ: ContractAddress
  renderer_addressEQ: ContractAddress
  renderer_addressNOTIN: [ContractAddress]
  renderer_addressIN: [ContractAddress]
  renderer_addressNOTLIKE: ContractAddress
  renderer_addressLIKE: ContractAddress
  minted_count: u128
  minted_countGT: u128
  minted_countGTE: u128
  minted_countLT: u128
  minted_countLTE: u128
  minted_countNEQ: u128
  minted_countEQ: u128
  minted_countNOTIN: [u128]
  minted_countIN: [u128]
  minted_countNOTLIKE: u128
  minted_countLIKE: u128
}

type pistols_TrophyCreation {
  id: felt252
  hidden: bool
  index: u8
  points: u16
  start: u64
  end: u64
  group: felt252
  icon: felt252
  title: felt252
  description: ByteArray
  tasks: [pistols_Task]
  data: ByteArray
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_TrophyCreationConnection {
  edges: [pistols_TrophyCreationEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TrophyCreationEdge {
  node: pistols_TrophyCreation
  cursor: Cursor
}

input pistols_TrophyCreationOrder {
  direction: OrderDirection!
  field: pistols_TrophyCreationOrderField!
}

enum pistols_TrophyCreationOrderField {
  ID
  HIDDEN
  INDEX
  POINTS
  START
  END
  GROUP
  ICON
  TITLE
  DESCRIPTION
  TASKS
  DATA
}

input pistols_TrophyCreationWhereInput {
  id: felt252
  idGT: felt252
  idGTE: felt252
  idLT: felt252
  idLTE: felt252
  idNEQ: felt252
  idEQ: felt252
  idNOTIN: [felt252]
  idIN: [felt252]
  idNOTLIKE: felt252
  idLIKE: felt252
  hidden: bool
  index: u8
  indexGT: u8
  indexGTE: u8
  indexLT: u8
  indexLTE: u8
  indexNEQ: u8
  indexEQ: u8
  indexNOTIN: [u8]
  indexIN: [u8]
  indexNOTLIKE: u8
  indexLIKE: u8
  points: u16
  pointsGT: u16
  pointsGTE: u16
  pointsLT: u16
  pointsLTE: u16
  pointsNEQ: u16
  pointsEQ: u16
  pointsNOTIN: [u16]
  pointsIN: [u16]
  pointsNOTLIKE: u16
  pointsLIKE: u16
  start: u64
  startGT: u64
  startGTE: u64
  startLT: u64
  startLTE: u64
  startNEQ: u64
  startEQ: u64
  startNOTIN: [u64]
  startIN: [u64]
  startNOTLIKE: u64
  startLIKE: u64
  end: u64
  endGT: u64
  endGTE: u64
  endLT: u64
  endLTE: u64
  endNEQ: u64
  endEQ: u64
  endNOTIN: [u64]
  endIN: [u64]
  endNOTLIKE: u64
  endLIKE: u64
  group: felt252
  groupGT: felt252
  groupGTE: felt252
  groupLT: felt252
  groupLTE: felt252
  groupNEQ: felt252
  groupEQ: felt252
  groupNOTIN: [felt252]
  groupIN: [felt252]
  groupNOTLIKE: felt252
  groupLIKE: felt252
  icon: felt252
  iconGT: felt252
  iconGTE: felt252
  iconLT: felt252
  iconLTE: felt252
  iconNEQ: felt252
  iconEQ: felt252
  iconNOTIN: [felt252]
  iconIN: [felt252]
  iconNOTLIKE: felt252
  iconLIKE: felt252
  title: felt252
  titleGT: felt252
  titleGTE: felt252
  titleLT: felt252
  titleLTE: felt252
  titleNEQ: felt252
  titleEQ: felt252
  titleNOTIN: [felt252]
  titleIN: [felt252]
  titleNOTLIKE: felt252
  titleLIKE: felt252
  description: ByteArray
  descriptionGT: ByteArray
  descriptionGTE: ByteArray
  descriptionLT: ByteArray
  descriptionLTE: ByteArray
  descriptionNEQ: ByteArray
  descriptionEQ: ByteArray
  descriptionNOTIN: [ByteArray]
  descriptionIN: [ByteArray]
  descriptionNOTLIKE: ByteArray
  descriptionLIKE: ByteArray
  data: ByteArray
  dataGT: ByteArray
  dataGTE: ByteArray
  dataLT: ByteArray
  dataLTE: ByteArray
  dataNEQ: ByteArray
  dataEQ: ByteArray
  dataNOTIN: [ByteArray]
  dataIN: [ByteArray]
  dataNOTLIKE: ByteArray
  dataLIKE: ByteArray
}

type pistols_TrophyProgression {
  player_id: felt252
  task_id: felt252
  count: u32
  time: u64
  entity: World__Entity
  eventMessage: World__EventMessage
}

type pistols_TrophyProgressionConnection {
  edges: [pistols_TrophyProgressionEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type pistols_TrophyProgressionEdge {
  node: pistols_TrophyProgression
  cursor: Cursor
}

input pistols_TrophyProgressionOrder {
  direction: OrderDirection!
  field: pistols_TrophyProgressionOrderField!
}

enum pistols_TrophyProgressionOrderField {
  PLAYER_ID
  TASK_ID
  COUNT
  TIME
}

input pistols_TrophyProgressionWhereInput {
  player_id: felt252
  player_idGT: felt252
  player_idGTE: felt252
  player_idLT: felt252
  player_idLTE: felt252
  player_idNEQ: felt252
  player_idEQ: felt252
  player_idNOTIN: [felt252]
  player_idIN: [felt252]
  player_idNOTLIKE: felt252
  player_idLIKE: felt252
  task_id: felt252
  task_idGT: felt252
  task_idGTE: felt252
  task_idLT: felt252
  task_idLTE: felt252
  task_idNEQ: felt252
  task_idEQ: felt252
  task_idNOTIN: [felt252]
  task_idIN: [felt252]
  task_idNOTLIKE: felt252
  task_idLIKE: felt252
  count: u32
  countGT: u32
  countGTE: u32
  countLT: u32
  countLTE: u32
  countNEQ: u32
  countEQ: u32
  countNOTIN: [u32]
  countIN: [u32]
  countNOTLIKE: u32
  countLIKE: u32
  time: u64
  timeGT: u64
  timeGTE: u64
  timeLT: u64
  timeLTE: u64
  timeNEQ: u64
  timeEQ: u64
  timeNOTIN: [u64]
  timeIN: [u64]
  timeNOTLIKE: u64
  timeLIKE: u64
}

type Token__Balance {
  tokenMetadata: ERC__Token!
}

type Token__BalanceConnection {
  edges: [Token__BalanceEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type Token__BalanceEdge {
  node: Token__Balance
  cursor: Cursor
}

type Token__Transfer {
  from: String!
  to: String!
  executedAt: String!
  tokenMetadata: ERC__Token!
  transactionHash: String!
}

type Token__TransferConnection {
  edges: [Token__TransferEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type Token__TransferEdge {
  node: Token__Transfer
  cursor: Cursor
}

scalar u128

scalar u16

scalar u256

scalar u32

scalar u64

scalar u8

type World__Content {
  name: String
  description: String
  website: String
  iconUri: String
  coverUri: String
  socials: [World__Social]
}

type World__Entity {
  id: ID
  keys: [String]
  eventId: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  models: [ModelUnion]
}

type World__EntityConnection {
  edges: [World__EntityEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EntityEdge {
  node: World__Entity
  cursor: Cursor
}

type World__Event {
  id: ID
  keys: [String]
  data: [String]
  executedAt: DateTime
  createdAt: DateTime
  transactionHash: String
}

type World__EventConnection {
  edges: [World__EventEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EventEdge {
  node: World__Event
  cursor: Cursor
}

type World__EventMessage {
  id: ID
  keys: [String]
  eventId: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  models: [ModelUnion]
}

type World__EventMessageConnection {
  edges: [World__EventMessageEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__EventMessageEdge {
  node: World__EventMessage
  cursor: Cursor
}

type World__Metadata {
  id: ID
  uri: String
  worldAddress: String!
  content: World__Content
  iconImg: String
  coverImg: String
  executedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

type World__MetadataConnection {
  edges: [World__MetadataEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__MetadataEdge {
  node: World__Metadata
  cursor: Cursor
}

type World__Model {
  id: ID
  name: String
  namespace: String
  classHash: felt252
  contractAddress: felt252
  transactionHash: felt252
  executedAt: DateTime
  createdAt: DateTime
}

type World__ModelConnection {
  edges: [World__ModelEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__ModelEdge {
  node: World__Model
  cursor: Cursor
}

input World__ModelOrder {
  direction: OrderDirection!
  field: World__ModelOrderField!
}

enum World__ModelOrderField {
  NAME
  CLASS_HASH
}

type World__PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

type World__Query {
  entity(id: ID!): World__Entity!
  entities(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, keys: [String]): World__EntityConnection
  eventMessage(id: ID!): World__EventMessage!
  eventMessages(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, keys: [String]): World__EventMessageConnection
  events(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, keys: [String]): World__EventConnection
  metadatas(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int): World__MetadataConnection
  model(id: ID!): World__Model!
  models(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, order: World__ModelOrder): World__ModelConnection
  transaction(transactionHash: ID!): World__Transaction!
  transactions(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int): World__TransactionConnection
  tokenBalances(accountAddress: String!, first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int): Token__BalanceConnection
  tokenTransfers(accountAddress: String!, first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int): Token__TransferConnection
  pistolsTrophyCreationModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_TrophyCreationWhereInput, order: pistols_TrophyCreationOrder): pistols_TrophyCreationConnection
  pistolsPlayerRequiredActionModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PlayerRequiredActionWhereInput, order: pistols_PlayerRequiredActionOrder): pistols_PlayerRequiredActionConnection
  pistolsPlayerActivityModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PlayerActivityWhereInput, order: pistols_PlayerActivityOrder): pistols_PlayerActivityConnection
  pistolsScoreboardTableModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_ScoreboardTableWhereInput, order: pistols_ScoreboardTableOrder): pistols_ScoreboardTableConnection
  pistolsPlayerModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PlayerWhereInput, order: pistols_PlayerOrder): pistols_PlayerConnection
  pistolsPactModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PactWhereInput, order: pistols_PactOrder): pistols_PactConnection
  pistolsChallengeFameBalanceModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_ChallengeFameBalanceWhereInput, order: pistols_ChallengeFameBalanceOrder): pistols_ChallengeFameBalanceConnection
  pistolsTrophyProgressionModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_TrophyProgressionWhereInput, order: pistols_TrophyProgressionOrder): pistols_TrophyProgressionConnection
  pistolsConfigModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_ConfigWhereInput, order: pistols_ConfigOrder): pistols_ConfigConnection
  pistolsTableConfigModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_TableConfigWhereInput, order: pistols_TableConfigOrder): pistols_TableConfigConnection
  pistolsSeasonConfigModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_SeasonConfigWhereInput, order: pistols_SeasonConfigOrder): pistols_SeasonConfigConnection
  pistolsCoinConfigModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_CoinConfigWhereInput, order: pistols_CoinConfigOrder): pistols_CoinConfigConnection
  pistolsScoreboardModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_ScoreboardWhereInput, order: pistols_ScoreboardOrder): pistols_ScoreboardConnection
  pistolsPackModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PackWhereInput, order: pistols_PackOrder): pistols_PackConnection
  pistolsTokenConfigModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_TokenConfigWhereInput, order: pistols_TokenConfigOrder): pistols_TokenConfigConnection
  pistolsTokenBoundAddressModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_TokenBoundAddressWhereInput, order: pistols_TokenBoundAddressOrder): pistols_TokenBoundAddressConnection
  pistolsPlayerBookmarkModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PlayerBookmarkWhereInput, order: pistols_PlayerBookmarkOrder): pistols_PlayerBookmarkConnection
  pistolsMockedValueModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_MockedValueWhereInput, order: pistols_MockedValueOrder): pistols_MockedValueConnection
  pistolsChallengeModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_ChallengeWhereInput, order: pistols_ChallengeOrder): pistols_ChallengeConnection
  pistolsPlayerOnlineModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PlayerOnlineWhereInput, order: pistols_PlayerOnlineOrder): pistols_PlayerOnlineConnection
  pistolsPaymentModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_PaymentWhereInput, order: pistols_PaymentOrder): pistols_PaymentConnection
  pistolsDuelistChallengeModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_DuelistChallengeWhereInput, order: pistols_DuelistChallengeOrder): pistols_DuelistChallengeConnection
  pistolsDuelistModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_DuelistWhereInput, order: pistols_DuelistOrder): pistols_DuelistConnection
  pistolsRoundModels(first: Int, last: Int, before: Cursor, after: Cursor, offset: Int, limit: Int, where: pistols_RoundWhereInput, order: pistols_RoundOrder): pistols_RoundConnection
}

type World__Social {
  name: String
  url: String
}

type World__Subscription {
  entityUpdated(id: ID): World__Entity!
  eventMessageUpdated(id: ID): World__EventMessage!
  eventEmitted(keys: [String]): World__Event!
  modelRegistered(id: ID): World__Model!
}

type World__Transaction {
  id: ID
  transactionHash: felt252
  senderAddress: felt252
  calldata: [felt252]
  maxFee: felt252
  signature: [felt252]
  nonce: felt252
  executedAt: DateTime
  createdAt: DateTime
}

type World__TransactionConnection {
  edges: [World__TransactionEdge]
  totalCount: Int!
  pageInfo: World__PageInfo!
}

type World__TransactionEdge {
  node: World__Transaction
  cursor: Cursor
}

