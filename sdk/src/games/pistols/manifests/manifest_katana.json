{
  "world": {
    "class_hash": "0x4b767fda48530353c2e44e4b9433f4d75c6c9974aaff43ecc00de9455eb71b8",
    "address": "0x96b34d54cdb8b7e9cd70f3696836aee77a8aba856ce297659e21173b2dd75e",
    "seed": "pistols",
    "name": "Pistols at Dawn",
    "entrypoints": [
      "uuid",
      "set_metadata",
      "register_namespace",
      "register_event",
      "register_model",
      "register_contract",
      "init_contract",
      "upgrade_event",
      "upgrade_model",
      "upgrade_contract",
      "emit_event",
      "emit_events",
      "set_entity",
      "set_entities",
      "delete_entity",
      "delete_entities",
      "grant_owner",
      "revoke_owner",
      "grant_writer",
      "revoke_writer",
      "upgrade"
    ],
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "metadata_hash",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::array::Span::<core::felt252>>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::array::Span::<core::felt252>>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::model::definition::ModelIndex>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::model::definition::ModelIndex>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_events",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0x407afe3b3089a1f6fe8b40344a37904510c605a422588dfd338fb6fc0a3e057",
      "class_hash": "0x73e1de8918adb65b79ece21cb907767b092d100e8987af918ceb684e7cc6c0b",
      "abi": [
        {
          "type": "impl",
          "name": "admin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "admin__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "treasury_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "lords_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "vrf_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "AdminImpl",
          "interface_name": "pistols::systems::admin::IAdmin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::models::table::TableType",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Season",
              "type": "()"
            },
            {
              "name": "Tutorial",
              "type": "()"
            },
            {
              "name": "Practice",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::table::TableConfig",
          "members": [
            {
              "name": "table_id",
              "type": "core::felt252"
            },
            {
              "name": "description",
              "type": "core::felt252"
            },
            {
              "name": "table_type",
              "type": "pistols::models::table::TableType"
            },
            {
              "name": "fee_collector_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_min",
              "type": "core::integer::u128"
            },
            {
              "name": "is_open",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::admin::IAdmin",
          "items": [
            {
              "type": "function",
              "name": "am_i_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_admin",
              "inputs": [
                {
                  "name": "account_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "granted",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_treasury",
              "inputs": [
                {
                  "name": "treasury_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_paused",
              "inputs": [
                {
                  "name": "paused",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "open_table",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "is_open",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_table",
              "inputs": [
                {
                  "name": "table",
                  "type": "pistols::models::table::TableConfig"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::admin::admin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "0x0",
        "0x0"
      ],
      "tag": "pistols-admin",
      "selector": "0x36fd20372b5d47c092e2fede52897075978efb732aeaeb155d19eb8147f6497",
      "systems": [
        "dojo_init",
        "grant_admin",
        "set_treasury",
        "set_paused",
        "open_table",
        "set_table",
        "upgrade"
      ]
    },
    {
      "address": "0x5795ce918b6821dae1fd466fa718cc0709dd4ac7616c869c11edf082d077307",
      "class_hash": "0x3495ebdc3248fb51b08c4779b8214f7c6377daafadc7e8111f1dac4132abc69",
      "abi": [
        {
          "type": "impl",
          "name": "bank__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "bank__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "BankImpl",
          "interface_name": "pistols::systems::bank::IBank"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::payment::Payment",
          "members": [
            {
              "name": "key",
              "type": "core::felt252"
            },
            {
              "name": "amount",
              "type": "core::integer::u256"
            },
            {
              "name": "client_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "ranking_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "owner_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "pool_percent",
              "type": "core::integer::u8"
            },
            {
              "name": "treasury_percent",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::bank::IBank",
          "items": [
            {
              "type": "function",
              "name": "charge",
              "inputs": [
                {
                  "name": "payer",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "payment",
                  "type": "pistols::models::payment::Payment"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::bank::bank::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-bank",
      "selector": "0x7a683ab68bc70300995da8de5781002e781f22ba246fe239ebeff02b2230375",
      "systems": [
        "charge",
        "upgrade"
      ]
    },
    {
      "address": "0x4be15880565d54e4a984027f4e7da4594e98aa32d768d0bf0bca8e2764adab7",
      "class_hash": "0x20c9c72b8059881619790a9929fb8cefd39cba2726701f5b35bf09ac4bb02ff",
      "abi": [
        {
          "type": "impl",
          "name": "duel_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "duel_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            },
            {
              "name": "minter_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "renderer_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "fee_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duel_token::IDuelTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::premise::Premise",
          "variants": [
            {
              "name": "Undefined",
              "type": "()"
            },
            {
              "name": "Matter",
              "type": "()"
            },
            {
              "name": "Debt",
              "type": "()"
            },
            {
              "name": "Dispute",
              "type": "()"
            },
            {
              "name": "Honour",
              "type": "()"
            },
            {
              "name": "Hatred",
              "type": "()"
            },
            {
              "name": "Blood",
              "type": "()"
            },
            {
              "name": "Nothing",
              "type": "()"
            },
            {
              "name": "Tournament",
              "type": "()"
            },
            {
              "name": "Training",
              "type": "()"
            },
            {
              "name": "Tutorial",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::challenge_state::ChallengeState",
          "variants": [
            {
              "name": "Null",
              "type": "()"
            },
            {
              "name": "Awaiting",
              "type": "()"
            },
            {
              "name": "Withdrawn",
              "type": "()"
            },
            {
              "name": "Refused",
              "type": "()"
            },
            {
              "name": "Expired",
              "type": "()"
            },
            {
              "name": "InProgress",
              "type": "()"
            },
            {
              "name": "Resolved",
              "type": "()"
            },
            {
              "name": "Draw",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duel_token::IDuelTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "calc_mint_fee",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "address_a",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "address_b",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "has_pact",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "address_a",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "address_b",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_join",
              "inputs": [
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "create_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "challenged_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "premise",
                  "type": "pistols::types::premise::Premise"
                },
                {
                  "name": "quote",
                  "type": "core::felt252"
                },
                {
                  "name": "table_id",
                  "type": "core::felt252"
                },
                {
                  "name": "expire_hours",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reply_duel",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "accepted",
                  "type": "core::bool"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::challenge_state::ChallengeState"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_to_winner",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenRendererImpl",
          "interface_name": "pistols::systems::components::erc721_hooks::ITokenRenderer"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::byte_array::ByteArray>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::erc721_hooks::ITokenRenderer",
          "items": [
            {
              "type": "function",
              "name": "get_token_name",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_description",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_image",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_attribute_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_metadata_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721MixinImpl",
          "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::ERC721ABI",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duel_token::duel_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:pistols.stage.underware.gg",
        "0x0",
        "0x0",
        "0"
      ],
      "tag": "pistols-duel_token",
      "selector": "0x670a5c673ac776e00e61c279cf7dc0efbe282787f4d719498e55643c5116063",
      "systems": [
        "dojo_init",
        "create_duel",
        "reply_duel",
        "transfer_to_winner",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll"
      ]
    },
    {
      "address": "0x37eeb8ed0fda22734fcda1755197b80e317183133842cb90b6846cb9e785158",
      "class_hash": "0x7e6366095f7f5e88533d415cc92f219e071a0c2dc5e855cbc4096baac8c7f3c",
      "abi": [
        {
          "type": "impl",
          "name": "duelist_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "duelist_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            },
            {
              "name": "renderer_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "DuelistTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u128>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u128>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::duelist_token::IDuelistTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "is_alive",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "calc_fame_reward",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "mint_duelists",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u32"
                },
                {
                  "name": "seed",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_fame_reward",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "(core::integer::i128, core::integer::i128)"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenRendererImpl",
          "interface_name": "pistols::systems::components::erc721_hooks::ITokenRenderer"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::byte_array::ByteArray>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::erc721_hooks::ITokenRenderer",
          "items": [
            {
              "type": "function",
              "name": "get_token_name",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_description",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_image",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_attribute_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_metadata_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721MixinImpl",
          "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::ERC721ABI",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::duelist_token::duelist_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:pistols.stage.underware.gg",
        "0x0"
      ],
      "tag": "pistols-duelist_token",
      "selector": "0x45c96d20393520c5dffeb2f2929fb599034d4fc6e9d423e6a641222fb60a25e",
      "systems": [
        "dojo_init",
        "mint_duelists",
        "transfer_fame_reward",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll"
      ]
    },
    {
      "address": "0x57b3ce3c1be85d4e2fa33465c7547a21d14cb786912ddff4022b32c7a981edf",
      "class_hash": "0x639e1c117466ae7907988f3831d750acd754e901bf82361d172df8ebaf85fcb",
      "abi": [
        {
          "type": "impl",
          "name": "fame_coin__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "fame_coin__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "FamePublicImpl",
          "interface_name": "pistols::systems::tokens::fame_coin::IFameCoinPublic"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::fame_coin::IFameCoinPublic",
          "items": [
            {
              "type": "function",
              "name": "minted_duelist",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount_paid",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "updated_duelist",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenBoundPublicImpl",
          "interface_name": "pistols::systems::components::token_bound::ITokenBoundPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_bound::ITokenBoundPublic",
          "items": [
            {
              "type": "function",
              "name": "address_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_of_address",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::starknet::contract_address::ContractAddress, core::integer::u128)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer_from_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "sender_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "recipient_token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "burn_from_token",
              "inputs": [
                {
                  "name": "contract_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::fame_coin::fame_coin::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            },
            {
              "name": "TokenBoundEvent",
              "type": "pistols::systems::components::token_bound::TokenBoundComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-fame_coin",
      "selector": "0x371b95cb7056eb2d21819662e973ed32c345c989aa9f6097e7811a5665a0b0a",
      "systems": [
        "dojo_init",
        "minted_duelist",
        "updated_duelist",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom",
        "transfer_from_token",
        "burn_from_token"
      ]
    },
    {
      "address": "0xe1cfc1306ea07cac5774bf228069f80997b66abc8351dd25005f21c24b0688",
      "class_hash": "0x790be7b8bd1cd70841556db00885a90b7f44a5447e3f84a65bc254dad180b2a",
      "abi": [
        {
          "type": "impl",
          "name": "game__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "game__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "ActionsImpl",
          "interface_name": "pistols::systems::game::IGame"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::array::Span::<core::integer::u8>>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::array::Span::<core::integer::u8>>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::paces::PacesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Paces1",
              "type": "()"
            },
            {
              "name": "Paces2",
              "type": "()"
            },
            {
              "name": "Paces3",
              "type": "()"
            },
            {
              "name": "Paces4",
              "type": "()"
            },
            {
              "name": "Paces5",
              "type": "()"
            },
            {
              "name": "Paces6",
              "type": "()"
            },
            {
              "name": "Paces7",
              "type": "()"
            },
            {
              "name": "Paces8",
              "type": "()"
            },
            {
              "name": "Paces9",
              "type": "()"
            },
            {
              "name": "Paces10",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::env::EnvCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "DamageUp",
              "type": "()"
            },
            {
              "name": "DamageDown",
              "type": "()"
            },
            {
              "name": "ChancesUp",
              "type": "()"
            },
            {
              "name": "ChancesDown",
              "type": "()"
            },
            {
              "name": "DoubleDamageUp",
              "type": "()"
            },
            {
              "name": "DoubleChancesUp",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsHit",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsMiss",
              "type": "()"
            },
            {
              "name": "SpecialDoubleTactics",
              "type": "()"
            },
            {
              "name": "SpecialNoTactics",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::tactics::TacticsCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Insult",
              "type": "()"
            },
            {
              "name": "CoinToss",
              "type": "()"
            },
            {
              "name": "Vengeful",
              "type": "()"
            },
            {
              "name": "ThickCoat",
              "type": "()"
            },
            {
              "name": "Reversal",
              "type": "()"
            },
            {
              "name": "Bananas",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::SpecialsDrawn",
          "members": [
            {
              "name": "tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "coin_toss",
              "type": "core::bool"
            },
            {
              "name": "reversal",
              "type": "core::bool"
            },
            {
              "name": "shots_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "tactics_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::blades::BladesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Seppuku",
              "type": "()"
            },
            {
              "name": "PocketPistol",
              "type": "()"
            },
            {
              "name": "Behead",
              "type": "()"
            },
            {
              "name": "Grapple",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::duel_progress::DuelistDrawnCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::DuelistState",
          "members": [
            {
              "name": "chances",
              "type": "core::integer::u8"
            },
            {
              "name": "damage",
              "type": "core::integer::u8"
            },
            {
              "name": "health",
              "type": "core::integer::u8"
            },
            {
              "name": "dice_fire",
              "type": "core::integer::u8"
            },
            {
              "name": "honour",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelStep",
          "members": [
            {
              "name": "pace",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_env",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "dice_env",
              "type": "core::integer::u8"
            },
            {
              "name": "specials_a",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "specials_b",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "card_a",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "card_b",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "state_a",
              "type": "pistols::models::challenge::DuelistState"
            },
            {
              "name": "state_b",
              "type": "pistols::models::challenge::DuelistState"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::types::duel_progress::DuelStep>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::types::duel_progress::DuelStep>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::cards::hand::DuelistHand",
          "members": [
            {
              "name": "card_fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "card_blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelProgress",
          "members": [
            {
              "name": "steps",
              "type": "core::array::Span::<pistols::types::duel_progress::DuelStep>"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "hand_a",
              "type": "pistols::types::cards::hand::DuelistHand"
            },
            {
              "name": "hand_b",
              "type": "pistols::types::cards::hand::DuelistHand"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::game::IGame",
          "items": [
            {
              "type": "function",
              "name": "commit_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "hashed",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "moves",
                  "type": "core::array::Span::<core::integer::u8>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "collect",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_duel_deck",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::array::Span::<core::integer::u8>>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duel_progress",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::duel_progress::DuelProgress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_collect",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "test_validate_commit_message",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "signature",
                  "type": "core::array::Array::<core::felt252>"
                },
                {
                  "name": "duelId",
                  "type": "core::felt252"
                },
                {
                  "name": "duelistId",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "achievement::components::achievable::AchievableComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::game::game::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "AchievableEvent",
              "type": "achievement::components::achievable::AchievableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-game",
      "selector": "0x32c102830cbffaddecbdce7ef85735e6f08da08ee762a2d7b09304b6533dd57",
      "systems": [
        "dojo_init",
        "commit_moves",
        "reveal_moves",
        "collect",
        "upgrade"
      ]
    },
    {
      "address": "0x4c512e2f9cc7bbbfd0af7dc382fcf89128bdfd7c56810975121e3a065bc3ff2",
      "class_hash": "0x4b686a8c94e9b5b047e9183b14bd0c4f7d625141f5de27e5c43054ca8531b57",
      "abi": [
        {
          "type": "impl",
          "name": "lords_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "lords_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "minter_contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "faucet_amount",
              "type": "core::integer::u128"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "LordsMockPublicImpl",
          "interface_name": "pistols::systems::tokens::lords_mock::ILordsMockPublic"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::lords_mock::ILordsMockPublic",
          "items": [
            {
              "type": "function",
              "name": "faucet",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::coin_component::CoinComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::lords_mock::lords_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "CoinEvent",
              "type": "pistols::systems::components::coin_component::CoinComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x0",
        "10000000000000000000000"
      ],
      "tag": "pistols-lords_mock",
      "selector": "0x2b1156e63a09854c3d8dba0cad93b41e1fc4662466a0ffc2a9ec9e54b4bc788",
      "systems": [
        "dojo_init",
        "faucet",
        "mint",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom"
      ]
    },
    {
      "address": "0x7b7e11ef93818f7cff65ad1c96a8cb99d587d3944cbfb4c343fdbc1ade52ab3",
      "class_hash": "0x222f1c93c639943794ac96f1ccd61539acb575d11c32b9552f162e69740284",
      "abi": [
        {
          "type": "impl",
          "name": "pack_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "pack_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "PackTokenPublicImpl",
          "interface_name": "pistols::systems::tokens::pack_token::IPackTokenPublic"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::models::pack::PackType",
          "variants": [
            {
              "name": "Unknown",
              "type": "()"
            },
            {
              "name": "WelcomePack",
              "type": "()"
            },
            {
              "name": "Duelists5x",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u128>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u128>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::pack::Pack",
          "members": [
            {
              "name": "pack_id",
              "type": "core::integer::u128"
            },
            {
              "name": "pack_type",
              "type": "pistols::models::pack::PackType"
            },
            {
              "name": "seed",
              "type": "core::felt252"
            },
            {
              "name": "is_open",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tokens::pack_token::IPackTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "can_claim_welcome_pack",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "can_purchase",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "calc_mint_fee",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "claim_welcome_pack",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "purchase",
              "inputs": [
                {
                  "name": "pack_type",
                  "type": "pistols::models::pack::PackType"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::models::pack::Pack"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "open",
              "inputs": [
                {
                  "name": "pack_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::integer::u128>"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenRendererImpl",
          "interface_name": "pistols::systems::components::erc721_hooks::ITokenRenderer"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::byte_array::ByteArray>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::erc721_hooks::ITokenRenderer",
          "items": [
            {
              "type": "function",
              "name": "get_token_name",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_description",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_token_image",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_attribute_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_metadata_pairs",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::array::Span::<core::byte_array::ByteArray>"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721MixinImpl",
          "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::ERC721ABI",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_uri",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "tokenURI",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TokenComponentPublicImpl",
          "interface_name": "pistols::systems::components::token_component::ITokenComponentPublic"
        },
        {
          "type": "interface",
          "name": "pistols::systems::components::token_component::ITokenComponentPublic",
          "items": [
            {
              "type": "function",
              "name": "can_mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "exists",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_owner_of",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "pistols::systems::components::token_component::TokenComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tokens::pack_token::pack_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "TokenEvent",
              "type": "pistols::systems::components::token_component::TokenComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "sstr:pistols.stage.underware.gg"
      ],
      "tag": "pistols-pack_token",
      "selector": "0x3d74e76192285c5a19a63c54a6c2ba5b015a1a25818c2d8f9cf75d7fef2b5c1",
      "systems": [
        "dojo_init",
        "claim_welcome_pack",
        "purchase",
        "open",
        "upgrade",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll"
      ]
    },
    {
      "address": "0x2e30d4869565f08b0694b2a8c582aa439e95b195ab5e30bd4221583786a1241",
      "class_hash": "0xa58d186898c09006f40f550b222ceb74e84b7af1ae0e75f176466dd64a8aa8",
      "abi": [
        {
          "type": "impl",
          "name": "rng__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "rng__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "RngImpl",
          "interface_name": "pistols::systems::rng::IRng"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::systems::rng_mock::MockedValue",
          "members": [
            {
              "name": "salt",
              "type": "core::felt252"
            },
            {
              "name": "value",
              "type": "core::felt252"
            },
            {
              "name": "exists",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::systems::rng_mock::MockedValue>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::systems::rng_mock::MockedValue>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng::IRng",
          "items": [
            {
              "type": "function",
              "name": "reseed",
              "inputs": [
                {
                  "name": "seed",
                  "type": "core::felt252"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "mocked",
                  "type": "core::array::Span::<pistols::systems::rng_mock::MockedValue>"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_mocked",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::rng::rng::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-rng",
      "selector": "0x13f1a6a9ae118440a997d6624230b59f43516220a1208526c3f66e202910504",
      "systems": [
        "upgrade"
      ]
    },
    {
      "address": "0x5bea0e2a9e7f3d5e4c224d263e479470b5ba0fb4290e7096d8bc17bbfb2a0d6",
      "class_hash": "0x5fca4b692c9e4cea7deb5a27d947deded036ce53ad6c0f169c0bf51a0f47610",
      "abi": [
        {
          "type": "impl",
          "name": "rng_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "rng_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "RngImpl",
          "interface_name": "pistols::systems::rng::IRng"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::systems::rng_mock::MockedValue",
          "members": [
            {
              "name": "salt",
              "type": "core::felt252"
            },
            {
              "name": "value",
              "type": "core::felt252"
            },
            {
              "name": "exists",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::systems::rng_mock::MockedValue>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::systems::rng_mock::MockedValue>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng::IRng",
          "items": [
            {
              "type": "function",
              "name": "reseed",
              "inputs": [
                {
                  "name": "seed",
                  "type": "core::felt252"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "mocked",
                  "type": "core::array::Span::<pistols::systems::rng_mock::MockedValue>"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_mocked",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "MockerImpl",
          "interface_name": "pistols::systems::rng_mock::IMocker"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::rng_mock::IMocker",
          "items": [
            {
              "type": "function",
              "name": "set_mocked_values",
              "inputs": [
                {
                  "name": "salts",
                  "type": "core::array::Span::<core::felt252>"
                },
                {
                  "name": "values",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::rng_mock::rng_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-rng_mock",
      "selector": "0xfbd28ccd9cffb9b1783a0bf7cdf42a9b88c49d4568116cd1f7ee70ba415705",
      "systems": [
        "set_mocked_values",
        "upgrade"
      ]
    },
    {
      "address": "0x28a89a83b51e9355749e3de3e30d7da949fbe0dde59240ce1f148dfe21d6ee9",
      "class_hash": "0x5441d1cd35927f186c85d859d0d1a9562d67fe7d3a6603a0c1a4ecfc823a079",
      "abi": [
        {
          "type": "impl",
          "name": "tutorial__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "tutorial__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "ActionsImpl",
          "interface_name": "pistols::systems::tutorial::ITutorial"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::paces::PacesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Paces1",
              "type": "()"
            },
            {
              "name": "Paces2",
              "type": "()"
            },
            {
              "name": "Paces3",
              "type": "()"
            },
            {
              "name": "Paces4",
              "type": "()"
            },
            {
              "name": "Paces5",
              "type": "()"
            },
            {
              "name": "Paces6",
              "type": "()"
            },
            {
              "name": "Paces7",
              "type": "()"
            },
            {
              "name": "Paces8",
              "type": "()"
            },
            {
              "name": "Paces9",
              "type": "()"
            },
            {
              "name": "Paces10",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::env::EnvCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "DamageUp",
              "type": "()"
            },
            {
              "name": "DamageDown",
              "type": "()"
            },
            {
              "name": "ChancesUp",
              "type": "()"
            },
            {
              "name": "ChancesDown",
              "type": "()"
            },
            {
              "name": "DoubleDamageUp",
              "type": "()"
            },
            {
              "name": "DoubleChancesUp",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsHit",
              "type": "()"
            },
            {
              "name": "SpecialAllShotsMiss",
              "type": "()"
            },
            {
              "name": "SpecialDoubleTactics",
              "type": "()"
            },
            {
              "name": "SpecialNoTactics",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::tactics::TacticsCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Insult",
              "type": "()"
            },
            {
              "name": "CoinToss",
              "type": "()"
            },
            {
              "name": "Vengeful",
              "type": "()"
            },
            {
              "name": "ThickCoat",
              "type": "()"
            },
            {
              "name": "Reversal",
              "type": "()"
            },
            {
              "name": "Bananas",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::SpecialsDrawn",
          "members": [
            {
              "name": "tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "coin_toss",
              "type": "core::bool"
            },
            {
              "name": "reversal",
              "type": "core::bool"
            },
            {
              "name": "shots_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "tactics_modifier",
              "type": "pistols::types::cards::env::EnvCard"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::cards::blades::BladesCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Seppuku",
              "type": "()"
            },
            {
              "name": "PocketPistol",
              "type": "()"
            },
            {
              "name": "Behead",
              "type": "()"
            },
            {
              "name": "Grapple",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "pistols::types::duel_progress::DuelistDrawnCard",
          "variants": [
            {
              "name": "None",
              "type": "()"
            },
            {
              "name": "Fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "Blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::models::challenge::DuelistState",
          "members": [
            {
              "name": "chances",
              "type": "core::integer::u8"
            },
            {
              "name": "damage",
              "type": "core::integer::u8"
            },
            {
              "name": "health",
              "type": "core::integer::u8"
            },
            {
              "name": "dice_fire",
              "type": "core::integer::u8"
            },
            {
              "name": "honour",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelStep",
          "members": [
            {
              "name": "pace",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_env",
              "type": "pistols::types::cards::env::EnvCard"
            },
            {
              "name": "dice_env",
              "type": "core::integer::u8"
            },
            {
              "name": "specials_a",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "specials_b",
              "type": "pistols::types::duel_progress::SpecialsDrawn"
            },
            {
              "name": "card_a",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "card_b",
              "type": "pistols::types::duel_progress::DuelistDrawnCard"
            },
            {
              "name": "state_a",
              "type": "pistols::models::challenge::DuelistState"
            },
            {
              "name": "state_b",
              "type": "pistols::models::challenge::DuelistState"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<pistols::types::duel_progress::DuelStep>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<pistols::types::duel_progress::DuelStep>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::cards::hand::DuelistHand",
          "members": [
            {
              "name": "card_fire",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_dodge",
              "type": "pistols::types::cards::paces::PacesCard"
            },
            {
              "name": "card_tactics",
              "type": "pistols::types::cards::tactics::TacticsCard"
            },
            {
              "name": "card_blades",
              "type": "pistols::types::cards::blades::BladesCard"
            }
          ]
        },
        {
          "type": "struct",
          "name": "pistols::types::duel_progress::DuelProgress",
          "members": [
            {
              "name": "steps",
              "type": "core::array::Span::<pistols::types::duel_progress::DuelStep>"
            },
            {
              "name": "winner",
              "type": "core::integer::u8"
            },
            {
              "name": "hand_a",
              "type": "pistols::types::cards::hand::DuelistHand"
            },
            {
              "name": "hand_b",
              "type": "pistols::types::cards::hand::DuelistHand"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::systems::tutorial::ITutorial",
          "items": [
            {
              "type": "function",
              "name": "create_tutorial",
              "inputs": [
                {
                  "name": "player_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "tutorial_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "commit_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "hashed",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_moves",
              "inputs": [
                {
                  "name": "duelist_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "salt",
                  "type": "core::felt252"
                },
                {
                  "name": "moves",
                  "type": "core::array::Span::<core::integer::u8>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "calc_duel_id",
              "inputs": [
                {
                  "name": "player_id",
                  "type": "core::integer::u128"
                },
                {
                  "name": "tutorial_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u128"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_duel_progress",
              "inputs": [
                {
                  "name": "duel_id",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [
                {
                  "type": "pistols::types::duel_progress::DuelProgress"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::tutorial::tutorial::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-tutorial",
      "selector": "0x32f1e04dc2117bb6f46da72734a3910bcaca0e887025d5b1126fd804c256d24",
      "systems": [
        "dojo_init",
        "create_tutorial",
        "commit_moves",
        "reveal_moves",
        "upgrade"
      ]
    },
    {
      "address": "0x2ba57dcc8c93fe36e3a3960ec7e5a00fa891778886e08739b5cc91daa88c193",
      "class_hash": "0x3e14a5e235a049cb64d3c1cfcf7c4740b5137d9949bef51f7f9fbd107e3824e",
      "abi": [
        {
          "type": "impl",
          "name": "vrf_mock__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "vrf_mock__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "VRFMockImpl",
          "interface_name": "pistols::interfaces::vrf::IVrfProvider"
        },
        {
          "type": "enum",
          "name": "pistols::interfaces::vrf::Source",
          "variants": [
            {
              "name": "Nonce",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "Salt",
              "type": "core::felt252"
            }
          ]
        },
        {
          "type": "interface",
          "name": "pistols::interfaces::vrf::IVrfProvider",
          "items": [
            {
              "type": "function",
              "name": "request_random",
              "inputs": [
                {
                  "name": "caller",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "source",
                  "type": "pistols::interfaces::vrf::Source"
                }
              ],
              "outputs": [],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "consume_random",
              "inputs": [
                {
                  "name": "source",
                  "type": "pistols::interfaces::vrf::Source"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "pistols::systems::vrf_mock::vrf_mock::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "pistols-vrf_mock",
      "selector": "0x7d13bd4624d7bc31b13c78648f762d0b293e1ca94e19173659859209082629e",
      "systems": [
        "consume_random",
        "upgrade"
      ]
    }
  ],
  "models": [
    {
      "members": [],
      "class_hash": "0x74fe6d941c364ca88f4e46d47e838751b077ea2d025c987da343ae45e7961db",
      "tag": "pistols-Challenge",
      "selector": "0x673267b69d74c703ea86d97b041278944b49f62b52867345a95d3047b11378a"
    },
    {
      "members": [],
      "class_hash": "0x1de8f3af4dd1ae9d29d52372ef233189e0906da1c5a8e9c8ac7796838b281bf",
      "tag": "pistols-ChallengeFameBalance",
      "selector": "0x4d3c5336d06d93a8d0c67c59bb8d67291581c276b63c66293779d71c48d49bf"
    },
    {
      "members": [],
      "class_hash": "0x10d5db27ad38e30d5a8b8247a45bd79eb6d20947a8573a1e49ef60d4357d029",
      "tag": "pistols-CoinConfig",
      "selector": "0x26fad4dff063a4f2c3b3889723194b9bdbbbf833e44ff2d573af01741b966ac"
    },
    {
      "members": [],
      "class_hash": "0x6afb0202446cefb0b2162a8f90ff580f21c0ae1f61f840c737395736b369e42",
      "tag": "pistols-Config",
      "selector": "0x60742fa7259b7ce3ebc0a2dde90b740d1234c770199a822fa2e7cf779dc0392"
    },
    {
      "members": [],
      "class_hash": "0x7f7183d7237aaea7a5ba8411adcb05cb5834d646d6ce9cf6b6ee67ce7945845",
      "tag": "pistols-Duelist",
      "selector": "0x1ec34ce9ccaa39b540179d85e0dd0d46c1c1ae712f4cb40a9cd7f8c21ebaa46"
    },
    {
      "members": [],
      "class_hash": "0x65c25def292dbbdbbcbf73e7201fbb72220304ef2bce739999b3da24122e0a7",
      "tag": "pistols-DuelistChallenge",
      "selector": "0x4f1193fa385154f58ce9408156cc7812f4424d57dd8ed2b04ca1b980db2ffec"
    },
    {
      "members": [],
      "class_hash": "0x6ce08da6707dea9b8ee283537597c1ae38231b79a912c90a5ba13a16f5f370d",
      "tag": "pistols-MockedValue",
      "selector": "0x8deb0b9e5cc0c6c2089ee6a4bfdd306444147a869b6179c4e22b283a5176dc"
    },
    {
      "members": [],
      "class_hash": "0x26b487c02e0bb655dd41c9c3188ce96d0ca63a91842b9516b27ff7f620b5944",
      "tag": "pistols-Pack",
      "selector": "0x64159b4947adcdc7a87b41f7889ba33495ac8e3a3a333305c7712806763fa2d"
    },
    {
      "members": [],
      "class_hash": "0x11bddd9d8bb964f7eb707accd25dfb2356a69533b839a1ce1003235e1beed21",
      "tag": "pistols-Pact",
      "selector": "0x72a33a6586ae24471fdae1c6f3cc9da6629f3fd3dce300a48324617dd511617"
    },
    {
      "members": [],
      "class_hash": "0x5e5021bb7e3b29991f0a34f8f02ff2b1f4ae5370564dd97990b1728fb7b691d",
      "tag": "pistols-Payment",
      "selector": "0x17a03e9cb461470b9149f9efbd95ad9b217fca9fdccd3827383904c33da96c1"
    },
    {
      "members": [],
      "class_hash": "0x6de1c4db0b753e19adaec99fb0dcfcf242310d09515e02d44626a3dd705bea6",
      "tag": "pistols-Player",
      "selector": "0x4fc7ed2304172cd24d40e2b967bf3642228eec13547b09e0ffdfb85469f6f86"
    },
    {
      "members": [],
      "class_hash": "0x714750966bc4509f84ffe4eb17126aecff15dad372e53308fd01a366f3b2456",
      "tag": "pistols-PlayerBookmark",
      "selector": "0x46db6150404dd9d739a2cd0c5e5036698ab3cfde3a5626ee798e1f1add13a63"
    },
    {
      "members": [],
      "class_hash": "0x7d034486636d050c4f97f077ea105ad10445f8c615a662f539a1a0596964097",
      "tag": "pistols-PlayerOnline",
      "selector": "0x6f3391bc3684ea92009be25543fc6cc734c1f756253523354efdf10e2a57dff"
    },
    {
      "members": [],
      "class_hash": "0x6cd1c6b47b2a054894863dad72194da1e7fd25b45961f2c2594a6581ef0cf00",
      "tag": "pistols-Round",
      "selector": "0x617e0a3d97aa8cb3f83bbb5341ede98d3e3d825b6424bcab0676933fec52bc2"
    },
    {
      "members": [],
      "class_hash": "0x754403c3a788bc79690c26b6f0ea0fceca48e5d8ad196d440b06fa98fa9cde7",
      "tag": "pistols-Scoreboard",
      "selector": "0x18889906443a52ec3b3fd07ba7108bcf2b0067bdec842953530710a9dfdb728"
    },
    {
      "members": [],
      "class_hash": "0x12ea1ef2777d5512df8a9b602051b1510c5b3e21dbcf17d1f3bbae3aa692dfe",
      "tag": "pistols-ScoreboardTable",
      "selector": "0x27c4d05ef5265e1457b48f7ec6151c190f11a3159bbb13322c27c285f7ecc1c"
    },
    {
      "members": [],
      "class_hash": "0x7504a926d7d1c5016ec9dabb8a18a482a33bb387f5b749e1a06f67b7430f6e1",
      "tag": "pistols-SeasonConfig",
      "selector": "0x407b92d935dd7193931243082059cb7180309a73de27eea948ffa0649f6ebf3"
    },
    {
      "members": [],
      "class_hash": "0x72e3ffcde47c95ba57c57e52b54bfc3c65d3b7b20a3cf6a3d5c8506f878b3c3",
      "tag": "pistols-TableConfig",
      "selector": "0x1e8368fc88328662c92a11c0e739bf8b74bcd77a20071d2641a31e1a063c138"
    },
    {
      "members": [],
      "class_hash": "0x671f659064f51031acb06fca060ee3d00d3c050bdc8705478a6124e15d73879",
      "tag": "pistols-TokenBoundAddress",
      "selector": "0x51e7eddb7555dc0cb6f6bdb0de4d85ac38457ede50d70e4f714a27c00047c8f"
    },
    {
      "members": [],
      "class_hash": "0x2012cf9b0477dc05e217ab22eee2d4aea951e5f536c0d638f980cfa4b5dac7b",
      "tag": "pistols-TokenConfig",
      "selector": "0x56ebd3387f45e8b292b472f3539e675031f12cf156c07c309c6403044f71fed"
    }
  ],
  "events": [
    {
      "members": [],
      "class_hash": "0x1bb6c8038961f1954472a5a0fb6bf729c63d4254f13d8d5c40829c2584361ce",
      "tag": "pistols-PlayerActivity",
      "selector": "0x20ac3bc7f231ea11afb0576a200bff82197a6b397f3e5a4299f5a79ab563ff1"
    },
    {
      "members": [],
      "class_hash": "0x33f7988973de99b251705282fe1b151d3a6834e9760fa79279a4da62abd88e0",
      "tag": "pistols-PlayerRequiredAction",
      "selector": "0x7a8a6e4891353356c5c6a727ca9998890e212fb06e892e08f0344973a6c7b4b"
    },
    {
      "members": [],
      "class_hash": "0x19a5c06b3a8417ff3f9883be3acb0e33c835795bd81fb87a5a47e6ed7d2d3af",
      "tag": "pistols-TrophyCreation",
      "selector": "0x193f7990b65fed69ab857fd2526961d796fc50b6a72287c5be68f32415ad80c"
    },
    {
      "members": [],
      "class_hash": "0x1922d2cd8b63eccf66321673234a52126cd9f0ab1bf6298c5abee6ee80c8990",
      "tag": "pistols-TrophyProgression",
      "selector": "0x528aee6e1c2ad2e0f603b1bfe15e3aefc1ded821cd118e5eab5092b704c79b0"
    }
  ]
}